#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7220558093438677494) {
   out_7220558093438677494[0] = 0;
   out_7220558093438677494[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7220558093438677494[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7220558093438677494[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7220558093438677494[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7220558093438677494[5] = -sin(in_vec[1]);
   out_7220558093438677494[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7220558093438677494[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7220558093438677494[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7220558093438677494[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7220558093438677494[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7220558093438677494[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7220558093438677494[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7220558093438677494[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7220558093438677494[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7220558093438677494[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7220558093438677494[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7220558093438677494[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_9043724947419933481) {
   out_9043724947419933481[0] = delta_x[0] + nom_x[0];
   out_9043724947419933481[1] = delta_x[1] + nom_x[1];
   out_9043724947419933481[2] = delta_x[2] + nom_x[2];
   out_9043724947419933481[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_9043724947419933481[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_9043724947419933481[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_9043724947419933481[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_9043724947419933481[7] = delta_x[6] + nom_x[7];
   out_9043724947419933481[8] = delta_x[7] + nom_x[8];
   out_9043724947419933481[9] = delta_x[8] + nom_x[9];
   out_9043724947419933481[10] = delta_x[9] + nom_x[10];
   out_9043724947419933481[11] = delta_x[10] + nom_x[11];
   out_9043724947419933481[12] = delta_x[11] + nom_x[12];
   out_9043724947419933481[13] = delta_x[12] + nom_x[13];
   out_9043724947419933481[14] = delta_x[13] + nom_x[14];
   out_9043724947419933481[15] = delta_x[14] + nom_x[15];
   out_9043724947419933481[16] = delta_x[15] + nom_x[16];
   out_9043724947419933481[17] = delta_x[16] + nom_x[17];
   out_9043724947419933481[18] = delta_x[17] + nom_x[18];
   out_9043724947419933481[19] = delta_x[18] + nom_x[19];
   out_9043724947419933481[20] = delta_x[19] + nom_x[20];
   out_9043724947419933481[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1152112582838846515) {
   out_1152112582838846515[0] = -nom_x[0] + true_x[0];
   out_1152112582838846515[1] = -nom_x[1] + true_x[1];
   out_1152112582838846515[2] = -nom_x[2] + true_x[2];
   out_1152112582838846515[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1152112582838846515[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1152112582838846515[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1152112582838846515[6] = -nom_x[7] + true_x[7];
   out_1152112582838846515[7] = -nom_x[8] + true_x[8];
   out_1152112582838846515[8] = -nom_x[9] + true_x[9];
   out_1152112582838846515[9] = -nom_x[10] + true_x[10];
   out_1152112582838846515[10] = -nom_x[11] + true_x[11];
   out_1152112582838846515[11] = -nom_x[12] + true_x[12];
   out_1152112582838846515[12] = -nom_x[13] + true_x[13];
   out_1152112582838846515[13] = -nom_x[14] + true_x[14];
   out_1152112582838846515[14] = -nom_x[15] + true_x[15];
   out_1152112582838846515[15] = -nom_x[16] + true_x[16];
   out_1152112582838846515[16] = -nom_x[17] + true_x[17];
   out_1152112582838846515[17] = -nom_x[18] + true_x[18];
   out_1152112582838846515[18] = -nom_x[19] + true_x[19];
   out_1152112582838846515[19] = -nom_x[20] + true_x[20];
   out_1152112582838846515[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5515159812904440844) {
   out_5515159812904440844[0] = 1.0;
   out_5515159812904440844[1] = 0;
   out_5515159812904440844[2] = 0;
   out_5515159812904440844[3] = 0;
   out_5515159812904440844[4] = 0;
   out_5515159812904440844[5] = 0;
   out_5515159812904440844[6] = 0;
   out_5515159812904440844[7] = 0;
   out_5515159812904440844[8] = 0;
   out_5515159812904440844[9] = 0;
   out_5515159812904440844[10] = 0;
   out_5515159812904440844[11] = 0;
   out_5515159812904440844[12] = 0;
   out_5515159812904440844[13] = 0;
   out_5515159812904440844[14] = 0;
   out_5515159812904440844[15] = 0;
   out_5515159812904440844[16] = 0;
   out_5515159812904440844[17] = 0;
   out_5515159812904440844[18] = 0;
   out_5515159812904440844[19] = 0;
   out_5515159812904440844[20] = 0;
   out_5515159812904440844[21] = 0;
   out_5515159812904440844[22] = 1.0;
   out_5515159812904440844[23] = 0;
   out_5515159812904440844[24] = 0;
   out_5515159812904440844[25] = 0;
   out_5515159812904440844[26] = 0;
   out_5515159812904440844[27] = 0;
   out_5515159812904440844[28] = 0;
   out_5515159812904440844[29] = 0;
   out_5515159812904440844[30] = 0;
   out_5515159812904440844[31] = 0;
   out_5515159812904440844[32] = 0;
   out_5515159812904440844[33] = 0;
   out_5515159812904440844[34] = 0;
   out_5515159812904440844[35] = 0;
   out_5515159812904440844[36] = 0;
   out_5515159812904440844[37] = 0;
   out_5515159812904440844[38] = 0;
   out_5515159812904440844[39] = 0;
   out_5515159812904440844[40] = 0;
   out_5515159812904440844[41] = 0;
   out_5515159812904440844[42] = 0;
   out_5515159812904440844[43] = 0;
   out_5515159812904440844[44] = 1.0;
   out_5515159812904440844[45] = 0;
   out_5515159812904440844[46] = 0;
   out_5515159812904440844[47] = 0;
   out_5515159812904440844[48] = 0;
   out_5515159812904440844[49] = 0;
   out_5515159812904440844[50] = 0;
   out_5515159812904440844[51] = 0;
   out_5515159812904440844[52] = 0;
   out_5515159812904440844[53] = 0;
   out_5515159812904440844[54] = 0;
   out_5515159812904440844[55] = 0;
   out_5515159812904440844[56] = 0;
   out_5515159812904440844[57] = 0;
   out_5515159812904440844[58] = 0;
   out_5515159812904440844[59] = 0;
   out_5515159812904440844[60] = 0;
   out_5515159812904440844[61] = 0;
   out_5515159812904440844[62] = 0;
   out_5515159812904440844[63] = 0;
   out_5515159812904440844[64] = 0;
   out_5515159812904440844[65] = 0;
   out_5515159812904440844[66] = -0.5*state[4];
   out_5515159812904440844[67] = -0.5*state[5];
   out_5515159812904440844[68] = -0.5*state[6];
   out_5515159812904440844[69] = 0;
   out_5515159812904440844[70] = 0;
   out_5515159812904440844[71] = 0;
   out_5515159812904440844[72] = 0;
   out_5515159812904440844[73] = 0;
   out_5515159812904440844[74] = 0;
   out_5515159812904440844[75] = 0;
   out_5515159812904440844[76] = 0;
   out_5515159812904440844[77] = 0;
   out_5515159812904440844[78] = 0;
   out_5515159812904440844[79] = 0;
   out_5515159812904440844[80] = 0;
   out_5515159812904440844[81] = 0;
   out_5515159812904440844[82] = 0;
   out_5515159812904440844[83] = 0;
   out_5515159812904440844[84] = 0;
   out_5515159812904440844[85] = 0;
   out_5515159812904440844[86] = 0;
   out_5515159812904440844[87] = 0.5*state[3];
   out_5515159812904440844[88] = 0.5*state[6];
   out_5515159812904440844[89] = -0.5*state[5];
   out_5515159812904440844[90] = 0;
   out_5515159812904440844[91] = 0;
   out_5515159812904440844[92] = 0;
   out_5515159812904440844[93] = 0;
   out_5515159812904440844[94] = 0;
   out_5515159812904440844[95] = 0;
   out_5515159812904440844[96] = 0;
   out_5515159812904440844[97] = 0;
   out_5515159812904440844[98] = 0;
   out_5515159812904440844[99] = 0;
   out_5515159812904440844[100] = 0;
   out_5515159812904440844[101] = 0;
   out_5515159812904440844[102] = 0;
   out_5515159812904440844[103] = 0;
   out_5515159812904440844[104] = 0;
   out_5515159812904440844[105] = 0;
   out_5515159812904440844[106] = 0;
   out_5515159812904440844[107] = 0;
   out_5515159812904440844[108] = -0.5*state[6];
   out_5515159812904440844[109] = 0.5*state[3];
   out_5515159812904440844[110] = 0.5*state[4];
   out_5515159812904440844[111] = 0;
   out_5515159812904440844[112] = 0;
   out_5515159812904440844[113] = 0;
   out_5515159812904440844[114] = 0;
   out_5515159812904440844[115] = 0;
   out_5515159812904440844[116] = 0;
   out_5515159812904440844[117] = 0;
   out_5515159812904440844[118] = 0;
   out_5515159812904440844[119] = 0;
   out_5515159812904440844[120] = 0;
   out_5515159812904440844[121] = 0;
   out_5515159812904440844[122] = 0;
   out_5515159812904440844[123] = 0;
   out_5515159812904440844[124] = 0;
   out_5515159812904440844[125] = 0;
   out_5515159812904440844[126] = 0;
   out_5515159812904440844[127] = 0;
   out_5515159812904440844[128] = 0;
   out_5515159812904440844[129] = 0.5*state[5];
   out_5515159812904440844[130] = -0.5*state[4];
   out_5515159812904440844[131] = 0.5*state[3];
   out_5515159812904440844[132] = 0;
   out_5515159812904440844[133] = 0;
   out_5515159812904440844[134] = 0;
   out_5515159812904440844[135] = 0;
   out_5515159812904440844[136] = 0;
   out_5515159812904440844[137] = 0;
   out_5515159812904440844[138] = 0;
   out_5515159812904440844[139] = 0;
   out_5515159812904440844[140] = 0;
   out_5515159812904440844[141] = 0;
   out_5515159812904440844[142] = 0;
   out_5515159812904440844[143] = 0;
   out_5515159812904440844[144] = 0;
   out_5515159812904440844[145] = 0;
   out_5515159812904440844[146] = 0;
   out_5515159812904440844[147] = 0;
   out_5515159812904440844[148] = 0;
   out_5515159812904440844[149] = 0;
   out_5515159812904440844[150] = 0;
   out_5515159812904440844[151] = 0;
   out_5515159812904440844[152] = 0;
   out_5515159812904440844[153] = 1.0;
   out_5515159812904440844[154] = 0;
   out_5515159812904440844[155] = 0;
   out_5515159812904440844[156] = 0;
   out_5515159812904440844[157] = 0;
   out_5515159812904440844[158] = 0;
   out_5515159812904440844[159] = 0;
   out_5515159812904440844[160] = 0;
   out_5515159812904440844[161] = 0;
   out_5515159812904440844[162] = 0;
   out_5515159812904440844[163] = 0;
   out_5515159812904440844[164] = 0;
   out_5515159812904440844[165] = 0;
   out_5515159812904440844[166] = 0;
   out_5515159812904440844[167] = 0;
   out_5515159812904440844[168] = 0;
   out_5515159812904440844[169] = 0;
   out_5515159812904440844[170] = 0;
   out_5515159812904440844[171] = 0;
   out_5515159812904440844[172] = 0;
   out_5515159812904440844[173] = 0;
   out_5515159812904440844[174] = 0;
   out_5515159812904440844[175] = 1.0;
   out_5515159812904440844[176] = 0;
   out_5515159812904440844[177] = 0;
   out_5515159812904440844[178] = 0;
   out_5515159812904440844[179] = 0;
   out_5515159812904440844[180] = 0;
   out_5515159812904440844[181] = 0;
   out_5515159812904440844[182] = 0;
   out_5515159812904440844[183] = 0;
   out_5515159812904440844[184] = 0;
   out_5515159812904440844[185] = 0;
   out_5515159812904440844[186] = 0;
   out_5515159812904440844[187] = 0;
   out_5515159812904440844[188] = 0;
   out_5515159812904440844[189] = 0;
   out_5515159812904440844[190] = 0;
   out_5515159812904440844[191] = 0;
   out_5515159812904440844[192] = 0;
   out_5515159812904440844[193] = 0;
   out_5515159812904440844[194] = 0;
   out_5515159812904440844[195] = 0;
   out_5515159812904440844[196] = 0;
   out_5515159812904440844[197] = 1.0;
   out_5515159812904440844[198] = 0;
   out_5515159812904440844[199] = 0;
   out_5515159812904440844[200] = 0;
   out_5515159812904440844[201] = 0;
   out_5515159812904440844[202] = 0;
   out_5515159812904440844[203] = 0;
   out_5515159812904440844[204] = 0;
   out_5515159812904440844[205] = 0;
   out_5515159812904440844[206] = 0;
   out_5515159812904440844[207] = 0;
   out_5515159812904440844[208] = 0;
   out_5515159812904440844[209] = 0;
   out_5515159812904440844[210] = 0;
   out_5515159812904440844[211] = 0;
   out_5515159812904440844[212] = 0;
   out_5515159812904440844[213] = 0;
   out_5515159812904440844[214] = 0;
   out_5515159812904440844[215] = 0;
   out_5515159812904440844[216] = 0;
   out_5515159812904440844[217] = 0;
   out_5515159812904440844[218] = 0;
   out_5515159812904440844[219] = 1.0;
   out_5515159812904440844[220] = 0;
   out_5515159812904440844[221] = 0;
   out_5515159812904440844[222] = 0;
   out_5515159812904440844[223] = 0;
   out_5515159812904440844[224] = 0;
   out_5515159812904440844[225] = 0;
   out_5515159812904440844[226] = 0;
   out_5515159812904440844[227] = 0;
   out_5515159812904440844[228] = 0;
   out_5515159812904440844[229] = 0;
   out_5515159812904440844[230] = 0;
   out_5515159812904440844[231] = 0;
   out_5515159812904440844[232] = 0;
   out_5515159812904440844[233] = 0;
   out_5515159812904440844[234] = 0;
   out_5515159812904440844[235] = 0;
   out_5515159812904440844[236] = 0;
   out_5515159812904440844[237] = 0;
   out_5515159812904440844[238] = 0;
   out_5515159812904440844[239] = 0;
   out_5515159812904440844[240] = 0;
   out_5515159812904440844[241] = 1.0;
   out_5515159812904440844[242] = 0;
   out_5515159812904440844[243] = 0;
   out_5515159812904440844[244] = 0;
   out_5515159812904440844[245] = 0;
   out_5515159812904440844[246] = 0;
   out_5515159812904440844[247] = 0;
   out_5515159812904440844[248] = 0;
   out_5515159812904440844[249] = 0;
   out_5515159812904440844[250] = 0;
   out_5515159812904440844[251] = 0;
   out_5515159812904440844[252] = 0;
   out_5515159812904440844[253] = 0;
   out_5515159812904440844[254] = 0;
   out_5515159812904440844[255] = 0;
   out_5515159812904440844[256] = 0;
   out_5515159812904440844[257] = 0;
   out_5515159812904440844[258] = 0;
   out_5515159812904440844[259] = 0;
   out_5515159812904440844[260] = 0;
   out_5515159812904440844[261] = 0;
   out_5515159812904440844[262] = 0;
   out_5515159812904440844[263] = 1.0;
   out_5515159812904440844[264] = 0;
   out_5515159812904440844[265] = 0;
   out_5515159812904440844[266] = 0;
   out_5515159812904440844[267] = 0;
   out_5515159812904440844[268] = 0;
   out_5515159812904440844[269] = 0;
   out_5515159812904440844[270] = 0;
   out_5515159812904440844[271] = 0;
   out_5515159812904440844[272] = 0;
   out_5515159812904440844[273] = 0;
   out_5515159812904440844[274] = 0;
   out_5515159812904440844[275] = 0;
   out_5515159812904440844[276] = 0;
   out_5515159812904440844[277] = 0;
   out_5515159812904440844[278] = 0;
   out_5515159812904440844[279] = 0;
   out_5515159812904440844[280] = 0;
   out_5515159812904440844[281] = 0;
   out_5515159812904440844[282] = 0;
   out_5515159812904440844[283] = 0;
   out_5515159812904440844[284] = 0;
   out_5515159812904440844[285] = 1.0;
   out_5515159812904440844[286] = 0;
   out_5515159812904440844[287] = 0;
   out_5515159812904440844[288] = 0;
   out_5515159812904440844[289] = 0;
   out_5515159812904440844[290] = 0;
   out_5515159812904440844[291] = 0;
   out_5515159812904440844[292] = 0;
   out_5515159812904440844[293] = 0;
   out_5515159812904440844[294] = 0;
   out_5515159812904440844[295] = 0;
   out_5515159812904440844[296] = 0;
   out_5515159812904440844[297] = 0;
   out_5515159812904440844[298] = 0;
   out_5515159812904440844[299] = 0;
   out_5515159812904440844[300] = 0;
   out_5515159812904440844[301] = 0;
   out_5515159812904440844[302] = 0;
   out_5515159812904440844[303] = 0;
   out_5515159812904440844[304] = 0;
   out_5515159812904440844[305] = 0;
   out_5515159812904440844[306] = 0;
   out_5515159812904440844[307] = 1.0;
   out_5515159812904440844[308] = 0;
   out_5515159812904440844[309] = 0;
   out_5515159812904440844[310] = 0;
   out_5515159812904440844[311] = 0;
   out_5515159812904440844[312] = 0;
   out_5515159812904440844[313] = 0;
   out_5515159812904440844[314] = 0;
   out_5515159812904440844[315] = 0;
   out_5515159812904440844[316] = 0;
   out_5515159812904440844[317] = 0;
   out_5515159812904440844[318] = 0;
   out_5515159812904440844[319] = 0;
   out_5515159812904440844[320] = 0;
   out_5515159812904440844[321] = 0;
   out_5515159812904440844[322] = 0;
   out_5515159812904440844[323] = 0;
   out_5515159812904440844[324] = 0;
   out_5515159812904440844[325] = 0;
   out_5515159812904440844[326] = 0;
   out_5515159812904440844[327] = 0;
   out_5515159812904440844[328] = 0;
   out_5515159812904440844[329] = 1.0;
   out_5515159812904440844[330] = 0;
   out_5515159812904440844[331] = 0;
   out_5515159812904440844[332] = 0;
   out_5515159812904440844[333] = 0;
   out_5515159812904440844[334] = 0;
   out_5515159812904440844[335] = 0;
   out_5515159812904440844[336] = 0;
   out_5515159812904440844[337] = 0;
   out_5515159812904440844[338] = 0;
   out_5515159812904440844[339] = 0;
   out_5515159812904440844[340] = 0;
   out_5515159812904440844[341] = 0;
   out_5515159812904440844[342] = 0;
   out_5515159812904440844[343] = 0;
   out_5515159812904440844[344] = 0;
   out_5515159812904440844[345] = 0;
   out_5515159812904440844[346] = 0;
   out_5515159812904440844[347] = 0;
   out_5515159812904440844[348] = 0;
   out_5515159812904440844[349] = 0;
   out_5515159812904440844[350] = 0;
   out_5515159812904440844[351] = 1.0;
   out_5515159812904440844[352] = 0;
   out_5515159812904440844[353] = 0;
   out_5515159812904440844[354] = 0;
   out_5515159812904440844[355] = 0;
   out_5515159812904440844[356] = 0;
   out_5515159812904440844[357] = 0;
   out_5515159812904440844[358] = 0;
   out_5515159812904440844[359] = 0;
   out_5515159812904440844[360] = 0;
   out_5515159812904440844[361] = 0;
   out_5515159812904440844[362] = 0;
   out_5515159812904440844[363] = 0;
   out_5515159812904440844[364] = 0;
   out_5515159812904440844[365] = 0;
   out_5515159812904440844[366] = 0;
   out_5515159812904440844[367] = 0;
   out_5515159812904440844[368] = 0;
   out_5515159812904440844[369] = 0;
   out_5515159812904440844[370] = 0;
   out_5515159812904440844[371] = 0;
   out_5515159812904440844[372] = 0;
   out_5515159812904440844[373] = 1.0;
   out_5515159812904440844[374] = 0;
   out_5515159812904440844[375] = 0;
   out_5515159812904440844[376] = 0;
   out_5515159812904440844[377] = 0;
   out_5515159812904440844[378] = 0;
   out_5515159812904440844[379] = 0;
   out_5515159812904440844[380] = 0;
   out_5515159812904440844[381] = 0;
   out_5515159812904440844[382] = 0;
   out_5515159812904440844[383] = 0;
   out_5515159812904440844[384] = 0;
   out_5515159812904440844[385] = 0;
   out_5515159812904440844[386] = 0;
   out_5515159812904440844[387] = 0;
   out_5515159812904440844[388] = 0;
   out_5515159812904440844[389] = 0;
   out_5515159812904440844[390] = 0;
   out_5515159812904440844[391] = 0;
   out_5515159812904440844[392] = 0;
   out_5515159812904440844[393] = 0;
   out_5515159812904440844[394] = 0;
   out_5515159812904440844[395] = 1.0;
   out_5515159812904440844[396] = 0;
   out_5515159812904440844[397] = 0;
   out_5515159812904440844[398] = 0;
   out_5515159812904440844[399] = 0;
   out_5515159812904440844[400] = 0;
   out_5515159812904440844[401] = 0;
   out_5515159812904440844[402] = 0;
   out_5515159812904440844[403] = 0;
   out_5515159812904440844[404] = 0;
   out_5515159812904440844[405] = 0;
   out_5515159812904440844[406] = 0;
   out_5515159812904440844[407] = 0;
   out_5515159812904440844[408] = 0;
   out_5515159812904440844[409] = 0;
   out_5515159812904440844[410] = 0;
   out_5515159812904440844[411] = 0;
   out_5515159812904440844[412] = 0;
   out_5515159812904440844[413] = 0;
   out_5515159812904440844[414] = 0;
   out_5515159812904440844[415] = 0;
   out_5515159812904440844[416] = 0;
   out_5515159812904440844[417] = 1.0;
   out_5515159812904440844[418] = 0;
   out_5515159812904440844[419] = 0;
   out_5515159812904440844[420] = 0;
   out_5515159812904440844[421] = 0;
   out_5515159812904440844[422] = 0;
   out_5515159812904440844[423] = 0;
   out_5515159812904440844[424] = 0;
   out_5515159812904440844[425] = 0;
   out_5515159812904440844[426] = 0;
   out_5515159812904440844[427] = 0;
   out_5515159812904440844[428] = 0;
   out_5515159812904440844[429] = 0;
   out_5515159812904440844[430] = 0;
   out_5515159812904440844[431] = 0;
   out_5515159812904440844[432] = 0;
   out_5515159812904440844[433] = 0;
   out_5515159812904440844[434] = 0;
   out_5515159812904440844[435] = 0;
   out_5515159812904440844[436] = 0;
   out_5515159812904440844[437] = 0;
   out_5515159812904440844[438] = 0;
   out_5515159812904440844[439] = 1.0;
   out_5515159812904440844[440] = 0;
   out_5515159812904440844[441] = 0;
   out_5515159812904440844[442] = 0;
   out_5515159812904440844[443] = 0;
   out_5515159812904440844[444] = 0;
   out_5515159812904440844[445] = 0;
   out_5515159812904440844[446] = 0;
   out_5515159812904440844[447] = 0;
   out_5515159812904440844[448] = 0;
   out_5515159812904440844[449] = 0;
   out_5515159812904440844[450] = 0;
   out_5515159812904440844[451] = 0;
   out_5515159812904440844[452] = 0;
   out_5515159812904440844[453] = 0;
   out_5515159812904440844[454] = 0;
   out_5515159812904440844[455] = 0;
   out_5515159812904440844[456] = 0;
   out_5515159812904440844[457] = 0;
   out_5515159812904440844[458] = 0;
   out_5515159812904440844[459] = 0;
   out_5515159812904440844[460] = 0;
   out_5515159812904440844[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5913141148673885470) {
   out_5913141148673885470[0] = dt*state[7] + state[0];
   out_5913141148673885470[1] = dt*state[8] + state[1];
   out_5913141148673885470[2] = dt*state[9] + state[2];
   out_5913141148673885470[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5913141148673885470[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5913141148673885470[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5913141148673885470[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5913141148673885470[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5913141148673885470[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5913141148673885470[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5913141148673885470[10] = state[10];
   out_5913141148673885470[11] = state[11];
   out_5913141148673885470[12] = state[12];
   out_5913141148673885470[13] = state[13];
   out_5913141148673885470[14] = state[14];
   out_5913141148673885470[15] = state[15];
   out_5913141148673885470[16] = state[16];
   out_5913141148673885470[17] = state[17];
   out_5913141148673885470[18] = state[18];
   out_5913141148673885470[19] = state[19];
   out_5913141148673885470[20] = state[20];
   out_5913141148673885470[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5824171225366303602) {
   out_5824171225366303602[0] = 1;
   out_5824171225366303602[1] = 0;
   out_5824171225366303602[2] = 0;
   out_5824171225366303602[3] = 0;
   out_5824171225366303602[4] = 0;
   out_5824171225366303602[5] = 0;
   out_5824171225366303602[6] = dt;
   out_5824171225366303602[7] = 0;
   out_5824171225366303602[8] = 0;
   out_5824171225366303602[9] = 0;
   out_5824171225366303602[10] = 0;
   out_5824171225366303602[11] = 0;
   out_5824171225366303602[12] = 0;
   out_5824171225366303602[13] = 0;
   out_5824171225366303602[14] = 0;
   out_5824171225366303602[15] = 0;
   out_5824171225366303602[16] = 0;
   out_5824171225366303602[17] = 0;
   out_5824171225366303602[18] = 0;
   out_5824171225366303602[19] = 0;
   out_5824171225366303602[20] = 0;
   out_5824171225366303602[21] = 0;
   out_5824171225366303602[22] = 1;
   out_5824171225366303602[23] = 0;
   out_5824171225366303602[24] = 0;
   out_5824171225366303602[25] = 0;
   out_5824171225366303602[26] = 0;
   out_5824171225366303602[27] = 0;
   out_5824171225366303602[28] = dt;
   out_5824171225366303602[29] = 0;
   out_5824171225366303602[30] = 0;
   out_5824171225366303602[31] = 0;
   out_5824171225366303602[32] = 0;
   out_5824171225366303602[33] = 0;
   out_5824171225366303602[34] = 0;
   out_5824171225366303602[35] = 0;
   out_5824171225366303602[36] = 0;
   out_5824171225366303602[37] = 0;
   out_5824171225366303602[38] = 0;
   out_5824171225366303602[39] = 0;
   out_5824171225366303602[40] = 0;
   out_5824171225366303602[41] = 0;
   out_5824171225366303602[42] = 0;
   out_5824171225366303602[43] = 0;
   out_5824171225366303602[44] = 1;
   out_5824171225366303602[45] = 0;
   out_5824171225366303602[46] = 0;
   out_5824171225366303602[47] = 0;
   out_5824171225366303602[48] = 0;
   out_5824171225366303602[49] = 0;
   out_5824171225366303602[50] = dt;
   out_5824171225366303602[51] = 0;
   out_5824171225366303602[52] = 0;
   out_5824171225366303602[53] = 0;
   out_5824171225366303602[54] = 0;
   out_5824171225366303602[55] = 0;
   out_5824171225366303602[56] = 0;
   out_5824171225366303602[57] = 0;
   out_5824171225366303602[58] = 0;
   out_5824171225366303602[59] = 0;
   out_5824171225366303602[60] = 0;
   out_5824171225366303602[61] = 0;
   out_5824171225366303602[62] = 0;
   out_5824171225366303602[63] = 0;
   out_5824171225366303602[64] = 0;
   out_5824171225366303602[65] = 0;
   out_5824171225366303602[66] = 1;
   out_5824171225366303602[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5824171225366303602[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5824171225366303602[69] = 0;
   out_5824171225366303602[70] = 0;
   out_5824171225366303602[71] = 0;
   out_5824171225366303602[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5824171225366303602[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5824171225366303602[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5824171225366303602[75] = 0;
   out_5824171225366303602[76] = 0;
   out_5824171225366303602[77] = 0;
   out_5824171225366303602[78] = 0;
   out_5824171225366303602[79] = 0;
   out_5824171225366303602[80] = 0;
   out_5824171225366303602[81] = 0;
   out_5824171225366303602[82] = 0;
   out_5824171225366303602[83] = 0;
   out_5824171225366303602[84] = 0;
   out_5824171225366303602[85] = 0;
   out_5824171225366303602[86] = 0;
   out_5824171225366303602[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5824171225366303602[88] = 1;
   out_5824171225366303602[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5824171225366303602[90] = 0;
   out_5824171225366303602[91] = 0;
   out_5824171225366303602[92] = 0;
   out_5824171225366303602[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5824171225366303602[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5824171225366303602[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5824171225366303602[96] = 0;
   out_5824171225366303602[97] = 0;
   out_5824171225366303602[98] = 0;
   out_5824171225366303602[99] = 0;
   out_5824171225366303602[100] = 0;
   out_5824171225366303602[101] = 0;
   out_5824171225366303602[102] = 0;
   out_5824171225366303602[103] = 0;
   out_5824171225366303602[104] = 0;
   out_5824171225366303602[105] = 0;
   out_5824171225366303602[106] = 0;
   out_5824171225366303602[107] = 0;
   out_5824171225366303602[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5824171225366303602[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5824171225366303602[110] = 1;
   out_5824171225366303602[111] = 0;
   out_5824171225366303602[112] = 0;
   out_5824171225366303602[113] = 0;
   out_5824171225366303602[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5824171225366303602[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5824171225366303602[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5824171225366303602[117] = 0;
   out_5824171225366303602[118] = 0;
   out_5824171225366303602[119] = 0;
   out_5824171225366303602[120] = 0;
   out_5824171225366303602[121] = 0;
   out_5824171225366303602[122] = 0;
   out_5824171225366303602[123] = 0;
   out_5824171225366303602[124] = 0;
   out_5824171225366303602[125] = 0;
   out_5824171225366303602[126] = 0;
   out_5824171225366303602[127] = 0;
   out_5824171225366303602[128] = 0;
   out_5824171225366303602[129] = 0;
   out_5824171225366303602[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5824171225366303602[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5824171225366303602[132] = 1;
   out_5824171225366303602[133] = 0;
   out_5824171225366303602[134] = 0;
   out_5824171225366303602[135] = 0;
   out_5824171225366303602[136] = 0;
   out_5824171225366303602[137] = 0;
   out_5824171225366303602[138] = 0;
   out_5824171225366303602[139] = 0;
   out_5824171225366303602[140] = 0;
   out_5824171225366303602[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5824171225366303602[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5824171225366303602[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5824171225366303602[144] = 0;
   out_5824171225366303602[145] = 0;
   out_5824171225366303602[146] = 0;
   out_5824171225366303602[147] = 0;
   out_5824171225366303602[148] = 0;
   out_5824171225366303602[149] = 0;
   out_5824171225366303602[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5824171225366303602[151] = 0;
   out_5824171225366303602[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5824171225366303602[153] = 0;
   out_5824171225366303602[154] = 1;
   out_5824171225366303602[155] = 0;
   out_5824171225366303602[156] = 0;
   out_5824171225366303602[157] = 0;
   out_5824171225366303602[158] = 0;
   out_5824171225366303602[159] = 0;
   out_5824171225366303602[160] = 0;
   out_5824171225366303602[161] = 0;
   out_5824171225366303602[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5824171225366303602[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5824171225366303602[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5824171225366303602[165] = 0;
   out_5824171225366303602[166] = 0;
   out_5824171225366303602[167] = 0;
   out_5824171225366303602[168] = 0;
   out_5824171225366303602[169] = 0;
   out_5824171225366303602[170] = 0;
   out_5824171225366303602[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5824171225366303602[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5824171225366303602[173] = 0;
   out_5824171225366303602[174] = 0;
   out_5824171225366303602[175] = 0;
   out_5824171225366303602[176] = 1;
   out_5824171225366303602[177] = 0;
   out_5824171225366303602[178] = 0;
   out_5824171225366303602[179] = 0;
   out_5824171225366303602[180] = 0;
   out_5824171225366303602[181] = 0;
   out_5824171225366303602[182] = 0;
   out_5824171225366303602[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5824171225366303602[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5824171225366303602[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5824171225366303602[186] = 0;
   out_5824171225366303602[187] = 0;
   out_5824171225366303602[188] = 0;
   out_5824171225366303602[189] = 0;
   out_5824171225366303602[190] = 0;
   out_5824171225366303602[191] = 0;
   out_5824171225366303602[192] = 0;
   out_5824171225366303602[193] = 0;
   out_5824171225366303602[194] = 0;
   out_5824171225366303602[195] = 0;
   out_5824171225366303602[196] = 0;
   out_5824171225366303602[197] = 0;
   out_5824171225366303602[198] = 1;
   out_5824171225366303602[199] = 0;
   out_5824171225366303602[200] = 0;
   out_5824171225366303602[201] = 0;
   out_5824171225366303602[202] = 0;
   out_5824171225366303602[203] = 0;
   out_5824171225366303602[204] = 0;
   out_5824171225366303602[205] = 0;
   out_5824171225366303602[206] = 0;
   out_5824171225366303602[207] = 0;
   out_5824171225366303602[208] = 0;
   out_5824171225366303602[209] = 0;
   out_5824171225366303602[210] = 0;
   out_5824171225366303602[211] = 0;
   out_5824171225366303602[212] = 0;
   out_5824171225366303602[213] = 0;
   out_5824171225366303602[214] = 0;
   out_5824171225366303602[215] = 0;
   out_5824171225366303602[216] = 0;
   out_5824171225366303602[217] = 0;
   out_5824171225366303602[218] = 0;
   out_5824171225366303602[219] = 0;
   out_5824171225366303602[220] = 1;
   out_5824171225366303602[221] = 0;
   out_5824171225366303602[222] = 0;
   out_5824171225366303602[223] = 0;
   out_5824171225366303602[224] = 0;
   out_5824171225366303602[225] = 0;
   out_5824171225366303602[226] = 0;
   out_5824171225366303602[227] = 0;
   out_5824171225366303602[228] = 0;
   out_5824171225366303602[229] = 0;
   out_5824171225366303602[230] = 0;
   out_5824171225366303602[231] = 0;
   out_5824171225366303602[232] = 0;
   out_5824171225366303602[233] = 0;
   out_5824171225366303602[234] = 0;
   out_5824171225366303602[235] = 0;
   out_5824171225366303602[236] = 0;
   out_5824171225366303602[237] = 0;
   out_5824171225366303602[238] = 0;
   out_5824171225366303602[239] = 0;
   out_5824171225366303602[240] = 0;
   out_5824171225366303602[241] = 0;
   out_5824171225366303602[242] = 1;
   out_5824171225366303602[243] = 0;
   out_5824171225366303602[244] = 0;
   out_5824171225366303602[245] = 0;
   out_5824171225366303602[246] = 0;
   out_5824171225366303602[247] = 0;
   out_5824171225366303602[248] = 0;
   out_5824171225366303602[249] = 0;
   out_5824171225366303602[250] = 0;
   out_5824171225366303602[251] = 0;
   out_5824171225366303602[252] = 0;
   out_5824171225366303602[253] = 0;
   out_5824171225366303602[254] = 0;
   out_5824171225366303602[255] = 0;
   out_5824171225366303602[256] = 0;
   out_5824171225366303602[257] = 0;
   out_5824171225366303602[258] = 0;
   out_5824171225366303602[259] = 0;
   out_5824171225366303602[260] = 0;
   out_5824171225366303602[261] = 0;
   out_5824171225366303602[262] = 0;
   out_5824171225366303602[263] = 0;
   out_5824171225366303602[264] = 1;
   out_5824171225366303602[265] = 0;
   out_5824171225366303602[266] = 0;
   out_5824171225366303602[267] = 0;
   out_5824171225366303602[268] = 0;
   out_5824171225366303602[269] = 0;
   out_5824171225366303602[270] = 0;
   out_5824171225366303602[271] = 0;
   out_5824171225366303602[272] = 0;
   out_5824171225366303602[273] = 0;
   out_5824171225366303602[274] = 0;
   out_5824171225366303602[275] = 0;
   out_5824171225366303602[276] = 0;
   out_5824171225366303602[277] = 0;
   out_5824171225366303602[278] = 0;
   out_5824171225366303602[279] = 0;
   out_5824171225366303602[280] = 0;
   out_5824171225366303602[281] = 0;
   out_5824171225366303602[282] = 0;
   out_5824171225366303602[283] = 0;
   out_5824171225366303602[284] = 0;
   out_5824171225366303602[285] = 0;
   out_5824171225366303602[286] = 1;
   out_5824171225366303602[287] = 0;
   out_5824171225366303602[288] = 0;
   out_5824171225366303602[289] = 0;
   out_5824171225366303602[290] = 0;
   out_5824171225366303602[291] = 0;
   out_5824171225366303602[292] = 0;
   out_5824171225366303602[293] = 0;
   out_5824171225366303602[294] = 0;
   out_5824171225366303602[295] = 0;
   out_5824171225366303602[296] = 0;
   out_5824171225366303602[297] = 0;
   out_5824171225366303602[298] = 0;
   out_5824171225366303602[299] = 0;
   out_5824171225366303602[300] = 0;
   out_5824171225366303602[301] = 0;
   out_5824171225366303602[302] = 0;
   out_5824171225366303602[303] = 0;
   out_5824171225366303602[304] = 0;
   out_5824171225366303602[305] = 0;
   out_5824171225366303602[306] = 0;
   out_5824171225366303602[307] = 0;
   out_5824171225366303602[308] = 1;
   out_5824171225366303602[309] = 0;
   out_5824171225366303602[310] = 0;
   out_5824171225366303602[311] = 0;
   out_5824171225366303602[312] = 0;
   out_5824171225366303602[313] = 0;
   out_5824171225366303602[314] = 0;
   out_5824171225366303602[315] = 0;
   out_5824171225366303602[316] = 0;
   out_5824171225366303602[317] = 0;
   out_5824171225366303602[318] = 0;
   out_5824171225366303602[319] = 0;
   out_5824171225366303602[320] = 0;
   out_5824171225366303602[321] = 0;
   out_5824171225366303602[322] = 0;
   out_5824171225366303602[323] = 0;
   out_5824171225366303602[324] = 0;
   out_5824171225366303602[325] = 0;
   out_5824171225366303602[326] = 0;
   out_5824171225366303602[327] = 0;
   out_5824171225366303602[328] = 0;
   out_5824171225366303602[329] = 0;
   out_5824171225366303602[330] = 1;
   out_5824171225366303602[331] = 0;
   out_5824171225366303602[332] = 0;
   out_5824171225366303602[333] = 0;
   out_5824171225366303602[334] = 0;
   out_5824171225366303602[335] = 0;
   out_5824171225366303602[336] = 0;
   out_5824171225366303602[337] = 0;
   out_5824171225366303602[338] = 0;
   out_5824171225366303602[339] = 0;
   out_5824171225366303602[340] = 0;
   out_5824171225366303602[341] = 0;
   out_5824171225366303602[342] = 0;
   out_5824171225366303602[343] = 0;
   out_5824171225366303602[344] = 0;
   out_5824171225366303602[345] = 0;
   out_5824171225366303602[346] = 0;
   out_5824171225366303602[347] = 0;
   out_5824171225366303602[348] = 0;
   out_5824171225366303602[349] = 0;
   out_5824171225366303602[350] = 0;
   out_5824171225366303602[351] = 0;
   out_5824171225366303602[352] = 1;
   out_5824171225366303602[353] = 0;
   out_5824171225366303602[354] = 0;
   out_5824171225366303602[355] = 0;
   out_5824171225366303602[356] = 0;
   out_5824171225366303602[357] = 0;
   out_5824171225366303602[358] = 0;
   out_5824171225366303602[359] = 0;
   out_5824171225366303602[360] = 0;
   out_5824171225366303602[361] = 0;
   out_5824171225366303602[362] = 0;
   out_5824171225366303602[363] = 0;
   out_5824171225366303602[364] = 0;
   out_5824171225366303602[365] = 0;
   out_5824171225366303602[366] = 0;
   out_5824171225366303602[367] = 0;
   out_5824171225366303602[368] = 0;
   out_5824171225366303602[369] = 0;
   out_5824171225366303602[370] = 0;
   out_5824171225366303602[371] = 0;
   out_5824171225366303602[372] = 0;
   out_5824171225366303602[373] = 0;
   out_5824171225366303602[374] = 1;
   out_5824171225366303602[375] = 0;
   out_5824171225366303602[376] = 0;
   out_5824171225366303602[377] = 0;
   out_5824171225366303602[378] = 0;
   out_5824171225366303602[379] = 0;
   out_5824171225366303602[380] = 0;
   out_5824171225366303602[381] = 0;
   out_5824171225366303602[382] = 0;
   out_5824171225366303602[383] = 0;
   out_5824171225366303602[384] = 0;
   out_5824171225366303602[385] = 0;
   out_5824171225366303602[386] = 0;
   out_5824171225366303602[387] = 0;
   out_5824171225366303602[388] = 0;
   out_5824171225366303602[389] = 0;
   out_5824171225366303602[390] = 0;
   out_5824171225366303602[391] = 0;
   out_5824171225366303602[392] = 0;
   out_5824171225366303602[393] = 0;
   out_5824171225366303602[394] = 0;
   out_5824171225366303602[395] = 0;
   out_5824171225366303602[396] = 1;
   out_5824171225366303602[397] = 0;
   out_5824171225366303602[398] = 0;
   out_5824171225366303602[399] = 0;
   out_5824171225366303602[400] = 0;
   out_5824171225366303602[401] = 0;
   out_5824171225366303602[402] = 0;
   out_5824171225366303602[403] = 0;
   out_5824171225366303602[404] = 0;
   out_5824171225366303602[405] = 0;
   out_5824171225366303602[406] = 0;
   out_5824171225366303602[407] = 0;
   out_5824171225366303602[408] = 0;
   out_5824171225366303602[409] = 0;
   out_5824171225366303602[410] = 0;
   out_5824171225366303602[411] = 0;
   out_5824171225366303602[412] = 0;
   out_5824171225366303602[413] = 0;
   out_5824171225366303602[414] = 0;
   out_5824171225366303602[415] = 0;
   out_5824171225366303602[416] = 0;
   out_5824171225366303602[417] = 0;
   out_5824171225366303602[418] = 1;
   out_5824171225366303602[419] = 0;
   out_5824171225366303602[420] = 0;
   out_5824171225366303602[421] = 0;
   out_5824171225366303602[422] = 0;
   out_5824171225366303602[423] = 0;
   out_5824171225366303602[424] = 0;
   out_5824171225366303602[425] = 0;
   out_5824171225366303602[426] = 0;
   out_5824171225366303602[427] = 0;
   out_5824171225366303602[428] = 0;
   out_5824171225366303602[429] = 0;
   out_5824171225366303602[430] = 0;
   out_5824171225366303602[431] = 0;
   out_5824171225366303602[432] = 0;
   out_5824171225366303602[433] = 0;
   out_5824171225366303602[434] = 0;
   out_5824171225366303602[435] = 0;
   out_5824171225366303602[436] = 0;
   out_5824171225366303602[437] = 0;
   out_5824171225366303602[438] = 0;
   out_5824171225366303602[439] = 0;
   out_5824171225366303602[440] = 1;
}
void h_4(double *state, double *unused, double *out_7069358795977024945) {
   out_7069358795977024945[0] = state[10] + state[13];
   out_7069358795977024945[1] = state[11] + state[14];
   out_7069358795977024945[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5963564968460779607) {
   out_5963564968460779607[0] = 0;
   out_5963564968460779607[1] = 0;
   out_5963564968460779607[2] = 0;
   out_5963564968460779607[3] = 0;
   out_5963564968460779607[4] = 0;
   out_5963564968460779607[5] = 0;
   out_5963564968460779607[6] = 0;
   out_5963564968460779607[7] = 0;
   out_5963564968460779607[8] = 0;
   out_5963564968460779607[9] = 0;
   out_5963564968460779607[10] = 1;
   out_5963564968460779607[11] = 0;
   out_5963564968460779607[12] = 0;
   out_5963564968460779607[13] = 1;
   out_5963564968460779607[14] = 0;
   out_5963564968460779607[15] = 0;
   out_5963564968460779607[16] = 0;
   out_5963564968460779607[17] = 0;
   out_5963564968460779607[18] = 0;
   out_5963564968460779607[19] = 0;
   out_5963564968460779607[20] = 0;
   out_5963564968460779607[21] = 0;
   out_5963564968460779607[22] = 0;
   out_5963564968460779607[23] = 0;
   out_5963564968460779607[24] = 0;
   out_5963564968460779607[25] = 0;
   out_5963564968460779607[26] = 0;
   out_5963564968460779607[27] = 0;
   out_5963564968460779607[28] = 0;
   out_5963564968460779607[29] = 0;
   out_5963564968460779607[30] = 0;
   out_5963564968460779607[31] = 0;
   out_5963564968460779607[32] = 0;
   out_5963564968460779607[33] = 1;
   out_5963564968460779607[34] = 0;
   out_5963564968460779607[35] = 0;
   out_5963564968460779607[36] = 1;
   out_5963564968460779607[37] = 0;
   out_5963564968460779607[38] = 0;
   out_5963564968460779607[39] = 0;
   out_5963564968460779607[40] = 0;
   out_5963564968460779607[41] = 0;
   out_5963564968460779607[42] = 0;
   out_5963564968460779607[43] = 0;
   out_5963564968460779607[44] = 0;
   out_5963564968460779607[45] = 0;
   out_5963564968460779607[46] = 0;
   out_5963564968460779607[47] = 0;
   out_5963564968460779607[48] = 0;
   out_5963564968460779607[49] = 0;
   out_5963564968460779607[50] = 0;
   out_5963564968460779607[51] = 0;
   out_5963564968460779607[52] = 0;
   out_5963564968460779607[53] = 0;
   out_5963564968460779607[54] = 0;
   out_5963564968460779607[55] = 0;
   out_5963564968460779607[56] = 1;
   out_5963564968460779607[57] = 0;
   out_5963564968460779607[58] = 0;
   out_5963564968460779607[59] = 1;
   out_5963564968460779607[60] = 0;
   out_5963564968460779607[61] = 0;
   out_5963564968460779607[62] = 0;
   out_5963564968460779607[63] = 0;
   out_5963564968460779607[64] = 0;
   out_5963564968460779607[65] = 0;
}
void h_9(double *state, double *unused, double *out_5258850399582755988) {
   out_5258850399582755988[0] = state[10];
   out_5258850399582755988[1] = state[11];
   out_5258850399582755988[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1323653966803667863) {
   out_1323653966803667863[0] = 0;
   out_1323653966803667863[1] = 0;
   out_1323653966803667863[2] = 0;
   out_1323653966803667863[3] = 0;
   out_1323653966803667863[4] = 0;
   out_1323653966803667863[5] = 0;
   out_1323653966803667863[6] = 0;
   out_1323653966803667863[7] = 0;
   out_1323653966803667863[8] = 0;
   out_1323653966803667863[9] = 0;
   out_1323653966803667863[10] = 1;
   out_1323653966803667863[11] = 0;
   out_1323653966803667863[12] = 0;
   out_1323653966803667863[13] = 0;
   out_1323653966803667863[14] = 0;
   out_1323653966803667863[15] = 0;
   out_1323653966803667863[16] = 0;
   out_1323653966803667863[17] = 0;
   out_1323653966803667863[18] = 0;
   out_1323653966803667863[19] = 0;
   out_1323653966803667863[20] = 0;
   out_1323653966803667863[21] = 0;
   out_1323653966803667863[22] = 0;
   out_1323653966803667863[23] = 0;
   out_1323653966803667863[24] = 0;
   out_1323653966803667863[25] = 0;
   out_1323653966803667863[26] = 0;
   out_1323653966803667863[27] = 0;
   out_1323653966803667863[28] = 0;
   out_1323653966803667863[29] = 0;
   out_1323653966803667863[30] = 0;
   out_1323653966803667863[31] = 0;
   out_1323653966803667863[32] = 0;
   out_1323653966803667863[33] = 1;
   out_1323653966803667863[34] = 0;
   out_1323653966803667863[35] = 0;
   out_1323653966803667863[36] = 0;
   out_1323653966803667863[37] = 0;
   out_1323653966803667863[38] = 0;
   out_1323653966803667863[39] = 0;
   out_1323653966803667863[40] = 0;
   out_1323653966803667863[41] = 0;
   out_1323653966803667863[42] = 0;
   out_1323653966803667863[43] = 0;
   out_1323653966803667863[44] = 0;
   out_1323653966803667863[45] = 0;
   out_1323653966803667863[46] = 0;
   out_1323653966803667863[47] = 0;
   out_1323653966803667863[48] = 0;
   out_1323653966803667863[49] = 0;
   out_1323653966803667863[50] = 0;
   out_1323653966803667863[51] = 0;
   out_1323653966803667863[52] = 0;
   out_1323653966803667863[53] = 0;
   out_1323653966803667863[54] = 0;
   out_1323653966803667863[55] = 0;
   out_1323653966803667863[56] = 1;
   out_1323653966803667863[57] = 0;
   out_1323653966803667863[58] = 0;
   out_1323653966803667863[59] = 0;
   out_1323653966803667863[60] = 0;
   out_1323653966803667863[61] = 0;
   out_1323653966803667863[62] = 0;
   out_1323653966803667863[63] = 0;
   out_1323653966803667863[64] = 0;
   out_1323653966803667863[65] = 0;
}
void h_10(double *state, double *unused, double *out_5862171915760362298) {
   out_5862171915760362298[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5862171915760362298[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5862171915760362298[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_840162557926928356) {
   out_840162557926928356[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_840162557926928356[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_840162557926928356[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_840162557926928356[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_840162557926928356[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_840162557926928356[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_840162557926928356[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_840162557926928356[7] = 0;
   out_840162557926928356[8] = 0;
   out_840162557926928356[9] = 0;
   out_840162557926928356[10] = 0;
   out_840162557926928356[11] = 0;
   out_840162557926928356[12] = 0;
   out_840162557926928356[13] = 0;
   out_840162557926928356[14] = 0;
   out_840162557926928356[15] = 0;
   out_840162557926928356[16] = 1;
   out_840162557926928356[17] = 0;
   out_840162557926928356[18] = 0;
   out_840162557926928356[19] = 1;
   out_840162557926928356[20] = 0;
   out_840162557926928356[21] = 0;
   out_840162557926928356[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_840162557926928356[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_840162557926928356[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_840162557926928356[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_840162557926928356[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_840162557926928356[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_840162557926928356[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_840162557926928356[29] = 0;
   out_840162557926928356[30] = 0;
   out_840162557926928356[31] = 0;
   out_840162557926928356[32] = 0;
   out_840162557926928356[33] = 0;
   out_840162557926928356[34] = 0;
   out_840162557926928356[35] = 0;
   out_840162557926928356[36] = 0;
   out_840162557926928356[37] = 0;
   out_840162557926928356[38] = 0;
   out_840162557926928356[39] = 1;
   out_840162557926928356[40] = 0;
   out_840162557926928356[41] = 0;
   out_840162557926928356[42] = 1;
   out_840162557926928356[43] = 0;
   out_840162557926928356[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_840162557926928356[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_840162557926928356[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_840162557926928356[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_840162557926928356[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_840162557926928356[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_840162557926928356[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_840162557926928356[51] = 0;
   out_840162557926928356[52] = 0;
   out_840162557926928356[53] = 0;
   out_840162557926928356[54] = 0;
   out_840162557926928356[55] = 0;
   out_840162557926928356[56] = 0;
   out_840162557926928356[57] = 0;
   out_840162557926928356[58] = 0;
   out_840162557926928356[59] = 0;
   out_840162557926928356[60] = 0;
   out_840162557926928356[61] = 0;
   out_840162557926928356[62] = 1;
   out_840162557926928356[63] = 0;
   out_840162557926928356[64] = 0;
   out_840162557926928356[65] = 1;
}
void h_12(double *state, double *unused, double *out_4478610574562312006) {
   out_4478610574562312006[0] = state[0];
   out_4478610574562312006[1] = state[1];
   out_4478610574562312006[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6101920728206039013) {
   out_6101920728206039013[0] = 1;
   out_6101920728206039013[1] = 0;
   out_6101920728206039013[2] = 0;
   out_6101920728206039013[3] = 0;
   out_6101920728206039013[4] = 0;
   out_6101920728206039013[5] = 0;
   out_6101920728206039013[6] = 0;
   out_6101920728206039013[7] = 0;
   out_6101920728206039013[8] = 0;
   out_6101920728206039013[9] = 0;
   out_6101920728206039013[10] = 0;
   out_6101920728206039013[11] = 0;
   out_6101920728206039013[12] = 0;
   out_6101920728206039013[13] = 0;
   out_6101920728206039013[14] = 0;
   out_6101920728206039013[15] = 0;
   out_6101920728206039013[16] = 0;
   out_6101920728206039013[17] = 0;
   out_6101920728206039013[18] = 0;
   out_6101920728206039013[19] = 0;
   out_6101920728206039013[20] = 0;
   out_6101920728206039013[21] = 0;
   out_6101920728206039013[22] = 0;
   out_6101920728206039013[23] = 1;
   out_6101920728206039013[24] = 0;
   out_6101920728206039013[25] = 0;
   out_6101920728206039013[26] = 0;
   out_6101920728206039013[27] = 0;
   out_6101920728206039013[28] = 0;
   out_6101920728206039013[29] = 0;
   out_6101920728206039013[30] = 0;
   out_6101920728206039013[31] = 0;
   out_6101920728206039013[32] = 0;
   out_6101920728206039013[33] = 0;
   out_6101920728206039013[34] = 0;
   out_6101920728206039013[35] = 0;
   out_6101920728206039013[36] = 0;
   out_6101920728206039013[37] = 0;
   out_6101920728206039013[38] = 0;
   out_6101920728206039013[39] = 0;
   out_6101920728206039013[40] = 0;
   out_6101920728206039013[41] = 0;
   out_6101920728206039013[42] = 0;
   out_6101920728206039013[43] = 0;
   out_6101920728206039013[44] = 0;
   out_6101920728206039013[45] = 0;
   out_6101920728206039013[46] = 1;
   out_6101920728206039013[47] = 0;
   out_6101920728206039013[48] = 0;
   out_6101920728206039013[49] = 0;
   out_6101920728206039013[50] = 0;
   out_6101920728206039013[51] = 0;
   out_6101920728206039013[52] = 0;
   out_6101920728206039013[53] = 0;
   out_6101920728206039013[54] = 0;
   out_6101920728206039013[55] = 0;
   out_6101920728206039013[56] = 0;
   out_6101920728206039013[57] = 0;
   out_6101920728206039013[58] = 0;
   out_6101920728206039013[59] = 0;
   out_6101920728206039013[60] = 0;
   out_6101920728206039013[61] = 0;
   out_6101920728206039013[62] = 0;
   out_6101920728206039013[63] = 0;
   out_6101920728206039013[64] = 0;
   out_6101920728206039013[65] = 0;
}
void h_31(double *state, double *unused, double *out_312814249559426213) {
   out_312814249559426213[0] = state[7];
   out_312814249559426213[1] = state[8];
   out_312814249559426213[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2596902911088172231) {
   out_2596902911088172231[0] = 0;
   out_2596902911088172231[1] = 0;
   out_2596902911088172231[2] = 0;
   out_2596902911088172231[3] = 0;
   out_2596902911088172231[4] = 0;
   out_2596902911088172231[5] = 0;
   out_2596902911088172231[6] = 0;
   out_2596902911088172231[7] = 1;
   out_2596902911088172231[8] = 0;
   out_2596902911088172231[9] = 0;
   out_2596902911088172231[10] = 0;
   out_2596902911088172231[11] = 0;
   out_2596902911088172231[12] = 0;
   out_2596902911088172231[13] = 0;
   out_2596902911088172231[14] = 0;
   out_2596902911088172231[15] = 0;
   out_2596902911088172231[16] = 0;
   out_2596902911088172231[17] = 0;
   out_2596902911088172231[18] = 0;
   out_2596902911088172231[19] = 0;
   out_2596902911088172231[20] = 0;
   out_2596902911088172231[21] = 0;
   out_2596902911088172231[22] = 0;
   out_2596902911088172231[23] = 0;
   out_2596902911088172231[24] = 0;
   out_2596902911088172231[25] = 0;
   out_2596902911088172231[26] = 0;
   out_2596902911088172231[27] = 0;
   out_2596902911088172231[28] = 0;
   out_2596902911088172231[29] = 0;
   out_2596902911088172231[30] = 1;
   out_2596902911088172231[31] = 0;
   out_2596902911088172231[32] = 0;
   out_2596902911088172231[33] = 0;
   out_2596902911088172231[34] = 0;
   out_2596902911088172231[35] = 0;
   out_2596902911088172231[36] = 0;
   out_2596902911088172231[37] = 0;
   out_2596902911088172231[38] = 0;
   out_2596902911088172231[39] = 0;
   out_2596902911088172231[40] = 0;
   out_2596902911088172231[41] = 0;
   out_2596902911088172231[42] = 0;
   out_2596902911088172231[43] = 0;
   out_2596902911088172231[44] = 0;
   out_2596902911088172231[45] = 0;
   out_2596902911088172231[46] = 0;
   out_2596902911088172231[47] = 0;
   out_2596902911088172231[48] = 0;
   out_2596902911088172231[49] = 0;
   out_2596902911088172231[50] = 0;
   out_2596902911088172231[51] = 0;
   out_2596902911088172231[52] = 0;
   out_2596902911088172231[53] = 1;
   out_2596902911088172231[54] = 0;
   out_2596902911088172231[55] = 0;
   out_2596902911088172231[56] = 0;
   out_2596902911088172231[57] = 0;
   out_2596902911088172231[58] = 0;
   out_2596902911088172231[59] = 0;
   out_2596902911088172231[60] = 0;
   out_2596902911088172231[61] = 0;
   out_2596902911088172231[62] = 0;
   out_2596902911088172231[63] = 0;
   out_2596902911088172231[64] = 0;
   out_2596902911088172231[65] = 0;
}
void h_32(double *state, double *unused, double *out_5184772214683631885) {
   out_5184772214683631885[0] = state[3];
   out_5184772214683631885[1] = state[4];
   out_5184772214683631885[2] = state[5];
   out_5184772214683631885[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8196313323955254464) {
   out_8196313323955254464[0] = 0;
   out_8196313323955254464[1] = 0;
   out_8196313323955254464[2] = 0;
   out_8196313323955254464[3] = 1;
   out_8196313323955254464[4] = 0;
   out_8196313323955254464[5] = 0;
   out_8196313323955254464[6] = 0;
   out_8196313323955254464[7] = 0;
   out_8196313323955254464[8] = 0;
   out_8196313323955254464[9] = 0;
   out_8196313323955254464[10] = 0;
   out_8196313323955254464[11] = 0;
   out_8196313323955254464[12] = 0;
   out_8196313323955254464[13] = 0;
   out_8196313323955254464[14] = 0;
   out_8196313323955254464[15] = 0;
   out_8196313323955254464[16] = 0;
   out_8196313323955254464[17] = 0;
   out_8196313323955254464[18] = 0;
   out_8196313323955254464[19] = 0;
   out_8196313323955254464[20] = 0;
   out_8196313323955254464[21] = 0;
   out_8196313323955254464[22] = 0;
   out_8196313323955254464[23] = 0;
   out_8196313323955254464[24] = 0;
   out_8196313323955254464[25] = 0;
   out_8196313323955254464[26] = 1;
   out_8196313323955254464[27] = 0;
   out_8196313323955254464[28] = 0;
   out_8196313323955254464[29] = 0;
   out_8196313323955254464[30] = 0;
   out_8196313323955254464[31] = 0;
   out_8196313323955254464[32] = 0;
   out_8196313323955254464[33] = 0;
   out_8196313323955254464[34] = 0;
   out_8196313323955254464[35] = 0;
   out_8196313323955254464[36] = 0;
   out_8196313323955254464[37] = 0;
   out_8196313323955254464[38] = 0;
   out_8196313323955254464[39] = 0;
   out_8196313323955254464[40] = 0;
   out_8196313323955254464[41] = 0;
   out_8196313323955254464[42] = 0;
   out_8196313323955254464[43] = 0;
   out_8196313323955254464[44] = 0;
   out_8196313323955254464[45] = 0;
   out_8196313323955254464[46] = 0;
   out_8196313323955254464[47] = 0;
   out_8196313323955254464[48] = 0;
   out_8196313323955254464[49] = 1;
   out_8196313323955254464[50] = 0;
   out_8196313323955254464[51] = 0;
   out_8196313323955254464[52] = 0;
   out_8196313323955254464[53] = 0;
   out_8196313323955254464[54] = 0;
   out_8196313323955254464[55] = 0;
   out_8196313323955254464[56] = 0;
   out_8196313323955254464[57] = 0;
   out_8196313323955254464[58] = 0;
   out_8196313323955254464[59] = 0;
   out_8196313323955254464[60] = 0;
   out_8196313323955254464[61] = 0;
   out_8196313323955254464[62] = 0;
   out_8196313323955254464[63] = 0;
   out_8196313323955254464[64] = 0;
   out_8196313323955254464[65] = 0;
   out_8196313323955254464[66] = 0;
   out_8196313323955254464[67] = 0;
   out_8196313323955254464[68] = 0;
   out_8196313323955254464[69] = 0;
   out_8196313323955254464[70] = 0;
   out_8196313323955254464[71] = 0;
   out_8196313323955254464[72] = 1;
   out_8196313323955254464[73] = 0;
   out_8196313323955254464[74] = 0;
   out_8196313323955254464[75] = 0;
   out_8196313323955254464[76] = 0;
   out_8196313323955254464[77] = 0;
   out_8196313323955254464[78] = 0;
   out_8196313323955254464[79] = 0;
   out_8196313323955254464[80] = 0;
   out_8196313323955254464[81] = 0;
   out_8196313323955254464[82] = 0;
   out_8196313323955254464[83] = 0;
   out_8196313323955254464[84] = 0;
   out_8196313323955254464[85] = 0;
   out_8196313323955254464[86] = 0;
   out_8196313323955254464[87] = 0;
}
void h_13(double *state, double *unused, double *out_4128099975101749082) {
   out_4128099975101749082[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4128099975101749082[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4128099975101749082[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8061570371766460313) {
   out_8061570371766460313[0] = 0;
   out_8061570371766460313[1] = 0;
   out_8061570371766460313[2] = 0;
   out_8061570371766460313[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8061570371766460313[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8061570371766460313[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8061570371766460313[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8061570371766460313[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8061570371766460313[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8061570371766460313[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8061570371766460313[10] = 0;
   out_8061570371766460313[11] = 0;
   out_8061570371766460313[12] = 0;
   out_8061570371766460313[13] = 0;
   out_8061570371766460313[14] = 0;
   out_8061570371766460313[15] = 0;
   out_8061570371766460313[16] = 0;
   out_8061570371766460313[17] = 0;
   out_8061570371766460313[18] = 0;
   out_8061570371766460313[19] = 0;
   out_8061570371766460313[20] = 0;
   out_8061570371766460313[21] = 0;
   out_8061570371766460313[22] = 0;
   out_8061570371766460313[23] = 0;
   out_8061570371766460313[24] = 0;
   out_8061570371766460313[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8061570371766460313[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8061570371766460313[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8061570371766460313[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8061570371766460313[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8061570371766460313[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8061570371766460313[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8061570371766460313[32] = 0;
   out_8061570371766460313[33] = 0;
   out_8061570371766460313[34] = 0;
   out_8061570371766460313[35] = 0;
   out_8061570371766460313[36] = 0;
   out_8061570371766460313[37] = 0;
   out_8061570371766460313[38] = 0;
   out_8061570371766460313[39] = 0;
   out_8061570371766460313[40] = 0;
   out_8061570371766460313[41] = 0;
   out_8061570371766460313[42] = 0;
   out_8061570371766460313[43] = 0;
   out_8061570371766460313[44] = 0;
   out_8061570371766460313[45] = 0;
   out_8061570371766460313[46] = 0;
   out_8061570371766460313[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8061570371766460313[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8061570371766460313[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8061570371766460313[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8061570371766460313[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8061570371766460313[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8061570371766460313[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8061570371766460313[54] = 0;
   out_8061570371766460313[55] = 0;
   out_8061570371766460313[56] = 0;
   out_8061570371766460313[57] = 0;
   out_8061570371766460313[58] = 0;
   out_8061570371766460313[59] = 0;
   out_8061570371766460313[60] = 0;
   out_8061570371766460313[61] = 0;
   out_8061570371766460313[62] = 0;
   out_8061570371766460313[63] = 0;
   out_8061570371766460313[64] = 0;
   out_8061570371766460313[65] = 0;
}
void h_14(double *state, double *unused, double *out_5258850399582755988) {
   out_5258850399582755988[0] = state[10];
   out_5258850399582755988[1] = state[11];
   out_5258850399582755988[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1323653966803667863) {
   out_1323653966803667863[0] = 0;
   out_1323653966803667863[1] = 0;
   out_1323653966803667863[2] = 0;
   out_1323653966803667863[3] = 0;
   out_1323653966803667863[4] = 0;
   out_1323653966803667863[5] = 0;
   out_1323653966803667863[6] = 0;
   out_1323653966803667863[7] = 0;
   out_1323653966803667863[8] = 0;
   out_1323653966803667863[9] = 0;
   out_1323653966803667863[10] = 1;
   out_1323653966803667863[11] = 0;
   out_1323653966803667863[12] = 0;
   out_1323653966803667863[13] = 0;
   out_1323653966803667863[14] = 0;
   out_1323653966803667863[15] = 0;
   out_1323653966803667863[16] = 0;
   out_1323653966803667863[17] = 0;
   out_1323653966803667863[18] = 0;
   out_1323653966803667863[19] = 0;
   out_1323653966803667863[20] = 0;
   out_1323653966803667863[21] = 0;
   out_1323653966803667863[22] = 0;
   out_1323653966803667863[23] = 0;
   out_1323653966803667863[24] = 0;
   out_1323653966803667863[25] = 0;
   out_1323653966803667863[26] = 0;
   out_1323653966803667863[27] = 0;
   out_1323653966803667863[28] = 0;
   out_1323653966803667863[29] = 0;
   out_1323653966803667863[30] = 0;
   out_1323653966803667863[31] = 0;
   out_1323653966803667863[32] = 0;
   out_1323653966803667863[33] = 1;
   out_1323653966803667863[34] = 0;
   out_1323653966803667863[35] = 0;
   out_1323653966803667863[36] = 0;
   out_1323653966803667863[37] = 0;
   out_1323653966803667863[38] = 0;
   out_1323653966803667863[39] = 0;
   out_1323653966803667863[40] = 0;
   out_1323653966803667863[41] = 0;
   out_1323653966803667863[42] = 0;
   out_1323653966803667863[43] = 0;
   out_1323653966803667863[44] = 0;
   out_1323653966803667863[45] = 0;
   out_1323653966803667863[46] = 0;
   out_1323653966803667863[47] = 0;
   out_1323653966803667863[48] = 0;
   out_1323653966803667863[49] = 0;
   out_1323653966803667863[50] = 0;
   out_1323653966803667863[51] = 0;
   out_1323653966803667863[52] = 0;
   out_1323653966803667863[53] = 0;
   out_1323653966803667863[54] = 0;
   out_1323653966803667863[55] = 0;
   out_1323653966803667863[56] = 1;
   out_1323653966803667863[57] = 0;
   out_1323653966803667863[58] = 0;
   out_1323653966803667863[59] = 0;
   out_1323653966803667863[60] = 0;
   out_1323653966803667863[61] = 0;
   out_1323653966803667863[62] = 0;
   out_1323653966803667863[63] = 0;
   out_1323653966803667863[64] = 0;
   out_1323653966803667863[65] = 0;
}
void h_33(double *state, double *unused, double *out_7176268788006454179) {
   out_7176268788006454179[0] = state[16];
   out_7176268788006454179[1] = state[17];
   out_7176268788006454179[2] = state[18];
}
void H_33(double *state, double *unused, double *out_553654093550685373) {
   out_553654093550685373[0] = 0;
   out_553654093550685373[1] = 0;
   out_553654093550685373[2] = 0;
   out_553654093550685373[3] = 0;
   out_553654093550685373[4] = 0;
   out_553654093550685373[5] = 0;
   out_553654093550685373[6] = 0;
   out_553654093550685373[7] = 0;
   out_553654093550685373[8] = 0;
   out_553654093550685373[9] = 0;
   out_553654093550685373[10] = 0;
   out_553654093550685373[11] = 0;
   out_553654093550685373[12] = 0;
   out_553654093550685373[13] = 0;
   out_553654093550685373[14] = 0;
   out_553654093550685373[15] = 0;
   out_553654093550685373[16] = 1;
   out_553654093550685373[17] = 0;
   out_553654093550685373[18] = 0;
   out_553654093550685373[19] = 0;
   out_553654093550685373[20] = 0;
   out_553654093550685373[21] = 0;
   out_553654093550685373[22] = 0;
   out_553654093550685373[23] = 0;
   out_553654093550685373[24] = 0;
   out_553654093550685373[25] = 0;
   out_553654093550685373[26] = 0;
   out_553654093550685373[27] = 0;
   out_553654093550685373[28] = 0;
   out_553654093550685373[29] = 0;
   out_553654093550685373[30] = 0;
   out_553654093550685373[31] = 0;
   out_553654093550685373[32] = 0;
   out_553654093550685373[33] = 0;
   out_553654093550685373[34] = 0;
   out_553654093550685373[35] = 0;
   out_553654093550685373[36] = 0;
   out_553654093550685373[37] = 0;
   out_553654093550685373[38] = 0;
   out_553654093550685373[39] = 1;
   out_553654093550685373[40] = 0;
   out_553654093550685373[41] = 0;
   out_553654093550685373[42] = 0;
   out_553654093550685373[43] = 0;
   out_553654093550685373[44] = 0;
   out_553654093550685373[45] = 0;
   out_553654093550685373[46] = 0;
   out_553654093550685373[47] = 0;
   out_553654093550685373[48] = 0;
   out_553654093550685373[49] = 0;
   out_553654093550685373[50] = 0;
   out_553654093550685373[51] = 0;
   out_553654093550685373[52] = 0;
   out_553654093550685373[53] = 0;
   out_553654093550685373[54] = 0;
   out_553654093550685373[55] = 0;
   out_553654093550685373[56] = 0;
   out_553654093550685373[57] = 0;
   out_553654093550685373[58] = 0;
   out_553654093550685373[59] = 0;
   out_553654093550685373[60] = 0;
   out_553654093550685373[61] = 0;
   out_553654093550685373[62] = 1;
   out_553654093550685373[63] = 0;
   out_553654093550685373[64] = 0;
   out_553654093550685373[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7220558093438677494) {
  H(in_vec, out_7220558093438677494);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_9043724947419933481) {
  err_fun(nom_x, delta_x, out_9043724947419933481);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1152112582838846515) {
  inv_err_fun(nom_x, true_x, out_1152112582838846515);
}
void live_H_mod_fun(double *state, double *out_5515159812904440844) {
  H_mod_fun(state, out_5515159812904440844);
}
void live_f_fun(double *state, double dt, double *out_5913141148673885470) {
  f_fun(state,  dt, out_5913141148673885470);
}
void live_F_fun(double *state, double dt, double *out_5824171225366303602) {
  F_fun(state,  dt, out_5824171225366303602);
}
void live_h_4(double *state, double *unused, double *out_7069358795977024945) {
  h_4(state, unused, out_7069358795977024945);
}
void live_H_4(double *state, double *unused, double *out_5963564968460779607) {
  H_4(state, unused, out_5963564968460779607);
}
void live_h_9(double *state, double *unused, double *out_5258850399582755988) {
  h_9(state, unused, out_5258850399582755988);
}
void live_H_9(double *state, double *unused, double *out_1323653966803667863) {
  H_9(state, unused, out_1323653966803667863);
}
void live_h_10(double *state, double *unused, double *out_5862171915760362298) {
  h_10(state, unused, out_5862171915760362298);
}
void live_H_10(double *state, double *unused, double *out_840162557926928356) {
  H_10(state, unused, out_840162557926928356);
}
void live_h_12(double *state, double *unused, double *out_4478610574562312006) {
  h_12(state, unused, out_4478610574562312006);
}
void live_H_12(double *state, double *unused, double *out_6101920728206039013) {
  H_12(state, unused, out_6101920728206039013);
}
void live_h_31(double *state, double *unused, double *out_312814249559426213) {
  h_31(state, unused, out_312814249559426213);
}
void live_H_31(double *state, double *unused, double *out_2596902911088172231) {
  H_31(state, unused, out_2596902911088172231);
}
void live_h_32(double *state, double *unused, double *out_5184772214683631885) {
  h_32(state, unused, out_5184772214683631885);
}
void live_H_32(double *state, double *unused, double *out_8196313323955254464) {
  H_32(state, unused, out_8196313323955254464);
}
void live_h_13(double *state, double *unused, double *out_4128099975101749082) {
  h_13(state, unused, out_4128099975101749082);
}
void live_H_13(double *state, double *unused, double *out_8061570371766460313) {
  H_13(state, unused, out_8061570371766460313);
}
void live_h_14(double *state, double *unused, double *out_5258850399582755988) {
  h_14(state, unused, out_5258850399582755988);
}
void live_H_14(double *state, double *unused, double *out_1323653966803667863) {
  H_14(state, unused, out_1323653966803667863);
}
void live_h_33(double *state, double *unused, double *out_7176268788006454179) {
  h_33(state, unused, out_7176268788006454179);
}
void live_H_33(double *state, double *unused, double *out_553654093550685373) {
  H_33(state, unused, out_553654093550685373);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
