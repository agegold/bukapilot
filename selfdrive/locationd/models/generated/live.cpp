#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8401443258435973941) {
   out_8401443258435973941[0] = 0;
   out_8401443258435973941[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8401443258435973941[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8401443258435973941[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8401443258435973941[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8401443258435973941[5] = -sin(in_vec[1]);
   out_8401443258435973941[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8401443258435973941[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8401443258435973941[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8401443258435973941[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8401443258435973941[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8401443258435973941[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8401443258435973941[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8401443258435973941[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8401443258435973941[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8401443258435973941[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8401443258435973941[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8401443258435973941[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3011540060554697934) {
   out_3011540060554697934[0] = delta_x[0] + nom_x[0];
   out_3011540060554697934[1] = delta_x[1] + nom_x[1];
   out_3011540060554697934[2] = delta_x[2] + nom_x[2];
   out_3011540060554697934[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3011540060554697934[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3011540060554697934[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3011540060554697934[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3011540060554697934[7] = delta_x[6] + nom_x[7];
   out_3011540060554697934[8] = delta_x[7] + nom_x[8];
   out_3011540060554697934[9] = delta_x[8] + nom_x[9];
   out_3011540060554697934[10] = delta_x[9] + nom_x[10];
   out_3011540060554697934[11] = delta_x[10] + nom_x[11];
   out_3011540060554697934[12] = delta_x[11] + nom_x[12];
   out_3011540060554697934[13] = delta_x[12] + nom_x[13];
   out_3011540060554697934[14] = delta_x[13] + nom_x[14];
   out_3011540060554697934[15] = delta_x[14] + nom_x[15];
   out_3011540060554697934[16] = delta_x[15] + nom_x[16];
   out_3011540060554697934[17] = delta_x[16] + nom_x[17];
   out_3011540060554697934[18] = delta_x[17] + nom_x[18];
   out_3011540060554697934[19] = delta_x[18] + nom_x[19];
   out_3011540060554697934[20] = delta_x[19] + nom_x[20];
   out_3011540060554697934[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2329848449004316646) {
   out_2329848449004316646[0] = -nom_x[0] + true_x[0];
   out_2329848449004316646[1] = -nom_x[1] + true_x[1];
   out_2329848449004316646[2] = -nom_x[2] + true_x[2];
   out_2329848449004316646[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2329848449004316646[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2329848449004316646[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2329848449004316646[6] = -nom_x[7] + true_x[7];
   out_2329848449004316646[7] = -nom_x[8] + true_x[8];
   out_2329848449004316646[8] = -nom_x[9] + true_x[9];
   out_2329848449004316646[9] = -nom_x[10] + true_x[10];
   out_2329848449004316646[10] = -nom_x[11] + true_x[11];
   out_2329848449004316646[11] = -nom_x[12] + true_x[12];
   out_2329848449004316646[12] = -nom_x[13] + true_x[13];
   out_2329848449004316646[13] = -nom_x[14] + true_x[14];
   out_2329848449004316646[14] = -nom_x[15] + true_x[15];
   out_2329848449004316646[15] = -nom_x[16] + true_x[16];
   out_2329848449004316646[16] = -nom_x[17] + true_x[17];
   out_2329848449004316646[17] = -nom_x[18] + true_x[18];
   out_2329848449004316646[18] = -nom_x[19] + true_x[19];
   out_2329848449004316646[19] = -nom_x[20] + true_x[20];
   out_2329848449004316646[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5953446052952728839) {
   out_5953446052952728839[0] = 1.0;
   out_5953446052952728839[1] = 0;
   out_5953446052952728839[2] = 0;
   out_5953446052952728839[3] = 0;
   out_5953446052952728839[4] = 0;
   out_5953446052952728839[5] = 0;
   out_5953446052952728839[6] = 0;
   out_5953446052952728839[7] = 0;
   out_5953446052952728839[8] = 0;
   out_5953446052952728839[9] = 0;
   out_5953446052952728839[10] = 0;
   out_5953446052952728839[11] = 0;
   out_5953446052952728839[12] = 0;
   out_5953446052952728839[13] = 0;
   out_5953446052952728839[14] = 0;
   out_5953446052952728839[15] = 0;
   out_5953446052952728839[16] = 0;
   out_5953446052952728839[17] = 0;
   out_5953446052952728839[18] = 0;
   out_5953446052952728839[19] = 0;
   out_5953446052952728839[20] = 0;
   out_5953446052952728839[21] = 0;
   out_5953446052952728839[22] = 1.0;
   out_5953446052952728839[23] = 0;
   out_5953446052952728839[24] = 0;
   out_5953446052952728839[25] = 0;
   out_5953446052952728839[26] = 0;
   out_5953446052952728839[27] = 0;
   out_5953446052952728839[28] = 0;
   out_5953446052952728839[29] = 0;
   out_5953446052952728839[30] = 0;
   out_5953446052952728839[31] = 0;
   out_5953446052952728839[32] = 0;
   out_5953446052952728839[33] = 0;
   out_5953446052952728839[34] = 0;
   out_5953446052952728839[35] = 0;
   out_5953446052952728839[36] = 0;
   out_5953446052952728839[37] = 0;
   out_5953446052952728839[38] = 0;
   out_5953446052952728839[39] = 0;
   out_5953446052952728839[40] = 0;
   out_5953446052952728839[41] = 0;
   out_5953446052952728839[42] = 0;
   out_5953446052952728839[43] = 0;
   out_5953446052952728839[44] = 1.0;
   out_5953446052952728839[45] = 0;
   out_5953446052952728839[46] = 0;
   out_5953446052952728839[47] = 0;
   out_5953446052952728839[48] = 0;
   out_5953446052952728839[49] = 0;
   out_5953446052952728839[50] = 0;
   out_5953446052952728839[51] = 0;
   out_5953446052952728839[52] = 0;
   out_5953446052952728839[53] = 0;
   out_5953446052952728839[54] = 0;
   out_5953446052952728839[55] = 0;
   out_5953446052952728839[56] = 0;
   out_5953446052952728839[57] = 0;
   out_5953446052952728839[58] = 0;
   out_5953446052952728839[59] = 0;
   out_5953446052952728839[60] = 0;
   out_5953446052952728839[61] = 0;
   out_5953446052952728839[62] = 0;
   out_5953446052952728839[63] = 0;
   out_5953446052952728839[64] = 0;
   out_5953446052952728839[65] = 0;
   out_5953446052952728839[66] = -0.5*state[4];
   out_5953446052952728839[67] = -0.5*state[5];
   out_5953446052952728839[68] = -0.5*state[6];
   out_5953446052952728839[69] = 0;
   out_5953446052952728839[70] = 0;
   out_5953446052952728839[71] = 0;
   out_5953446052952728839[72] = 0;
   out_5953446052952728839[73] = 0;
   out_5953446052952728839[74] = 0;
   out_5953446052952728839[75] = 0;
   out_5953446052952728839[76] = 0;
   out_5953446052952728839[77] = 0;
   out_5953446052952728839[78] = 0;
   out_5953446052952728839[79] = 0;
   out_5953446052952728839[80] = 0;
   out_5953446052952728839[81] = 0;
   out_5953446052952728839[82] = 0;
   out_5953446052952728839[83] = 0;
   out_5953446052952728839[84] = 0;
   out_5953446052952728839[85] = 0;
   out_5953446052952728839[86] = 0;
   out_5953446052952728839[87] = 0.5*state[3];
   out_5953446052952728839[88] = 0.5*state[6];
   out_5953446052952728839[89] = -0.5*state[5];
   out_5953446052952728839[90] = 0;
   out_5953446052952728839[91] = 0;
   out_5953446052952728839[92] = 0;
   out_5953446052952728839[93] = 0;
   out_5953446052952728839[94] = 0;
   out_5953446052952728839[95] = 0;
   out_5953446052952728839[96] = 0;
   out_5953446052952728839[97] = 0;
   out_5953446052952728839[98] = 0;
   out_5953446052952728839[99] = 0;
   out_5953446052952728839[100] = 0;
   out_5953446052952728839[101] = 0;
   out_5953446052952728839[102] = 0;
   out_5953446052952728839[103] = 0;
   out_5953446052952728839[104] = 0;
   out_5953446052952728839[105] = 0;
   out_5953446052952728839[106] = 0;
   out_5953446052952728839[107] = 0;
   out_5953446052952728839[108] = -0.5*state[6];
   out_5953446052952728839[109] = 0.5*state[3];
   out_5953446052952728839[110] = 0.5*state[4];
   out_5953446052952728839[111] = 0;
   out_5953446052952728839[112] = 0;
   out_5953446052952728839[113] = 0;
   out_5953446052952728839[114] = 0;
   out_5953446052952728839[115] = 0;
   out_5953446052952728839[116] = 0;
   out_5953446052952728839[117] = 0;
   out_5953446052952728839[118] = 0;
   out_5953446052952728839[119] = 0;
   out_5953446052952728839[120] = 0;
   out_5953446052952728839[121] = 0;
   out_5953446052952728839[122] = 0;
   out_5953446052952728839[123] = 0;
   out_5953446052952728839[124] = 0;
   out_5953446052952728839[125] = 0;
   out_5953446052952728839[126] = 0;
   out_5953446052952728839[127] = 0;
   out_5953446052952728839[128] = 0;
   out_5953446052952728839[129] = 0.5*state[5];
   out_5953446052952728839[130] = -0.5*state[4];
   out_5953446052952728839[131] = 0.5*state[3];
   out_5953446052952728839[132] = 0;
   out_5953446052952728839[133] = 0;
   out_5953446052952728839[134] = 0;
   out_5953446052952728839[135] = 0;
   out_5953446052952728839[136] = 0;
   out_5953446052952728839[137] = 0;
   out_5953446052952728839[138] = 0;
   out_5953446052952728839[139] = 0;
   out_5953446052952728839[140] = 0;
   out_5953446052952728839[141] = 0;
   out_5953446052952728839[142] = 0;
   out_5953446052952728839[143] = 0;
   out_5953446052952728839[144] = 0;
   out_5953446052952728839[145] = 0;
   out_5953446052952728839[146] = 0;
   out_5953446052952728839[147] = 0;
   out_5953446052952728839[148] = 0;
   out_5953446052952728839[149] = 0;
   out_5953446052952728839[150] = 0;
   out_5953446052952728839[151] = 0;
   out_5953446052952728839[152] = 0;
   out_5953446052952728839[153] = 1.0;
   out_5953446052952728839[154] = 0;
   out_5953446052952728839[155] = 0;
   out_5953446052952728839[156] = 0;
   out_5953446052952728839[157] = 0;
   out_5953446052952728839[158] = 0;
   out_5953446052952728839[159] = 0;
   out_5953446052952728839[160] = 0;
   out_5953446052952728839[161] = 0;
   out_5953446052952728839[162] = 0;
   out_5953446052952728839[163] = 0;
   out_5953446052952728839[164] = 0;
   out_5953446052952728839[165] = 0;
   out_5953446052952728839[166] = 0;
   out_5953446052952728839[167] = 0;
   out_5953446052952728839[168] = 0;
   out_5953446052952728839[169] = 0;
   out_5953446052952728839[170] = 0;
   out_5953446052952728839[171] = 0;
   out_5953446052952728839[172] = 0;
   out_5953446052952728839[173] = 0;
   out_5953446052952728839[174] = 0;
   out_5953446052952728839[175] = 1.0;
   out_5953446052952728839[176] = 0;
   out_5953446052952728839[177] = 0;
   out_5953446052952728839[178] = 0;
   out_5953446052952728839[179] = 0;
   out_5953446052952728839[180] = 0;
   out_5953446052952728839[181] = 0;
   out_5953446052952728839[182] = 0;
   out_5953446052952728839[183] = 0;
   out_5953446052952728839[184] = 0;
   out_5953446052952728839[185] = 0;
   out_5953446052952728839[186] = 0;
   out_5953446052952728839[187] = 0;
   out_5953446052952728839[188] = 0;
   out_5953446052952728839[189] = 0;
   out_5953446052952728839[190] = 0;
   out_5953446052952728839[191] = 0;
   out_5953446052952728839[192] = 0;
   out_5953446052952728839[193] = 0;
   out_5953446052952728839[194] = 0;
   out_5953446052952728839[195] = 0;
   out_5953446052952728839[196] = 0;
   out_5953446052952728839[197] = 1.0;
   out_5953446052952728839[198] = 0;
   out_5953446052952728839[199] = 0;
   out_5953446052952728839[200] = 0;
   out_5953446052952728839[201] = 0;
   out_5953446052952728839[202] = 0;
   out_5953446052952728839[203] = 0;
   out_5953446052952728839[204] = 0;
   out_5953446052952728839[205] = 0;
   out_5953446052952728839[206] = 0;
   out_5953446052952728839[207] = 0;
   out_5953446052952728839[208] = 0;
   out_5953446052952728839[209] = 0;
   out_5953446052952728839[210] = 0;
   out_5953446052952728839[211] = 0;
   out_5953446052952728839[212] = 0;
   out_5953446052952728839[213] = 0;
   out_5953446052952728839[214] = 0;
   out_5953446052952728839[215] = 0;
   out_5953446052952728839[216] = 0;
   out_5953446052952728839[217] = 0;
   out_5953446052952728839[218] = 0;
   out_5953446052952728839[219] = 1.0;
   out_5953446052952728839[220] = 0;
   out_5953446052952728839[221] = 0;
   out_5953446052952728839[222] = 0;
   out_5953446052952728839[223] = 0;
   out_5953446052952728839[224] = 0;
   out_5953446052952728839[225] = 0;
   out_5953446052952728839[226] = 0;
   out_5953446052952728839[227] = 0;
   out_5953446052952728839[228] = 0;
   out_5953446052952728839[229] = 0;
   out_5953446052952728839[230] = 0;
   out_5953446052952728839[231] = 0;
   out_5953446052952728839[232] = 0;
   out_5953446052952728839[233] = 0;
   out_5953446052952728839[234] = 0;
   out_5953446052952728839[235] = 0;
   out_5953446052952728839[236] = 0;
   out_5953446052952728839[237] = 0;
   out_5953446052952728839[238] = 0;
   out_5953446052952728839[239] = 0;
   out_5953446052952728839[240] = 0;
   out_5953446052952728839[241] = 1.0;
   out_5953446052952728839[242] = 0;
   out_5953446052952728839[243] = 0;
   out_5953446052952728839[244] = 0;
   out_5953446052952728839[245] = 0;
   out_5953446052952728839[246] = 0;
   out_5953446052952728839[247] = 0;
   out_5953446052952728839[248] = 0;
   out_5953446052952728839[249] = 0;
   out_5953446052952728839[250] = 0;
   out_5953446052952728839[251] = 0;
   out_5953446052952728839[252] = 0;
   out_5953446052952728839[253] = 0;
   out_5953446052952728839[254] = 0;
   out_5953446052952728839[255] = 0;
   out_5953446052952728839[256] = 0;
   out_5953446052952728839[257] = 0;
   out_5953446052952728839[258] = 0;
   out_5953446052952728839[259] = 0;
   out_5953446052952728839[260] = 0;
   out_5953446052952728839[261] = 0;
   out_5953446052952728839[262] = 0;
   out_5953446052952728839[263] = 1.0;
   out_5953446052952728839[264] = 0;
   out_5953446052952728839[265] = 0;
   out_5953446052952728839[266] = 0;
   out_5953446052952728839[267] = 0;
   out_5953446052952728839[268] = 0;
   out_5953446052952728839[269] = 0;
   out_5953446052952728839[270] = 0;
   out_5953446052952728839[271] = 0;
   out_5953446052952728839[272] = 0;
   out_5953446052952728839[273] = 0;
   out_5953446052952728839[274] = 0;
   out_5953446052952728839[275] = 0;
   out_5953446052952728839[276] = 0;
   out_5953446052952728839[277] = 0;
   out_5953446052952728839[278] = 0;
   out_5953446052952728839[279] = 0;
   out_5953446052952728839[280] = 0;
   out_5953446052952728839[281] = 0;
   out_5953446052952728839[282] = 0;
   out_5953446052952728839[283] = 0;
   out_5953446052952728839[284] = 0;
   out_5953446052952728839[285] = 1.0;
   out_5953446052952728839[286] = 0;
   out_5953446052952728839[287] = 0;
   out_5953446052952728839[288] = 0;
   out_5953446052952728839[289] = 0;
   out_5953446052952728839[290] = 0;
   out_5953446052952728839[291] = 0;
   out_5953446052952728839[292] = 0;
   out_5953446052952728839[293] = 0;
   out_5953446052952728839[294] = 0;
   out_5953446052952728839[295] = 0;
   out_5953446052952728839[296] = 0;
   out_5953446052952728839[297] = 0;
   out_5953446052952728839[298] = 0;
   out_5953446052952728839[299] = 0;
   out_5953446052952728839[300] = 0;
   out_5953446052952728839[301] = 0;
   out_5953446052952728839[302] = 0;
   out_5953446052952728839[303] = 0;
   out_5953446052952728839[304] = 0;
   out_5953446052952728839[305] = 0;
   out_5953446052952728839[306] = 0;
   out_5953446052952728839[307] = 1.0;
   out_5953446052952728839[308] = 0;
   out_5953446052952728839[309] = 0;
   out_5953446052952728839[310] = 0;
   out_5953446052952728839[311] = 0;
   out_5953446052952728839[312] = 0;
   out_5953446052952728839[313] = 0;
   out_5953446052952728839[314] = 0;
   out_5953446052952728839[315] = 0;
   out_5953446052952728839[316] = 0;
   out_5953446052952728839[317] = 0;
   out_5953446052952728839[318] = 0;
   out_5953446052952728839[319] = 0;
   out_5953446052952728839[320] = 0;
   out_5953446052952728839[321] = 0;
   out_5953446052952728839[322] = 0;
   out_5953446052952728839[323] = 0;
   out_5953446052952728839[324] = 0;
   out_5953446052952728839[325] = 0;
   out_5953446052952728839[326] = 0;
   out_5953446052952728839[327] = 0;
   out_5953446052952728839[328] = 0;
   out_5953446052952728839[329] = 1.0;
   out_5953446052952728839[330] = 0;
   out_5953446052952728839[331] = 0;
   out_5953446052952728839[332] = 0;
   out_5953446052952728839[333] = 0;
   out_5953446052952728839[334] = 0;
   out_5953446052952728839[335] = 0;
   out_5953446052952728839[336] = 0;
   out_5953446052952728839[337] = 0;
   out_5953446052952728839[338] = 0;
   out_5953446052952728839[339] = 0;
   out_5953446052952728839[340] = 0;
   out_5953446052952728839[341] = 0;
   out_5953446052952728839[342] = 0;
   out_5953446052952728839[343] = 0;
   out_5953446052952728839[344] = 0;
   out_5953446052952728839[345] = 0;
   out_5953446052952728839[346] = 0;
   out_5953446052952728839[347] = 0;
   out_5953446052952728839[348] = 0;
   out_5953446052952728839[349] = 0;
   out_5953446052952728839[350] = 0;
   out_5953446052952728839[351] = 1.0;
   out_5953446052952728839[352] = 0;
   out_5953446052952728839[353] = 0;
   out_5953446052952728839[354] = 0;
   out_5953446052952728839[355] = 0;
   out_5953446052952728839[356] = 0;
   out_5953446052952728839[357] = 0;
   out_5953446052952728839[358] = 0;
   out_5953446052952728839[359] = 0;
   out_5953446052952728839[360] = 0;
   out_5953446052952728839[361] = 0;
   out_5953446052952728839[362] = 0;
   out_5953446052952728839[363] = 0;
   out_5953446052952728839[364] = 0;
   out_5953446052952728839[365] = 0;
   out_5953446052952728839[366] = 0;
   out_5953446052952728839[367] = 0;
   out_5953446052952728839[368] = 0;
   out_5953446052952728839[369] = 0;
   out_5953446052952728839[370] = 0;
   out_5953446052952728839[371] = 0;
   out_5953446052952728839[372] = 0;
   out_5953446052952728839[373] = 1.0;
   out_5953446052952728839[374] = 0;
   out_5953446052952728839[375] = 0;
   out_5953446052952728839[376] = 0;
   out_5953446052952728839[377] = 0;
   out_5953446052952728839[378] = 0;
   out_5953446052952728839[379] = 0;
   out_5953446052952728839[380] = 0;
   out_5953446052952728839[381] = 0;
   out_5953446052952728839[382] = 0;
   out_5953446052952728839[383] = 0;
   out_5953446052952728839[384] = 0;
   out_5953446052952728839[385] = 0;
   out_5953446052952728839[386] = 0;
   out_5953446052952728839[387] = 0;
   out_5953446052952728839[388] = 0;
   out_5953446052952728839[389] = 0;
   out_5953446052952728839[390] = 0;
   out_5953446052952728839[391] = 0;
   out_5953446052952728839[392] = 0;
   out_5953446052952728839[393] = 0;
   out_5953446052952728839[394] = 0;
   out_5953446052952728839[395] = 1.0;
   out_5953446052952728839[396] = 0;
   out_5953446052952728839[397] = 0;
   out_5953446052952728839[398] = 0;
   out_5953446052952728839[399] = 0;
   out_5953446052952728839[400] = 0;
   out_5953446052952728839[401] = 0;
   out_5953446052952728839[402] = 0;
   out_5953446052952728839[403] = 0;
   out_5953446052952728839[404] = 0;
   out_5953446052952728839[405] = 0;
   out_5953446052952728839[406] = 0;
   out_5953446052952728839[407] = 0;
   out_5953446052952728839[408] = 0;
   out_5953446052952728839[409] = 0;
   out_5953446052952728839[410] = 0;
   out_5953446052952728839[411] = 0;
   out_5953446052952728839[412] = 0;
   out_5953446052952728839[413] = 0;
   out_5953446052952728839[414] = 0;
   out_5953446052952728839[415] = 0;
   out_5953446052952728839[416] = 0;
   out_5953446052952728839[417] = 1.0;
   out_5953446052952728839[418] = 0;
   out_5953446052952728839[419] = 0;
   out_5953446052952728839[420] = 0;
   out_5953446052952728839[421] = 0;
   out_5953446052952728839[422] = 0;
   out_5953446052952728839[423] = 0;
   out_5953446052952728839[424] = 0;
   out_5953446052952728839[425] = 0;
   out_5953446052952728839[426] = 0;
   out_5953446052952728839[427] = 0;
   out_5953446052952728839[428] = 0;
   out_5953446052952728839[429] = 0;
   out_5953446052952728839[430] = 0;
   out_5953446052952728839[431] = 0;
   out_5953446052952728839[432] = 0;
   out_5953446052952728839[433] = 0;
   out_5953446052952728839[434] = 0;
   out_5953446052952728839[435] = 0;
   out_5953446052952728839[436] = 0;
   out_5953446052952728839[437] = 0;
   out_5953446052952728839[438] = 0;
   out_5953446052952728839[439] = 1.0;
   out_5953446052952728839[440] = 0;
   out_5953446052952728839[441] = 0;
   out_5953446052952728839[442] = 0;
   out_5953446052952728839[443] = 0;
   out_5953446052952728839[444] = 0;
   out_5953446052952728839[445] = 0;
   out_5953446052952728839[446] = 0;
   out_5953446052952728839[447] = 0;
   out_5953446052952728839[448] = 0;
   out_5953446052952728839[449] = 0;
   out_5953446052952728839[450] = 0;
   out_5953446052952728839[451] = 0;
   out_5953446052952728839[452] = 0;
   out_5953446052952728839[453] = 0;
   out_5953446052952728839[454] = 0;
   out_5953446052952728839[455] = 0;
   out_5953446052952728839[456] = 0;
   out_5953446052952728839[457] = 0;
   out_5953446052952728839[458] = 0;
   out_5953446052952728839[459] = 0;
   out_5953446052952728839[460] = 0;
   out_5953446052952728839[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_576689838510283432) {
   out_576689838510283432[0] = dt*state[7] + state[0];
   out_576689838510283432[1] = dt*state[8] + state[1];
   out_576689838510283432[2] = dt*state[9] + state[2];
   out_576689838510283432[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_576689838510283432[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_576689838510283432[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_576689838510283432[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_576689838510283432[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_576689838510283432[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_576689838510283432[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_576689838510283432[10] = state[10];
   out_576689838510283432[11] = state[11];
   out_576689838510283432[12] = state[12];
   out_576689838510283432[13] = state[13];
   out_576689838510283432[14] = state[14];
   out_576689838510283432[15] = state[15];
   out_576689838510283432[16] = state[16];
   out_576689838510283432[17] = state[17];
   out_576689838510283432[18] = state[18];
   out_576689838510283432[19] = state[19];
   out_576689838510283432[20] = state[20];
   out_576689838510283432[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4959727181402762163) {
   out_4959727181402762163[0] = 1;
   out_4959727181402762163[1] = 0;
   out_4959727181402762163[2] = 0;
   out_4959727181402762163[3] = 0;
   out_4959727181402762163[4] = 0;
   out_4959727181402762163[5] = 0;
   out_4959727181402762163[6] = dt;
   out_4959727181402762163[7] = 0;
   out_4959727181402762163[8] = 0;
   out_4959727181402762163[9] = 0;
   out_4959727181402762163[10] = 0;
   out_4959727181402762163[11] = 0;
   out_4959727181402762163[12] = 0;
   out_4959727181402762163[13] = 0;
   out_4959727181402762163[14] = 0;
   out_4959727181402762163[15] = 0;
   out_4959727181402762163[16] = 0;
   out_4959727181402762163[17] = 0;
   out_4959727181402762163[18] = 0;
   out_4959727181402762163[19] = 0;
   out_4959727181402762163[20] = 0;
   out_4959727181402762163[21] = 0;
   out_4959727181402762163[22] = 1;
   out_4959727181402762163[23] = 0;
   out_4959727181402762163[24] = 0;
   out_4959727181402762163[25] = 0;
   out_4959727181402762163[26] = 0;
   out_4959727181402762163[27] = 0;
   out_4959727181402762163[28] = dt;
   out_4959727181402762163[29] = 0;
   out_4959727181402762163[30] = 0;
   out_4959727181402762163[31] = 0;
   out_4959727181402762163[32] = 0;
   out_4959727181402762163[33] = 0;
   out_4959727181402762163[34] = 0;
   out_4959727181402762163[35] = 0;
   out_4959727181402762163[36] = 0;
   out_4959727181402762163[37] = 0;
   out_4959727181402762163[38] = 0;
   out_4959727181402762163[39] = 0;
   out_4959727181402762163[40] = 0;
   out_4959727181402762163[41] = 0;
   out_4959727181402762163[42] = 0;
   out_4959727181402762163[43] = 0;
   out_4959727181402762163[44] = 1;
   out_4959727181402762163[45] = 0;
   out_4959727181402762163[46] = 0;
   out_4959727181402762163[47] = 0;
   out_4959727181402762163[48] = 0;
   out_4959727181402762163[49] = 0;
   out_4959727181402762163[50] = dt;
   out_4959727181402762163[51] = 0;
   out_4959727181402762163[52] = 0;
   out_4959727181402762163[53] = 0;
   out_4959727181402762163[54] = 0;
   out_4959727181402762163[55] = 0;
   out_4959727181402762163[56] = 0;
   out_4959727181402762163[57] = 0;
   out_4959727181402762163[58] = 0;
   out_4959727181402762163[59] = 0;
   out_4959727181402762163[60] = 0;
   out_4959727181402762163[61] = 0;
   out_4959727181402762163[62] = 0;
   out_4959727181402762163[63] = 0;
   out_4959727181402762163[64] = 0;
   out_4959727181402762163[65] = 0;
   out_4959727181402762163[66] = 1;
   out_4959727181402762163[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4959727181402762163[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4959727181402762163[69] = 0;
   out_4959727181402762163[70] = 0;
   out_4959727181402762163[71] = 0;
   out_4959727181402762163[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4959727181402762163[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4959727181402762163[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4959727181402762163[75] = 0;
   out_4959727181402762163[76] = 0;
   out_4959727181402762163[77] = 0;
   out_4959727181402762163[78] = 0;
   out_4959727181402762163[79] = 0;
   out_4959727181402762163[80] = 0;
   out_4959727181402762163[81] = 0;
   out_4959727181402762163[82] = 0;
   out_4959727181402762163[83] = 0;
   out_4959727181402762163[84] = 0;
   out_4959727181402762163[85] = 0;
   out_4959727181402762163[86] = 0;
   out_4959727181402762163[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4959727181402762163[88] = 1;
   out_4959727181402762163[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4959727181402762163[90] = 0;
   out_4959727181402762163[91] = 0;
   out_4959727181402762163[92] = 0;
   out_4959727181402762163[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4959727181402762163[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4959727181402762163[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4959727181402762163[96] = 0;
   out_4959727181402762163[97] = 0;
   out_4959727181402762163[98] = 0;
   out_4959727181402762163[99] = 0;
   out_4959727181402762163[100] = 0;
   out_4959727181402762163[101] = 0;
   out_4959727181402762163[102] = 0;
   out_4959727181402762163[103] = 0;
   out_4959727181402762163[104] = 0;
   out_4959727181402762163[105] = 0;
   out_4959727181402762163[106] = 0;
   out_4959727181402762163[107] = 0;
   out_4959727181402762163[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4959727181402762163[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4959727181402762163[110] = 1;
   out_4959727181402762163[111] = 0;
   out_4959727181402762163[112] = 0;
   out_4959727181402762163[113] = 0;
   out_4959727181402762163[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4959727181402762163[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4959727181402762163[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4959727181402762163[117] = 0;
   out_4959727181402762163[118] = 0;
   out_4959727181402762163[119] = 0;
   out_4959727181402762163[120] = 0;
   out_4959727181402762163[121] = 0;
   out_4959727181402762163[122] = 0;
   out_4959727181402762163[123] = 0;
   out_4959727181402762163[124] = 0;
   out_4959727181402762163[125] = 0;
   out_4959727181402762163[126] = 0;
   out_4959727181402762163[127] = 0;
   out_4959727181402762163[128] = 0;
   out_4959727181402762163[129] = 0;
   out_4959727181402762163[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4959727181402762163[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4959727181402762163[132] = 1;
   out_4959727181402762163[133] = 0;
   out_4959727181402762163[134] = 0;
   out_4959727181402762163[135] = 0;
   out_4959727181402762163[136] = 0;
   out_4959727181402762163[137] = 0;
   out_4959727181402762163[138] = 0;
   out_4959727181402762163[139] = 0;
   out_4959727181402762163[140] = 0;
   out_4959727181402762163[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4959727181402762163[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4959727181402762163[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4959727181402762163[144] = 0;
   out_4959727181402762163[145] = 0;
   out_4959727181402762163[146] = 0;
   out_4959727181402762163[147] = 0;
   out_4959727181402762163[148] = 0;
   out_4959727181402762163[149] = 0;
   out_4959727181402762163[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4959727181402762163[151] = 0;
   out_4959727181402762163[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4959727181402762163[153] = 0;
   out_4959727181402762163[154] = 1;
   out_4959727181402762163[155] = 0;
   out_4959727181402762163[156] = 0;
   out_4959727181402762163[157] = 0;
   out_4959727181402762163[158] = 0;
   out_4959727181402762163[159] = 0;
   out_4959727181402762163[160] = 0;
   out_4959727181402762163[161] = 0;
   out_4959727181402762163[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4959727181402762163[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4959727181402762163[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4959727181402762163[165] = 0;
   out_4959727181402762163[166] = 0;
   out_4959727181402762163[167] = 0;
   out_4959727181402762163[168] = 0;
   out_4959727181402762163[169] = 0;
   out_4959727181402762163[170] = 0;
   out_4959727181402762163[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4959727181402762163[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4959727181402762163[173] = 0;
   out_4959727181402762163[174] = 0;
   out_4959727181402762163[175] = 0;
   out_4959727181402762163[176] = 1;
   out_4959727181402762163[177] = 0;
   out_4959727181402762163[178] = 0;
   out_4959727181402762163[179] = 0;
   out_4959727181402762163[180] = 0;
   out_4959727181402762163[181] = 0;
   out_4959727181402762163[182] = 0;
   out_4959727181402762163[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4959727181402762163[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4959727181402762163[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4959727181402762163[186] = 0;
   out_4959727181402762163[187] = 0;
   out_4959727181402762163[188] = 0;
   out_4959727181402762163[189] = 0;
   out_4959727181402762163[190] = 0;
   out_4959727181402762163[191] = 0;
   out_4959727181402762163[192] = 0;
   out_4959727181402762163[193] = 0;
   out_4959727181402762163[194] = 0;
   out_4959727181402762163[195] = 0;
   out_4959727181402762163[196] = 0;
   out_4959727181402762163[197] = 0;
   out_4959727181402762163[198] = 1;
   out_4959727181402762163[199] = 0;
   out_4959727181402762163[200] = 0;
   out_4959727181402762163[201] = 0;
   out_4959727181402762163[202] = 0;
   out_4959727181402762163[203] = 0;
   out_4959727181402762163[204] = 0;
   out_4959727181402762163[205] = 0;
   out_4959727181402762163[206] = 0;
   out_4959727181402762163[207] = 0;
   out_4959727181402762163[208] = 0;
   out_4959727181402762163[209] = 0;
   out_4959727181402762163[210] = 0;
   out_4959727181402762163[211] = 0;
   out_4959727181402762163[212] = 0;
   out_4959727181402762163[213] = 0;
   out_4959727181402762163[214] = 0;
   out_4959727181402762163[215] = 0;
   out_4959727181402762163[216] = 0;
   out_4959727181402762163[217] = 0;
   out_4959727181402762163[218] = 0;
   out_4959727181402762163[219] = 0;
   out_4959727181402762163[220] = 1;
   out_4959727181402762163[221] = 0;
   out_4959727181402762163[222] = 0;
   out_4959727181402762163[223] = 0;
   out_4959727181402762163[224] = 0;
   out_4959727181402762163[225] = 0;
   out_4959727181402762163[226] = 0;
   out_4959727181402762163[227] = 0;
   out_4959727181402762163[228] = 0;
   out_4959727181402762163[229] = 0;
   out_4959727181402762163[230] = 0;
   out_4959727181402762163[231] = 0;
   out_4959727181402762163[232] = 0;
   out_4959727181402762163[233] = 0;
   out_4959727181402762163[234] = 0;
   out_4959727181402762163[235] = 0;
   out_4959727181402762163[236] = 0;
   out_4959727181402762163[237] = 0;
   out_4959727181402762163[238] = 0;
   out_4959727181402762163[239] = 0;
   out_4959727181402762163[240] = 0;
   out_4959727181402762163[241] = 0;
   out_4959727181402762163[242] = 1;
   out_4959727181402762163[243] = 0;
   out_4959727181402762163[244] = 0;
   out_4959727181402762163[245] = 0;
   out_4959727181402762163[246] = 0;
   out_4959727181402762163[247] = 0;
   out_4959727181402762163[248] = 0;
   out_4959727181402762163[249] = 0;
   out_4959727181402762163[250] = 0;
   out_4959727181402762163[251] = 0;
   out_4959727181402762163[252] = 0;
   out_4959727181402762163[253] = 0;
   out_4959727181402762163[254] = 0;
   out_4959727181402762163[255] = 0;
   out_4959727181402762163[256] = 0;
   out_4959727181402762163[257] = 0;
   out_4959727181402762163[258] = 0;
   out_4959727181402762163[259] = 0;
   out_4959727181402762163[260] = 0;
   out_4959727181402762163[261] = 0;
   out_4959727181402762163[262] = 0;
   out_4959727181402762163[263] = 0;
   out_4959727181402762163[264] = 1;
   out_4959727181402762163[265] = 0;
   out_4959727181402762163[266] = 0;
   out_4959727181402762163[267] = 0;
   out_4959727181402762163[268] = 0;
   out_4959727181402762163[269] = 0;
   out_4959727181402762163[270] = 0;
   out_4959727181402762163[271] = 0;
   out_4959727181402762163[272] = 0;
   out_4959727181402762163[273] = 0;
   out_4959727181402762163[274] = 0;
   out_4959727181402762163[275] = 0;
   out_4959727181402762163[276] = 0;
   out_4959727181402762163[277] = 0;
   out_4959727181402762163[278] = 0;
   out_4959727181402762163[279] = 0;
   out_4959727181402762163[280] = 0;
   out_4959727181402762163[281] = 0;
   out_4959727181402762163[282] = 0;
   out_4959727181402762163[283] = 0;
   out_4959727181402762163[284] = 0;
   out_4959727181402762163[285] = 0;
   out_4959727181402762163[286] = 1;
   out_4959727181402762163[287] = 0;
   out_4959727181402762163[288] = 0;
   out_4959727181402762163[289] = 0;
   out_4959727181402762163[290] = 0;
   out_4959727181402762163[291] = 0;
   out_4959727181402762163[292] = 0;
   out_4959727181402762163[293] = 0;
   out_4959727181402762163[294] = 0;
   out_4959727181402762163[295] = 0;
   out_4959727181402762163[296] = 0;
   out_4959727181402762163[297] = 0;
   out_4959727181402762163[298] = 0;
   out_4959727181402762163[299] = 0;
   out_4959727181402762163[300] = 0;
   out_4959727181402762163[301] = 0;
   out_4959727181402762163[302] = 0;
   out_4959727181402762163[303] = 0;
   out_4959727181402762163[304] = 0;
   out_4959727181402762163[305] = 0;
   out_4959727181402762163[306] = 0;
   out_4959727181402762163[307] = 0;
   out_4959727181402762163[308] = 1;
   out_4959727181402762163[309] = 0;
   out_4959727181402762163[310] = 0;
   out_4959727181402762163[311] = 0;
   out_4959727181402762163[312] = 0;
   out_4959727181402762163[313] = 0;
   out_4959727181402762163[314] = 0;
   out_4959727181402762163[315] = 0;
   out_4959727181402762163[316] = 0;
   out_4959727181402762163[317] = 0;
   out_4959727181402762163[318] = 0;
   out_4959727181402762163[319] = 0;
   out_4959727181402762163[320] = 0;
   out_4959727181402762163[321] = 0;
   out_4959727181402762163[322] = 0;
   out_4959727181402762163[323] = 0;
   out_4959727181402762163[324] = 0;
   out_4959727181402762163[325] = 0;
   out_4959727181402762163[326] = 0;
   out_4959727181402762163[327] = 0;
   out_4959727181402762163[328] = 0;
   out_4959727181402762163[329] = 0;
   out_4959727181402762163[330] = 1;
   out_4959727181402762163[331] = 0;
   out_4959727181402762163[332] = 0;
   out_4959727181402762163[333] = 0;
   out_4959727181402762163[334] = 0;
   out_4959727181402762163[335] = 0;
   out_4959727181402762163[336] = 0;
   out_4959727181402762163[337] = 0;
   out_4959727181402762163[338] = 0;
   out_4959727181402762163[339] = 0;
   out_4959727181402762163[340] = 0;
   out_4959727181402762163[341] = 0;
   out_4959727181402762163[342] = 0;
   out_4959727181402762163[343] = 0;
   out_4959727181402762163[344] = 0;
   out_4959727181402762163[345] = 0;
   out_4959727181402762163[346] = 0;
   out_4959727181402762163[347] = 0;
   out_4959727181402762163[348] = 0;
   out_4959727181402762163[349] = 0;
   out_4959727181402762163[350] = 0;
   out_4959727181402762163[351] = 0;
   out_4959727181402762163[352] = 1;
   out_4959727181402762163[353] = 0;
   out_4959727181402762163[354] = 0;
   out_4959727181402762163[355] = 0;
   out_4959727181402762163[356] = 0;
   out_4959727181402762163[357] = 0;
   out_4959727181402762163[358] = 0;
   out_4959727181402762163[359] = 0;
   out_4959727181402762163[360] = 0;
   out_4959727181402762163[361] = 0;
   out_4959727181402762163[362] = 0;
   out_4959727181402762163[363] = 0;
   out_4959727181402762163[364] = 0;
   out_4959727181402762163[365] = 0;
   out_4959727181402762163[366] = 0;
   out_4959727181402762163[367] = 0;
   out_4959727181402762163[368] = 0;
   out_4959727181402762163[369] = 0;
   out_4959727181402762163[370] = 0;
   out_4959727181402762163[371] = 0;
   out_4959727181402762163[372] = 0;
   out_4959727181402762163[373] = 0;
   out_4959727181402762163[374] = 1;
   out_4959727181402762163[375] = 0;
   out_4959727181402762163[376] = 0;
   out_4959727181402762163[377] = 0;
   out_4959727181402762163[378] = 0;
   out_4959727181402762163[379] = 0;
   out_4959727181402762163[380] = 0;
   out_4959727181402762163[381] = 0;
   out_4959727181402762163[382] = 0;
   out_4959727181402762163[383] = 0;
   out_4959727181402762163[384] = 0;
   out_4959727181402762163[385] = 0;
   out_4959727181402762163[386] = 0;
   out_4959727181402762163[387] = 0;
   out_4959727181402762163[388] = 0;
   out_4959727181402762163[389] = 0;
   out_4959727181402762163[390] = 0;
   out_4959727181402762163[391] = 0;
   out_4959727181402762163[392] = 0;
   out_4959727181402762163[393] = 0;
   out_4959727181402762163[394] = 0;
   out_4959727181402762163[395] = 0;
   out_4959727181402762163[396] = 1;
   out_4959727181402762163[397] = 0;
   out_4959727181402762163[398] = 0;
   out_4959727181402762163[399] = 0;
   out_4959727181402762163[400] = 0;
   out_4959727181402762163[401] = 0;
   out_4959727181402762163[402] = 0;
   out_4959727181402762163[403] = 0;
   out_4959727181402762163[404] = 0;
   out_4959727181402762163[405] = 0;
   out_4959727181402762163[406] = 0;
   out_4959727181402762163[407] = 0;
   out_4959727181402762163[408] = 0;
   out_4959727181402762163[409] = 0;
   out_4959727181402762163[410] = 0;
   out_4959727181402762163[411] = 0;
   out_4959727181402762163[412] = 0;
   out_4959727181402762163[413] = 0;
   out_4959727181402762163[414] = 0;
   out_4959727181402762163[415] = 0;
   out_4959727181402762163[416] = 0;
   out_4959727181402762163[417] = 0;
   out_4959727181402762163[418] = 1;
   out_4959727181402762163[419] = 0;
   out_4959727181402762163[420] = 0;
   out_4959727181402762163[421] = 0;
   out_4959727181402762163[422] = 0;
   out_4959727181402762163[423] = 0;
   out_4959727181402762163[424] = 0;
   out_4959727181402762163[425] = 0;
   out_4959727181402762163[426] = 0;
   out_4959727181402762163[427] = 0;
   out_4959727181402762163[428] = 0;
   out_4959727181402762163[429] = 0;
   out_4959727181402762163[430] = 0;
   out_4959727181402762163[431] = 0;
   out_4959727181402762163[432] = 0;
   out_4959727181402762163[433] = 0;
   out_4959727181402762163[434] = 0;
   out_4959727181402762163[435] = 0;
   out_4959727181402762163[436] = 0;
   out_4959727181402762163[437] = 0;
   out_4959727181402762163[438] = 0;
   out_4959727181402762163[439] = 0;
   out_4959727181402762163[440] = 1;
}
void h_4(double *state, double *unused, double *out_6587257671490569481) {
   out_6587257671490569481[0] = state[10] + state[13];
   out_6587257671490569481[1] = state[11] + state[14];
   out_6587257671490569481[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1072245686001335260) {
   out_1072245686001335260[0] = 0;
   out_1072245686001335260[1] = 0;
   out_1072245686001335260[2] = 0;
   out_1072245686001335260[3] = 0;
   out_1072245686001335260[4] = 0;
   out_1072245686001335260[5] = 0;
   out_1072245686001335260[6] = 0;
   out_1072245686001335260[7] = 0;
   out_1072245686001335260[8] = 0;
   out_1072245686001335260[9] = 0;
   out_1072245686001335260[10] = 1;
   out_1072245686001335260[11] = 0;
   out_1072245686001335260[12] = 0;
   out_1072245686001335260[13] = 1;
   out_1072245686001335260[14] = 0;
   out_1072245686001335260[15] = 0;
   out_1072245686001335260[16] = 0;
   out_1072245686001335260[17] = 0;
   out_1072245686001335260[18] = 0;
   out_1072245686001335260[19] = 0;
   out_1072245686001335260[20] = 0;
   out_1072245686001335260[21] = 0;
   out_1072245686001335260[22] = 0;
   out_1072245686001335260[23] = 0;
   out_1072245686001335260[24] = 0;
   out_1072245686001335260[25] = 0;
   out_1072245686001335260[26] = 0;
   out_1072245686001335260[27] = 0;
   out_1072245686001335260[28] = 0;
   out_1072245686001335260[29] = 0;
   out_1072245686001335260[30] = 0;
   out_1072245686001335260[31] = 0;
   out_1072245686001335260[32] = 0;
   out_1072245686001335260[33] = 1;
   out_1072245686001335260[34] = 0;
   out_1072245686001335260[35] = 0;
   out_1072245686001335260[36] = 1;
   out_1072245686001335260[37] = 0;
   out_1072245686001335260[38] = 0;
   out_1072245686001335260[39] = 0;
   out_1072245686001335260[40] = 0;
   out_1072245686001335260[41] = 0;
   out_1072245686001335260[42] = 0;
   out_1072245686001335260[43] = 0;
   out_1072245686001335260[44] = 0;
   out_1072245686001335260[45] = 0;
   out_1072245686001335260[46] = 0;
   out_1072245686001335260[47] = 0;
   out_1072245686001335260[48] = 0;
   out_1072245686001335260[49] = 0;
   out_1072245686001335260[50] = 0;
   out_1072245686001335260[51] = 0;
   out_1072245686001335260[52] = 0;
   out_1072245686001335260[53] = 0;
   out_1072245686001335260[54] = 0;
   out_1072245686001335260[55] = 0;
   out_1072245686001335260[56] = 1;
   out_1072245686001335260[57] = 0;
   out_1072245686001335260[58] = 0;
   out_1072245686001335260[59] = 1;
   out_1072245686001335260[60] = 0;
   out_1072245686001335260[61] = 0;
   out_1072245686001335260[62] = 0;
   out_1072245686001335260[63] = 0;
   out_1072245686001335260[64] = 0;
   out_1072245686001335260[65] = 0;
}
void h_9(double *state, double *unused, double *out_608170080952672459) {
   out_608170080952672459[0] = state[10];
   out_608170080952672459[1] = state[11];
   out_608170080952672459[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6214973249263112210) {
   out_6214973249263112210[0] = 0;
   out_6214973249263112210[1] = 0;
   out_6214973249263112210[2] = 0;
   out_6214973249263112210[3] = 0;
   out_6214973249263112210[4] = 0;
   out_6214973249263112210[5] = 0;
   out_6214973249263112210[6] = 0;
   out_6214973249263112210[7] = 0;
   out_6214973249263112210[8] = 0;
   out_6214973249263112210[9] = 0;
   out_6214973249263112210[10] = 1;
   out_6214973249263112210[11] = 0;
   out_6214973249263112210[12] = 0;
   out_6214973249263112210[13] = 0;
   out_6214973249263112210[14] = 0;
   out_6214973249263112210[15] = 0;
   out_6214973249263112210[16] = 0;
   out_6214973249263112210[17] = 0;
   out_6214973249263112210[18] = 0;
   out_6214973249263112210[19] = 0;
   out_6214973249263112210[20] = 0;
   out_6214973249263112210[21] = 0;
   out_6214973249263112210[22] = 0;
   out_6214973249263112210[23] = 0;
   out_6214973249263112210[24] = 0;
   out_6214973249263112210[25] = 0;
   out_6214973249263112210[26] = 0;
   out_6214973249263112210[27] = 0;
   out_6214973249263112210[28] = 0;
   out_6214973249263112210[29] = 0;
   out_6214973249263112210[30] = 0;
   out_6214973249263112210[31] = 0;
   out_6214973249263112210[32] = 0;
   out_6214973249263112210[33] = 1;
   out_6214973249263112210[34] = 0;
   out_6214973249263112210[35] = 0;
   out_6214973249263112210[36] = 0;
   out_6214973249263112210[37] = 0;
   out_6214973249263112210[38] = 0;
   out_6214973249263112210[39] = 0;
   out_6214973249263112210[40] = 0;
   out_6214973249263112210[41] = 0;
   out_6214973249263112210[42] = 0;
   out_6214973249263112210[43] = 0;
   out_6214973249263112210[44] = 0;
   out_6214973249263112210[45] = 0;
   out_6214973249263112210[46] = 0;
   out_6214973249263112210[47] = 0;
   out_6214973249263112210[48] = 0;
   out_6214973249263112210[49] = 0;
   out_6214973249263112210[50] = 0;
   out_6214973249263112210[51] = 0;
   out_6214973249263112210[52] = 0;
   out_6214973249263112210[53] = 0;
   out_6214973249263112210[54] = 0;
   out_6214973249263112210[55] = 0;
   out_6214973249263112210[56] = 1;
   out_6214973249263112210[57] = 0;
   out_6214973249263112210[58] = 0;
   out_6214973249263112210[59] = 0;
   out_6214973249263112210[60] = 0;
   out_6214973249263112210[61] = 0;
   out_6214973249263112210[62] = 0;
   out_6214973249263112210[63] = 0;
   out_6214973249263112210[64] = 0;
   out_6214973249263112210[65] = 0;
}
void h_10(double *state, double *unused, double *out_6232880459400070621) {
   out_6232880459400070621[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6232880459400070621[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6232880459400070621[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_922693051656624723) {
   out_922693051656624723[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_922693051656624723[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_922693051656624723[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_922693051656624723[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_922693051656624723[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_922693051656624723[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_922693051656624723[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_922693051656624723[7] = 0;
   out_922693051656624723[8] = 0;
   out_922693051656624723[9] = 0;
   out_922693051656624723[10] = 0;
   out_922693051656624723[11] = 0;
   out_922693051656624723[12] = 0;
   out_922693051656624723[13] = 0;
   out_922693051656624723[14] = 0;
   out_922693051656624723[15] = 0;
   out_922693051656624723[16] = 1;
   out_922693051656624723[17] = 0;
   out_922693051656624723[18] = 0;
   out_922693051656624723[19] = 1;
   out_922693051656624723[20] = 0;
   out_922693051656624723[21] = 0;
   out_922693051656624723[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_922693051656624723[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_922693051656624723[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_922693051656624723[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_922693051656624723[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_922693051656624723[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_922693051656624723[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_922693051656624723[29] = 0;
   out_922693051656624723[30] = 0;
   out_922693051656624723[31] = 0;
   out_922693051656624723[32] = 0;
   out_922693051656624723[33] = 0;
   out_922693051656624723[34] = 0;
   out_922693051656624723[35] = 0;
   out_922693051656624723[36] = 0;
   out_922693051656624723[37] = 0;
   out_922693051656624723[38] = 0;
   out_922693051656624723[39] = 1;
   out_922693051656624723[40] = 0;
   out_922693051656624723[41] = 0;
   out_922693051656624723[42] = 1;
   out_922693051656624723[43] = 0;
   out_922693051656624723[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_922693051656624723[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_922693051656624723[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_922693051656624723[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_922693051656624723[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_922693051656624723[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_922693051656624723[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_922693051656624723[51] = 0;
   out_922693051656624723[52] = 0;
   out_922693051656624723[53] = 0;
   out_922693051656624723[54] = 0;
   out_922693051656624723[55] = 0;
   out_922693051656624723[56] = 0;
   out_922693051656624723[57] = 0;
   out_922693051656624723[58] = 0;
   out_922693051656624723[59] = 0;
   out_922693051656624723[60] = 0;
   out_922693051656624723[61] = 0;
   out_922693051656624723[62] = 1;
   out_922693051656624723[63] = 0;
   out_922693051656624723[64] = 0;
   out_922693051656624723[65] = 1;
}
void h_12(double *state, double *unused, double *out_4570450692652821415) {
   out_4570450692652821415[0] = state[0];
   out_4570450692652821415[1] = state[1];
   out_4570450692652821415[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3947210722030626535) {
   out_3947210722030626535[0] = 1;
   out_3947210722030626535[1] = 0;
   out_3947210722030626535[2] = 0;
   out_3947210722030626535[3] = 0;
   out_3947210722030626535[4] = 0;
   out_3947210722030626535[5] = 0;
   out_3947210722030626535[6] = 0;
   out_3947210722030626535[7] = 0;
   out_3947210722030626535[8] = 0;
   out_3947210722030626535[9] = 0;
   out_3947210722030626535[10] = 0;
   out_3947210722030626535[11] = 0;
   out_3947210722030626535[12] = 0;
   out_3947210722030626535[13] = 0;
   out_3947210722030626535[14] = 0;
   out_3947210722030626535[15] = 0;
   out_3947210722030626535[16] = 0;
   out_3947210722030626535[17] = 0;
   out_3947210722030626535[18] = 0;
   out_3947210722030626535[19] = 0;
   out_3947210722030626535[20] = 0;
   out_3947210722030626535[21] = 0;
   out_3947210722030626535[22] = 0;
   out_3947210722030626535[23] = 1;
   out_3947210722030626535[24] = 0;
   out_3947210722030626535[25] = 0;
   out_3947210722030626535[26] = 0;
   out_3947210722030626535[27] = 0;
   out_3947210722030626535[28] = 0;
   out_3947210722030626535[29] = 0;
   out_3947210722030626535[30] = 0;
   out_3947210722030626535[31] = 0;
   out_3947210722030626535[32] = 0;
   out_3947210722030626535[33] = 0;
   out_3947210722030626535[34] = 0;
   out_3947210722030626535[35] = 0;
   out_3947210722030626535[36] = 0;
   out_3947210722030626535[37] = 0;
   out_3947210722030626535[38] = 0;
   out_3947210722030626535[39] = 0;
   out_3947210722030626535[40] = 0;
   out_3947210722030626535[41] = 0;
   out_3947210722030626535[42] = 0;
   out_3947210722030626535[43] = 0;
   out_3947210722030626535[44] = 0;
   out_3947210722030626535[45] = 0;
   out_3947210722030626535[46] = 1;
   out_3947210722030626535[47] = 0;
   out_3947210722030626535[48] = 0;
   out_3947210722030626535[49] = 0;
   out_3947210722030626535[50] = 0;
   out_3947210722030626535[51] = 0;
   out_3947210722030626535[52] = 0;
   out_3947210722030626535[53] = 0;
   out_3947210722030626535[54] = 0;
   out_3947210722030626535[55] = 0;
   out_3947210722030626535[56] = 0;
   out_3947210722030626535[57] = 0;
   out_3947210722030626535[58] = 0;
   out_3947210722030626535[59] = 0;
   out_3947210722030626535[60] = 0;
   out_3947210722030626535[61] = 0;
   out_3947210722030626535[62] = 0;
   out_3947210722030626535[63] = 0;
   out_3947210722030626535[64] = 0;
   out_3947210722030626535[65] = 0;
}
void h_31(double *state, double *unused, double *out_7993436279119541516) {
   out_7993436279119541516[0] = state[7];
   out_7993436279119541516[1] = state[8];
   out_7993436279119541516[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6692773754355640244) {
   out_6692773754355640244[0] = 0;
   out_6692773754355640244[1] = 0;
   out_6692773754355640244[2] = 0;
   out_6692773754355640244[3] = 0;
   out_6692773754355640244[4] = 0;
   out_6692773754355640244[5] = 0;
   out_6692773754355640244[6] = 0;
   out_6692773754355640244[7] = 1;
   out_6692773754355640244[8] = 0;
   out_6692773754355640244[9] = 0;
   out_6692773754355640244[10] = 0;
   out_6692773754355640244[11] = 0;
   out_6692773754355640244[12] = 0;
   out_6692773754355640244[13] = 0;
   out_6692773754355640244[14] = 0;
   out_6692773754355640244[15] = 0;
   out_6692773754355640244[16] = 0;
   out_6692773754355640244[17] = 0;
   out_6692773754355640244[18] = 0;
   out_6692773754355640244[19] = 0;
   out_6692773754355640244[20] = 0;
   out_6692773754355640244[21] = 0;
   out_6692773754355640244[22] = 0;
   out_6692773754355640244[23] = 0;
   out_6692773754355640244[24] = 0;
   out_6692773754355640244[25] = 0;
   out_6692773754355640244[26] = 0;
   out_6692773754355640244[27] = 0;
   out_6692773754355640244[28] = 0;
   out_6692773754355640244[29] = 0;
   out_6692773754355640244[30] = 1;
   out_6692773754355640244[31] = 0;
   out_6692773754355640244[32] = 0;
   out_6692773754355640244[33] = 0;
   out_6692773754355640244[34] = 0;
   out_6692773754355640244[35] = 0;
   out_6692773754355640244[36] = 0;
   out_6692773754355640244[37] = 0;
   out_6692773754355640244[38] = 0;
   out_6692773754355640244[39] = 0;
   out_6692773754355640244[40] = 0;
   out_6692773754355640244[41] = 0;
   out_6692773754355640244[42] = 0;
   out_6692773754355640244[43] = 0;
   out_6692773754355640244[44] = 0;
   out_6692773754355640244[45] = 0;
   out_6692773754355640244[46] = 0;
   out_6692773754355640244[47] = 0;
   out_6692773754355640244[48] = 0;
   out_6692773754355640244[49] = 0;
   out_6692773754355640244[50] = 0;
   out_6692773754355640244[51] = 0;
   out_6692773754355640244[52] = 0;
   out_6692773754355640244[53] = 1;
   out_6692773754355640244[54] = 0;
   out_6692773754355640244[55] = 0;
   out_6692773754355640244[56] = 0;
   out_6692773754355640244[57] = 0;
   out_6692773754355640244[58] = 0;
   out_6692773754355640244[59] = 0;
   out_6692773754355640244[60] = 0;
   out_6692773754355640244[61] = 0;
   out_6692773754355640244[62] = 0;
   out_6692773754355640244[63] = 0;
   out_6692773754355640244[64] = 0;
   out_6692773754355640244[65] = 0;
}
void h_32(double *state, double *unused, double *out_739000771032314965) {
   out_739000771032314965[0] = state[3];
   out_739000771032314965[1] = state[4];
   out_739000771032314965[2] = state[5];
   out_739000771032314965[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2425581156312012585) {
   out_2425581156312012585[0] = 0;
   out_2425581156312012585[1] = 0;
   out_2425581156312012585[2] = 0;
   out_2425581156312012585[3] = 1;
   out_2425581156312012585[4] = 0;
   out_2425581156312012585[5] = 0;
   out_2425581156312012585[6] = 0;
   out_2425581156312012585[7] = 0;
   out_2425581156312012585[8] = 0;
   out_2425581156312012585[9] = 0;
   out_2425581156312012585[10] = 0;
   out_2425581156312012585[11] = 0;
   out_2425581156312012585[12] = 0;
   out_2425581156312012585[13] = 0;
   out_2425581156312012585[14] = 0;
   out_2425581156312012585[15] = 0;
   out_2425581156312012585[16] = 0;
   out_2425581156312012585[17] = 0;
   out_2425581156312012585[18] = 0;
   out_2425581156312012585[19] = 0;
   out_2425581156312012585[20] = 0;
   out_2425581156312012585[21] = 0;
   out_2425581156312012585[22] = 0;
   out_2425581156312012585[23] = 0;
   out_2425581156312012585[24] = 0;
   out_2425581156312012585[25] = 0;
   out_2425581156312012585[26] = 1;
   out_2425581156312012585[27] = 0;
   out_2425581156312012585[28] = 0;
   out_2425581156312012585[29] = 0;
   out_2425581156312012585[30] = 0;
   out_2425581156312012585[31] = 0;
   out_2425581156312012585[32] = 0;
   out_2425581156312012585[33] = 0;
   out_2425581156312012585[34] = 0;
   out_2425581156312012585[35] = 0;
   out_2425581156312012585[36] = 0;
   out_2425581156312012585[37] = 0;
   out_2425581156312012585[38] = 0;
   out_2425581156312012585[39] = 0;
   out_2425581156312012585[40] = 0;
   out_2425581156312012585[41] = 0;
   out_2425581156312012585[42] = 0;
   out_2425581156312012585[43] = 0;
   out_2425581156312012585[44] = 0;
   out_2425581156312012585[45] = 0;
   out_2425581156312012585[46] = 0;
   out_2425581156312012585[47] = 0;
   out_2425581156312012585[48] = 0;
   out_2425581156312012585[49] = 1;
   out_2425581156312012585[50] = 0;
   out_2425581156312012585[51] = 0;
   out_2425581156312012585[52] = 0;
   out_2425581156312012585[53] = 0;
   out_2425581156312012585[54] = 0;
   out_2425581156312012585[55] = 0;
   out_2425581156312012585[56] = 0;
   out_2425581156312012585[57] = 0;
   out_2425581156312012585[58] = 0;
   out_2425581156312012585[59] = 0;
   out_2425581156312012585[60] = 0;
   out_2425581156312012585[61] = 0;
   out_2425581156312012585[62] = 0;
   out_2425581156312012585[63] = 0;
   out_2425581156312012585[64] = 0;
   out_2425581156312012585[65] = 0;
   out_2425581156312012585[66] = 0;
   out_2425581156312012585[67] = 0;
   out_2425581156312012585[68] = 0;
   out_2425581156312012585[69] = 0;
   out_2425581156312012585[70] = 0;
   out_2425581156312012585[71] = 0;
   out_2425581156312012585[72] = 1;
   out_2425581156312012585[73] = 0;
   out_2425581156312012585[74] = 0;
   out_2425581156312012585[75] = 0;
   out_2425581156312012585[76] = 0;
   out_2425581156312012585[77] = 0;
   out_2425581156312012585[78] = 0;
   out_2425581156312012585[79] = 0;
   out_2425581156312012585[80] = 0;
   out_2425581156312012585[81] = 0;
   out_2425581156312012585[82] = 0;
   out_2425581156312012585[83] = 0;
   out_2425581156312012585[84] = 0;
   out_2425581156312012585[85] = 0;
   out_2425581156312012585[86] = 0;
   out_2425581156312012585[87] = 0;
}
void h_13(double *state, double *unused, double *out_8307942746337328291) {
   out_8307942746337328291[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8307942746337328291[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8307942746337328291[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4318811407375332569) {
   out_4318811407375332569[0] = 0;
   out_4318811407375332569[1] = 0;
   out_4318811407375332569[2] = 0;
   out_4318811407375332569[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4318811407375332569[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318811407375332569[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4318811407375332569[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4318811407375332569[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4318811407375332569[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4318811407375332569[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4318811407375332569[10] = 0;
   out_4318811407375332569[11] = 0;
   out_4318811407375332569[12] = 0;
   out_4318811407375332569[13] = 0;
   out_4318811407375332569[14] = 0;
   out_4318811407375332569[15] = 0;
   out_4318811407375332569[16] = 0;
   out_4318811407375332569[17] = 0;
   out_4318811407375332569[18] = 0;
   out_4318811407375332569[19] = 0;
   out_4318811407375332569[20] = 0;
   out_4318811407375332569[21] = 0;
   out_4318811407375332569[22] = 0;
   out_4318811407375332569[23] = 0;
   out_4318811407375332569[24] = 0;
   out_4318811407375332569[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4318811407375332569[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4318811407375332569[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318811407375332569[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4318811407375332569[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4318811407375332569[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4318811407375332569[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4318811407375332569[32] = 0;
   out_4318811407375332569[33] = 0;
   out_4318811407375332569[34] = 0;
   out_4318811407375332569[35] = 0;
   out_4318811407375332569[36] = 0;
   out_4318811407375332569[37] = 0;
   out_4318811407375332569[38] = 0;
   out_4318811407375332569[39] = 0;
   out_4318811407375332569[40] = 0;
   out_4318811407375332569[41] = 0;
   out_4318811407375332569[42] = 0;
   out_4318811407375332569[43] = 0;
   out_4318811407375332569[44] = 0;
   out_4318811407375332569[45] = 0;
   out_4318811407375332569[46] = 0;
   out_4318811407375332569[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4318811407375332569[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4318811407375332569[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4318811407375332569[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4318811407375332569[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4318811407375332569[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4318811407375332569[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4318811407375332569[54] = 0;
   out_4318811407375332569[55] = 0;
   out_4318811407375332569[56] = 0;
   out_4318811407375332569[57] = 0;
   out_4318811407375332569[58] = 0;
   out_4318811407375332569[59] = 0;
   out_4318811407375332569[60] = 0;
   out_4318811407375332569[61] = 0;
   out_4318811407375332569[62] = 0;
   out_4318811407375332569[63] = 0;
   out_4318811407375332569[64] = 0;
   out_4318811407375332569[65] = 0;
}
void h_14(double *state, double *unused, double *out_608170080952672459) {
   out_608170080952672459[0] = state[10];
   out_608170080952672459[1] = state[11];
   out_608170080952672459[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6214973249263112210) {
   out_6214973249263112210[0] = 0;
   out_6214973249263112210[1] = 0;
   out_6214973249263112210[2] = 0;
   out_6214973249263112210[3] = 0;
   out_6214973249263112210[4] = 0;
   out_6214973249263112210[5] = 0;
   out_6214973249263112210[6] = 0;
   out_6214973249263112210[7] = 0;
   out_6214973249263112210[8] = 0;
   out_6214973249263112210[9] = 0;
   out_6214973249263112210[10] = 1;
   out_6214973249263112210[11] = 0;
   out_6214973249263112210[12] = 0;
   out_6214973249263112210[13] = 0;
   out_6214973249263112210[14] = 0;
   out_6214973249263112210[15] = 0;
   out_6214973249263112210[16] = 0;
   out_6214973249263112210[17] = 0;
   out_6214973249263112210[18] = 0;
   out_6214973249263112210[19] = 0;
   out_6214973249263112210[20] = 0;
   out_6214973249263112210[21] = 0;
   out_6214973249263112210[22] = 0;
   out_6214973249263112210[23] = 0;
   out_6214973249263112210[24] = 0;
   out_6214973249263112210[25] = 0;
   out_6214973249263112210[26] = 0;
   out_6214973249263112210[27] = 0;
   out_6214973249263112210[28] = 0;
   out_6214973249263112210[29] = 0;
   out_6214973249263112210[30] = 0;
   out_6214973249263112210[31] = 0;
   out_6214973249263112210[32] = 0;
   out_6214973249263112210[33] = 1;
   out_6214973249263112210[34] = 0;
   out_6214973249263112210[35] = 0;
   out_6214973249263112210[36] = 0;
   out_6214973249263112210[37] = 0;
   out_6214973249263112210[38] = 0;
   out_6214973249263112210[39] = 0;
   out_6214973249263112210[40] = 0;
   out_6214973249263112210[41] = 0;
   out_6214973249263112210[42] = 0;
   out_6214973249263112210[43] = 0;
   out_6214973249263112210[44] = 0;
   out_6214973249263112210[45] = 0;
   out_6214973249263112210[46] = 0;
   out_6214973249263112210[47] = 0;
   out_6214973249263112210[48] = 0;
   out_6214973249263112210[49] = 0;
   out_6214973249263112210[50] = 0;
   out_6214973249263112210[51] = 0;
   out_6214973249263112210[52] = 0;
   out_6214973249263112210[53] = 0;
   out_6214973249263112210[54] = 0;
   out_6214973249263112210[55] = 0;
   out_6214973249263112210[56] = 1;
   out_6214973249263112210[57] = 0;
   out_6214973249263112210[58] = 0;
   out_6214973249263112210[59] = 0;
   out_6214973249263112210[60] = 0;
   out_6214973249263112210[61] = 0;
   out_6214973249263112210[62] = 0;
   out_6214973249263112210[63] = 0;
   out_6214973249263112210[64] = 0;
   out_6214973249263112210[65] = 0;
}
void h_33(double *state, double *unused, double *out_7702337563609058904) {
   out_7702337563609058904[0] = state[16];
   out_7702337563609058904[1] = state[17];
   out_7702337563609058904[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8603413314715053768) {
   out_8603413314715053768[0] = 0;
   out_8603413314715053768[1] = 0;
   out_8603413314715053768[2] = 0;
   out_8603413314715053768[3] = 0;
   out_8603413314715053768[4] = 0;
   out_8603413314715053768[5] = 0;
   out_8603413314715053768[6] = 0;
   out_8603413314715053768[7] = 0;
   out_8603413314715053768[8] = 0;
   out_8603413314715053768[9] = 0;
   out_8603413314715053768[10] = 0;
   out_8603413314715053768[11] = 0;
   out_8603413314715053768[12] = 0;
   out_8603413314715053768[13] = 0;
   out_8603413314715053768[14] = 0;
   out_8603413314715053768[15] = 0;
   out_8603413314715053768[16] = 1;
   out_8603413314715053768[17] = 0;
   out_8603413314715053768[18] = 0;
   out_8603413314715053768[19] = 0;
   out_8603413314715053768[20] = 0;
   out_8603413314715053768[21] = 0;
   out_8603413314715053768[22] = 0;
   out_8603413314715053768[23] = 0;
   out_8603413314715053768[24] = 0;
   out_8603413314715053768[25] = 0;
   out_8603413314715053768[26] = 0;
   out_8603413314715053768[27] = 0;
   out_8603413314715053768[28] = 0;
   out_8603413314715053768[29] = 0;
   out_8603413314715053768[30] = 0;
   out_8603413314715053768[31] = 0;
   out_8603413314715053768[32] = 0;
   out_8603413314715053768[33] = 0;
   out_8603413314715053768[34] = 0;
   out_8603413314715053768[35] = 0;
   out_8603413314715053768[36] = 0;
   out_8603413314715053768[37] = 0;
   out_8603413314715053768[38] = 0;
   out_8603413314715053768[39] = 1;
   out_8603413314715053768[40] = 0;
   out_8603413314715053768[41] = 0;
   out_8603413314715053768[42] = 0;
   out_8603413314715053768[43] = 0;
   out_8603413314715053768[44] = 0;
   out_8603413314715053768[45] = 0;
   out_8603413314715053768[46] = 0;
   out_8603413314715053768[47] = 0;
   out_8603413314715053768[48] = 0;
   out_8603413314715053768[49] = 0;
   out_8603413314715053768[50] = 0;
   out_8603413314715053768[51] = 0;
   out_8603413314715053768[52] = 0;
   out_8603413314715053768[53] = 0;
   out_8603413314715053768[54] = 0;
   out_8603413314715053768[55] = 0;
   out_8603413314715053768[56] = 0;
   out_8603413314715053768[57] = 0;
   out_8603413314715053768[58] = 0;
   out_8603413314715053768[59] = 0;
   out_8603413314715053768[60] = 0;
   out_8603413314715053768[61] = 0;
   out_8603413314715053768[62] = 1;
   out_8603413314715053768[63] = 0;
   out_8603413314715053768[64] = 0;
   out_8603413314715053768[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8401443258435973941) {
  H(in_vec, out_8401443258435973941);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3011540060554697934) {
  err_fun(nom_x, delta_x, out_3011540060554697934);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2329848449004316646) {
  inv_err_fun(nom_x, true_x, out_2329848449004316646);
}
void live_H_mod_fun(double *state, double *out_5953446052952728839) {
  H_mod_fun(state, out_5953446052952728839);
}
void live_f_fun(double *state, double dt, double *out_576689838510283432) {
  f_fun(state,  dt, out_576689838510283432);
}
void live_F_fun(double *state, double dt, double *out_4959727181402762163) {
  F_fun(state,  dt, out_4959727181402762163);
}
void live_h_4(double *state, double *unused, double *out_6587257671490569481) {
  h_4(state, unused, out_6587257671490569481);
}
void live_H_4(double *state, double *unused, double *out_1072245686001335260) {
  H_4(state, unused, out_1072245686001335260);
}
void live_h_9(double *state, double *unused, double *out_608170080952672459) {
  h_9(state, unused, out_608170080952672459);
}
void live_H_9(double *state, double *unused, double *out_6214973249263112210) {
  H_9(state, unused, out_6214973249263112210);
}
void live_h_10(double *state, double *unused, double *out_6232880459400070621) {
  h_10(state, unused, out_6232880459400070621);
}
void live_H_10(double *state, double *unused, double *out_922693051656624723) {
  H_10(state, unused, out_922693051656624723);
}
void live_h_12(double *state, double *unused, double *out_4570450692652821415) {
  h_12(state, unused, out_4570450692652821415);
}
void live_H_12(double *state, double *unused, double *out_3947210722030626535) {
  H_12(state, unused, out_3947210722030626535);
}
void live_h_31(double *state, double *unused, double *out_7993436279119541516) {
  h_31(state, unused, out_7993436279119541516);
}
void live_H_31(double *state, double *unused, double *out_6692773754355640244) {
  H_31(state, unused, out_6692773754355640244);
}
void live_h_32(double *state, double *unused, double *out_739000771032314965) {
  h_32(state, unused, out_739000771032314965);
}
void live_H_32(double *state, double *unused, double *out_2425581156312012585) {
  H_32(state, unused, out_2425581156312012585);
}
void live_h_13(double *state, double *unused, double *out_8307942746337328291) {
  h_13(state, unused, out_8307942746337328291);
}
void live_H_13(double *state, double *unused, double *out_4318811407375332569) {
  H_13(state, unused, out_4318811407375332569);
}
void live_h_14(double *state, double *unused, double *out_608170080952672459) {
  h_14(state, unused, out_608170080952672459);
}
void live_H_14(double *state, double *unused, double *out_6214973249263112210) {
  H_14(state, unused, out_6214973249263112210);
}
void live_h_33(double *state, double *unused, double *out_7702337563609058904) {
  h_33(state, unused, out_7702337563609058904);
}
void live_H_33(double *state, double *unused, double *out_8603413314715053768) {
  H_33(state, unused, out_8603413314715053768);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
