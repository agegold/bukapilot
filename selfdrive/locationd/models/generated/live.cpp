#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_69284044656233370) {
   out_69284044656233370[0] = 0;
   out_69284044656233370[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_69284044656233370[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_69284044656233370[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_69284044656233370[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_69284044656233370[5] = -sin(in_vec[1]);
   out_69284044656233370[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_69284044656233370[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_69284044656233370[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_69284044656233370[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_69284044656233370[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_69284044656233370[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_69284044656233370[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_69284044656233370[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_69284044656233370[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_69284044656233370[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_69284044656233370[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_69284044656233370[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4029443404658213361) {
   out_4029443404658213361[0] = delta_x[0] + nom_x[0];
   out_4029443404658213361[1] = delta_x[1] + nom_x[1];
   out_4029443404658213361[2] = delta_x[2] + nom_x[2];
   out_4029443404658213361[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4029443404658213361[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4029443404658213361[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4029443404658213361[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4029443404658213361[7] = delta_x[6] + nom_x[7];
   out_4029443404658213361[8] = delta_x[7] + nom_x[8];
   out_4029443404658213361[9] = delta_x[8] + nom_x[9];
   out_4029443404658213361[10] = delta_x[9] + nom_x[10];
   out_4029443404658213361[11] = delta_x[10] + nom_x[11];
   out_4029443404658213361[12] = delta_x[11] + nom_x[12];
   out_4029443404658213361[13] = delta_x[12] + nom_x[13];
   out_4029443404658213361[14] = delta_x[13] + nom_x[14];
   out_4029443404658213361[15] = delta_x[14] + nom_x[15];
   out_4029443404658213361[16] = delta_x[15] + nom_x[16];
   out_4029443404658213361[17] = delta_x[16] + nom_x[17];
   out_4029443404658213361[18] = delta_x[17] + nom_x[18];
   out_4029443404658213361[19] = delta_x[18] + nom_x[19];
   out_4029443404658213361[20] = delta_x[19] + nom_x[20];
   out_4029443404658213361[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3045923156268303314) {
   out_3045923156268303314[0] = -nom_x[0] + true_x[0];
   out_3045923156268303314[1] = -nom_x[1] + true_x[1];
   out_3045923156268303314[2] = -nom_x[2] + true_x[2];
   out_3045923156268303314[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3045923156268303314[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3045923156268303314[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3045923156268303314[6] = -nom_x[7] + true_x[7];
   out_3045923156268303314[7] = -nom_x[8] + true_x[8];
   out_3045923156268303314[8] = -nom_x[9] + true_x[9];
   out_3045923156268303314[9] = -nom_x[10] + true_x[10];
   out_3045923156268303314[10] = -nom_x[11] + true_x[11];
   out_3045923156268303314[11] = -nom_x[12] + true_x[12];
   out_3045923156268303314[12] = -nom_x[13] + true_x[13];
   out_3045923156268303314[13] = -nom_x[14] + true_x[14];
   out_3045923156268303314[14] = -nom_x[15] + true_x[15];
   out_3045923156268303314[15] = -nom_x[16] + true_x[16];
   out_3045923156268303314[16] = -nom_x[17] + true_x[17];
   out_3045923156268303314[17] = -nom_x[18] + true_x[18];
   out_3045923156268303314[18] = -nom_x[19] + true_x[19];
   out_3045923156268303314[19] = -nom_x[20] + true_x[20];
   out_3045923156268303314[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3408748072006619981) {
   out_3408748072006619981[0] = 1.0;
   out_3408748072006619981[1] = 0;
   out_3408748072006619981[2] = 0;
   out_3408748072006619981[3] = 0;
   out_3408748072006619981[4] = 0;
   out_3408748072006619981[5] = 0;
   out_3408748072006619981[6] = 0;
   out_3408748072006619981[7] = 0;
   out_3408748072006619981[8] = 0;
   out_3408748072006619981[9] = 0;
   out_3408748072006619981[10] = 0;
   out_3408748072006619981[11] = 0;
   out_3408748072006619981[12] = 0;
   out_3408748072006619981[13] = 0;
   out_3408748072006619981[14] = 0;
   out_3408748072006619981[15] = 0;
   out_3408748072006619981[16] = 0;
   out_3408748072006619981[17] = 0;
   out_3408748072006619981[18] = 0;
   out_3408748072006619981[19] = 0;
   out_3408748072006619981[20] = 0;
   out_3408748072006619981[21] = 0;
   out_3408748072006619981[22] = 1.0;
   out_3408748072006619981[23] = 0;
   out_3408748072006619981[24] = 0;
   out_3408748072006619981[25] = 0;
   out_3408748072006619981[26] = 0;
   out_3408748072006619981[27] = 0;
   out_3408748072006619981[28] = 0;
   out_3408748072006619981[29] = 0;
   out_3408748072006619981[30] = 0;
   out_3408748072006619981[31] = 0;
   out_3408748072006619981[32] = 0;
   out_3408748072006619981[33] = 0;
   out_3408748072006619981[34] = 0;
   out_3408748072006619981[35] = 0;
   out_3408748072006619981[36] = 0;
   out_3408748072006619981[37] = 0;
   out_3408748072006619981[38] = 0;
   out_3408748072006619981[39] = 0;
   out_3408748072006619981[40] = 0;
   out_3408748072006619981[41] = 0;
   out_3408748072006619981[42] = 0;
   out_3408748072006619981[43] = 0;
   out_3408748072006619981[44] = 1.0;
   out_3408748072006619981[45] = 0;
   out_3408748072006619981[46] = 0;
   out_3408748072006619981[47] = 0;
   out_3408748072006619981[48] = 0;
   out_3408748072006619981[49] = 0;
   out_3408748072006619981[50] = 0;
   out_3408748072006619981[51] = 0;
   out_3408748072006619981[52] = 0;
   out_3408748072006619981[53] = 0;
   out_3408748072006619981[54] = 0;
   out_3408748072006619981[55] = 0;
   out_3408748072006619981[56] = 0;
   out_3408748072006619981[57] = 0;
   out_3408748072006619981[58] = 0;
   out_3408748072006619981[59] = 0;
   out_3408748072006619981[60] = 0;
   out_3408748072006619981[61] = 0;
   out_3408748072006619981[62] = 0;
   out_3408748072006619981[63] = 0;
   out_3408748072006619981[64] = 0;
   out_3408748072006619981[65] = 0;
   out_3408748072006619981[66] = -0.5*state[4];
   out_3408748072006619981[67] = -0.5*state[5];
   out_3408748072006619981[68] = -0.5*state[6];
   out_3408748072006619981[69] = 0;
   out_3408748072006619981[70] = 0;
   out_3408748072006619981[71] = 0;
   out_3408748072006619981[72] = 0;
   out_3408748072006619981[73] = 0;
   out_3408748072006619981[74] = 0;
   out_3408748072006619981[75] = 0;
   out_3408748072006619981[76] = 0;
   out_3408748072006619981[77] = 0;
   out_3408748072006619981[78] = 0;
   out_3408748072006619981[79] = 0;
   out_3408748072006619981[80] = 0;
   out_3408748072006619981[81] = 0;
   out_3408748072006619981[82] = 0;
   out_3408748072006619981[83] = 0;
   out_3408748072006619981[84] = 0;
   out_3408748072006619981[85] = 0;
   out_3408748072006619981[86] = 0;
   out_3408748072006619981[87] = 0.5*state[3];
   out_3408748072006619981[88] = 0.5*state[6];
   out_3408748072006619981[89] = -0.5*state[5];
   out_3408748072006619981[90] = 0;
   out_3408748072006619981[91] = 0;
   out_3408748072006619981[92] = 0;
   out_3408748072006619981[93] = 0;
   out_3408748072006619981[94] = 0;
   out_3408748072006619981[95] = 0;
   out_3408748072006619981[96] = 0;
   out_3408748072006619981[97] = 0;
   out_3408748072006619981[98] = 0;
   out_3408748072006619981[99] = 0;
   out_3408748072006619981[100] = 0;
   out_3408748072006619981[101] = 0;
   out_3408748072006619981[102] = 0;
   out_3408748072006619981[103] = 0;
   out_3408748072006619981[104] = 0;
   out_3408748072006619981[105] = 0;
   out_3408748072006619981[106] = 0;
   out_3408748072006619981[107] = 0;
   out_3408748072006619981[108] = -0.5*state[6];
   out_3408748072006619981[109] = 0.5*state[3];
   out_3408748072006619981[110] = 0.5*state[4];
   out_3408748072006619981[111] = 0;
   out_3408748072006619981[112] = 0;
   out_3408748072006619981[113] = 0;
   out_3408748072006619981[114] = 0;
   out_3408748072006619981[115] = 0;
   out_3408748072006619981[116] = 0;
   out_3408748072006619981[117] = 0;
   out_3408748072006619981[118] = 0;
   out_3408748072006619981[119] = 0;
   out_3408748072006619981[120] = 0;
   out_3408748072006619981[121] = 0;
   out_3408748072006619981[122] = 0;
   out_3408748072006619981[123] = 0;
   out_3408748072006619981[124] = 0;
   out_3408748072006619981[125] = 0;
   out_3408748072006619981[126] = 0;
   out_3408748072006619981[127] = 0;
   out_3408748072006619981[128] = 0;
   out_3408748072006619981[129] = 0.5*state[5];
   out_3408748072006619981[130] = -0.5*state[4];
   out_3408748072006619981[131] = 0.5*state[3];
   out_3408748072006619981[132] = 0;
   out_3408748072006619981[133] = 0;
   out_3408748072006619981[134] = 0;
   out_3408748072006619981[135] = 0;
   out_3408748072006619981[136] = 0;
   out_3408748072006619981[137] = 0;
   out_3408748072006619981[138] = 0;
   out_3408748072006619981[139] = 0;
   out_3408748072006619981[140] = 0;
   out_3408748072006619981[141] = 0;
   out_3408748072006619981[142] = 0;
   out_3408748072006619981[143] = 0;
   out_3408748072006619981[144] = 0;
   out_3408748072006619981[145] = 0;
   out_3408748072006619981[146] = 0;
   out_3408748072006619981[147] = 0;
   out_3408748072006619981[148] = 0;
   out_3408748072006619981[149] = 0;
   out_3408748072006619981[150] = 0;
   out_3408748072006619981[151] = 0;
   out_3408748072006619981[152] = 0;
   out_3408748072006619981[153] = 1.0;
   out_3408748072006619981[154] = 0;
   out_3408748072006619981[155] = 0;
   out_3408748072006619981[156] = 0;
   out_3408748072006619981[157] = 0;
   out_3408748072006619981[158] = 0;
   out_3408748072006619981[159] = 0;
   out_3408748072006619981[160] = 0;
   out_3408748072006619981[161] = 0;
   out_3408748072006619981[162] = 0;
   out_3408748072006619981[163] = 0;
   out_3408748072006619981[164] = 0;
   out_3408748072006619981[165] = 0;
   out_3408748072006619981[166] = 0;
   out_3408748072006619981[167] = 0;
   out_3408748072006619981[168] = 0;
   out_3408748072006619981[169] = 0;
   out_3408748072006619981[170] = 0;
   out_3408748072006619981[171] = 0;
   out_3408748072006619981[172] = 0;
   out_3408748072006619981[173] = 0;
   out_3408748072006619981[174] = 0;
   out_3408748072006619981[175] = 1.0;
   out_3408748072006619981[176] = 0;
   out_3408748072006619981[177] = 0;
   out_3408748072006619981[178] = 0;
   out_3408748072006619981[179] = 0;
   out_3408748072006619981[180] = 0;
   out_3408748072006619981[181] = 0;
   out_3408748072006619981[182] = 0;
   out_3408748072006619981[183] = 0;
   out_3408748072006619981[184] = 0;
   out_3408748072006619981[185] = 0;
   out_3408748072006619981[186] = 0;
   out_3408748072006619981[187] = 0;
   out_3408748072006619981[188] = 0;
   out_3408748072006619981[189] = 0;
   out_3408748072006619981[190] = 0;
   out_3408748072006619981[191] = 0;
   out_3408748072006619981[192] = 0;
   out_3408748072006619981[193] = 0;
   out_3408748072006619981[194] = 0;
   out_3408748072006619981[195] = 0;
   out_3408748072006619981[196] = 0;
   out_3408748072006619981[197] = 1.0;
   out_3408748072006619981[198] = 0;
   out_3408748072006619981[199] = 0;
   out_3408748072006619981[200] = 0;
   out_3408748072006619981[201] = 0;
   out_3408748072006619981[202] = 0;
   out_3408748072006619981[203] = 0;
   out_3408748072006619981[204] = 0;
   out_3408748072006619981[205] = 0;
   out_3408748072006619981[206] = 0;
   out_3408748072006619981[207] = 0;
   out_3408748072006619981[208] = 0;
   out_3408748072006619981[209] = 0;
   out_3408748072006619981[210] = 0;
   out_3408748072006619981[211] = 0;
   out_3408748072006619981[212] = 0;
   out_3408748072006619981[213] = 0;
   out_3408748072006619981[214] = 0;
   out_3408748072006619981[215] = 0;
   out_3408748072006619981[216] = 0;
   out_3408748072006619981[217] = 0;
   out_3408748072006619981[218] = 0;
   out_3408748072006619981[219] = 1.0;
   out_3408748072006619981[220] = 0;
   out_3408748072006619981[221] = 0;
   out_3408748072006619981[222] = 0;
   out_3408748072006619981[223] = 0;
   out_3408748072006619981[224] = 0;
   out_3408748072006619981[225] = 0;
   out_3408748072006619981[226] = 0;
   out_3408748072006619981[227] = 0;
   out_3408748072006619981[228] = 0;
   out_3408748072006619981[229] = 0;
   out_3408748072006619981[230] = 0;
   out_3408748072006619981[231] = 0;
   out_3408748072006619981[232] = 0;
   out_3408748072006619981[233] = 0;
   out_3408748072006619981[234] = 0;
   out_3408748072006619981[235] = 0;
   out_3408748072006619981[236] = 0;
   out_3408748072006619981[237] = 0;
   out_3408748072006619981[238] = 0;
   out_3408748072006619981[239] = 0;
   out_3408748072006619981[240] = 0;
   out_3408748072006619981[241] = 1.0;
   out_3408748072006619981[242] = 0;
   out_3408748072006619981[243] = 0;
   out_3408748072006619981[244] = 0;
   out_3408748072006619981[245] = 0;
   out_3408748072006619981[246] = 0;
   out_3408748072006619981[247] = 0;
   out_3408748072006619981[248] = 0;
   out_3408748072006619981[249] = 0;
   out_3408748072006619981[250] = 0;
   out_3408748072006619981[251] = 0;
   out_3408748072006619981[252] = 0;
   out_3408748072006619981[253] = 0;
   out_3408748072006619981[254] = 0;
   out_3408748072006619981[255] = 0;
   out_3408748072006619981[256] = 0;
   out_3408748072006619981[257] = 0;
   out_3408748072006619981[258] = 0;
   out_3408748072006619981[259] = 0;
   out_3408748072006619981[260] = 0;
   out_3408748072006619981[261] = 0;
   out_3408748072006619981[262] = 0;
   out_3408748072006619981[263] = 1.0;
   out_3408748072006619981[264] = 0;
   out_3408748072006619981[265] = 0;
   out_3408748072006619981[266] = 0;
   out_3408748072006619981[267] = 0;
   out_3408748072006619981[268] = 0;
   out_3408748072006619981[269] = 0;
   out_3408748072006619981[270] = 0;
   out_3408748072006619981[271] = 0;
   out_3408748072006619981[272] = 0;
   out_3408748072006619981[273] = 0;
   out_3408748072006619981[274] = 0;
   out_3408748072006619981[275] = 0;
   out_3408748072006619981[276] = 0;
   out_3408748072006619981[277] = 0;
   out_3408748072006619981[278] = 0;
   out_3408748072006619981[279] = 0;
   out_3408748072006619981[280] = 0;
   out_3408748072006619981[281] = 0;
   out_3408748072006619981[282] = 0;
   out_3408748072006619981[283] = 0;
   out_3408748072006619981[284] = 0;
   out_3408748072006619981[285] = 1.0;
   out_3408748072006619981[286] = 0;
   out_3408748072006619981[287] = 0;
   out_3408748072006619981[288] = 0;
   out_3408748072006619981[289] = 0;
   out_3408748072006619981[290] = 0;
   out_3408748072006619981[291] = 0;
   out_3408748072006619981[292] = 0;
   out_3408748072006619981[293] = 0;
   out_3408748072006619981[294] = 0;
   out_3408748072006619981[295] = 0;
   out_3408748072006619981[296] = 0;
   out_3408748072006619981[297] = 0;
   out_3408748072006619981[298] = 0;
   out_3408748072006619981[299] = 0;
   out_3408748072006619981[300] = 0;
   out_3408748072006619981[301] = 0;
   out_3408748072006619981[302] = 0;
   out_3408748072006619981[303] = 0;
   out_3408748072006619981[304] = 0;
   out_3408748072006619981[305] = 0;
   out_3408748072006619981[306] = 0;
   out_3408748072006619981[307] = 1.0;
   out_3408748072006619981[308] = 0;
   out_3408748072006619981[309] = 0;
   out_3408748072006619981[310] = 0;
   out_3408748072006619981[311] = 0;
   out_3408748072006619981[312] = 0;
   out_3408748072006619981[313] = 0;
   out_3408748072006619981[314] = 0;
   out_3408748072006619981[315] = 0;
   out_3408748072006619981[316] = 0;
   out_3408748072006619981[317] = 0;
   out_3408748072006619981[318] = 0;
   out_3408748072006619981[319] = 0;
   out_3408748072006619981[320] = 0;
   out_3408748072006619981[321] = 0;
   out_3408748072006619981[322] = 0;
   out_3408748072006619981[323] = 0;
   out_3408748072006619981[324] = 0;
   out_3408748072006619981[325] = 0;
   out_3408748072006619981[326] = 0;
   out_3408748072006619981[327] = 0;
   out_3408748072006619981[328] = 0;
   out_3408748072006619981[329] = 1.0;
   out_3408748072006619981[330] = 0;
   out_3408748072006619981[331] = 0;
   out_3408748072006619981[332] = 0;
   out_3408748072006619981[333] = 0;
   out_3408748072006619981[334] = 0;
   out_3408748072006619981[335] = 0;
   out_3408748072006619981[336] = 0;
   out_3408748072006619981[337] = 0;
   out_3408748072006619981[338] = 0;
   out_3408748072006619981[339] = 0;
   out_3408748072006619981[340] = 0;
   out_3408748072006619981[341] = 0;
   out_3408748072006619981[342] = 0;
   out_3408748072006619981[343] = 0;
   out_3408748072006619981[344] = 0;
   out_3408748072006619981[345] = 0;
   out_3408748072006619981[346] = 0;
   out_3408748072006619981[347] = 0;
   out_3408748072006619981[348] = 0;
   out_3408748072006619981[349] = 0;
   out_3408748072006619981[350] = 0;
   out_3408748072006619981[351] = 1.0;
   out_3408748072006619981[352] = 0;
   out_3408748072006619981[353] = 0;
   out_3408748072006619981[354] = 0;
   out_3408748072006619981[355] = 0;
   out_3408748072006619981[356] = 0;
   out_3408748072006619981[357] = 0;
   out_3408748072006619981[358] = 0;
   out_3408748072006619981[359] = 0;
   out_3408748072006619981[360] = 0;
   out_3408748072006619981[361] = 0;
   out_3408748072006619981[362] = 0;
   out_3408748072006619981[363] = 0;
   out_3408748072006619981[364] = 0;
   out_3408748072006619981[365] = 0;
   out_3408748072006619981[366] = 0;
   out_3408748072006619981[367] = 0;
   out_3408748072006619981[368] = 0;
   out_3408748072006619981[369] = 0;
   out_3408748072006619981[370] = 0;
   out_3408748072006619981[371] = 0;
   out_3408748072006619981[372] = 0;
   out_3408748072006619981[373] = 1.0;
   out_3408748072006619981[374] = 0;
   out_3408748072006619981[375] = 0;
   out_3408748072006619981[376] = 0;
   out_3408748072006619981[377] = 0;
   out_3408748072006619981[378] = 0;
   out_3408748072006619981[379] = 0;
   out_3408748072006619981[380] = 0;
   out_3408748072006619981[381] = 0;
   out_3408748072006619981[382] = 0;
   out_3408748072006619981[383] = 0;
   out_3408748072006619981[384] = 0;
   out_3408748072006619981[385] = 0;
   out_3408748072006619981[386] = 0;
   out_3408748072006619981[387] = 0;
   out_3408748072006619981[388] = 0;
   out_3408748072006619981[389] = 0;
   out_3408748072006619981[390] = 0;
   out_3408748072006619981[391] = 0;
   out_3408748072006619981[392] = 0;
   out_3408748072006619981[393] = 0;
   out_3408748072006619981[394] = 0;
   out_3408748072006619981[395] = 1.0;
   out_3408748072006619981[396] = 0;
   out_3408748072006619981[397] = 0;
   out_3408748072006619981[398] = 0;
   out_3408748072006619981[399] = 0;
   out_3408748072006619981[400] = 0;
   out_3408748072006619981[401] = 0;
   out_3408748072006619981[402] = 0;
   out_3408748072006619981[403] = 0;
   out_3408748072006619981[404] = 0;
   out_3408748072006619981[405] = 0;
   out_3408748072006619981[406] = 0;
   out_3408748072006619981[407] = 0;
   out_3408748072006619981[408] = 0;
   out_3408748072006619981[409] = 0;
   out_3408748072006619981[410] = 0;
   out_3408748072006619981[411] = 0;
   out_3408748072006619981[412] = 0;
   out_3408748072006619981[413] = 0;
   out_3408748072006619981[414] = 0;
   out_3408748072006619981[415] = 0;
   out_3408748072006619981[416] = 0;
   out_3408748072006619981[417] = 1.0;
   out_3408748072006619981[418] = 0;
   out_3408748072006619981[419] = 0;
   out_3408748072006619981[420] = 0;
   out_3408748072006619981[421] = 0;
   out_3408748072006619981[422] = 0;
   out_3408748072006619981[423] = 0;
   out_3408748072006619981[424] = 0;
   out_3408748072006619981[425] = 0;
   out_3408748072006619981[426] = 0;
   out_3408748072006619981[427] = 0;
   out_3408748072006619981[428] = 0;
   out_3408748072006619981[429] = 0;
   out_3408748072006619981[430] = 0;
   out_3408748072006619981[431] = 0;
   out_3408748072006619981[432] = 0;
   out_3408748072006619981[433] = 0;
   out_3408748072006619981[434] = 0;
   out_3408748072006619981[435] = 0;
   out_3408748072006619981[436] = 0;
   out_3408748072006619981[437] = 0;
   out_3408748072006619981[438] = 0;
   out_3408748072006619981[439] = 1.0;
   out_3408748072006619981[440] = 0;
   out_3408748072006619981[441] = 0;
   out_3408748072006619981[442] = 0;
   out_3408748072006619981[443] = 0;
   out_3408748072006619981[444] = 0;
   out_3408748072006619981[445] = 0;
   out_3408748072006619981[446] = 0;
   out_3408748072006619981[447] = 0;
   out_3408748072006619981[448] = 0;
   out_3408748072006619981[449] = 0;
   out_3408748072006619981[450] = 0;
   out_3408748072006619981[451] = 0;
   out_3408748072006619981[452] = 0;
   out_3408748072006619981[453] = 0;
   out_3408748072006619981[454] = 0;
   out_3408748072006619981[455] = 0;
   out_3408748072006619981[456] = 0;
   out_3408748072006619981[457] = 0;
   out_3408748072006619981[458] = 0;
   out_3408748072006619981[459] = 0;
   out_3408748072006619981[460] = 0;
   out_3408748072006619981[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3128910193456553890) {
   out_3128910193456553890[0] = dt*state[7] + state[0];
   out_3128910193456553890[1] = dt*state[8] + state[1];
   out_3128910193456553890[2] = dt*state[9] + state[2];
   out_3128910193456553890[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3128910193456553890[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3128910193456553890[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3128910193456553890[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3128910193456553890[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3128910193456553890[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3128910193456553890[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3128910193456553890[10] = state[10];
   out_3128910193456553890[11] = state[11];
   out_3128910193456553890[12] = state[12];
   out_3128910193456553890[13] = state[13];
   out_3128910193456553890[14] = state[14];
   out_3128910193456553890[15] = state[15];
   out_3128910193456553890[16] = state[16];
   out_3128910193456553890[17] = state[17];
   out_3128910193456553890[18] = state[18];
   out_3128910193456553890[19] = state[19];
   out_3128910193456553890[20] = state[20];
   out_3128910193456553890[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8640737457769697043) {
   out_8640737457769697043[0] = 1;
   out_8640737457769697043[1] = 0;
   out_8640737457769697043[2] = 0;
   out_8640737457769697043[3] = 0;
   out_8640737457769697043[4] = 0;
   out_8640737457769697043[5] = 0;
   out_8640737457769697043[6] = dt;
   out_8640737457769697043[7] = 0;
   out_8640737457769697043[8] = 0;
   out_8640737457769697043[9] = 0;
   out_8640737457769697043[10] = 0;
   out_8640737457769697043[11] = 0;
   out_8640737457769697043[12] = 0;
   out_8640737457769697043[13] = 0;
   out_8640737457769697043[14] = 0;
   out_8640737457769697043[15] = 0;
   out_8640737457769697043[16] = 0;
   out_8640737457769697043[17] = 0;
   out_8640737457769697043[18] = 0;
   out_8640737457769697043[19] = 0;
   out_8640737457769697043[20] = 0;
   out_8640737457769697043[21] = 0;
   out_8640737457769697043[22] = 1;
   out_8640737457769697043[23] = 0;
   out_8640737457769697043[24] = 0;
   out_8640737457769697043[25] = 0;
   out_8640737457769697043[26] = 0;
   out_8640737457769697043[27] = 0;
   out_8640737457769697043[28] = dt;
   out_8640737457769697043[29] = 0;
   out_8640737457769697043[30] = 0;
   out_8640737457769697043[31] = 0;
   out_8640737457769697043[32] = 0;
   out_8640737457769697043[33] = 0;
   out_8640737457769697043[34] = 0;
   out_8640737457769697043[35] = 0;
   out_8640737457769697043[36] = 0;
   out_8640737457769697043[37] = 0;
   out_8640737457769697043[38] = 0;
   out_8640737457769697043[39] = 0;
   out_8640737457769697043[40] = 0;
   out_8640737457769697043[41] = 0;
   out_8640737457769697043[42] = 0;
   out_8640737457769697043[43] = 0;
   out_8640737457769697043[44] = 1;
   out_8640737457769697043[45] = 0;
   out_8640737457769697043[46] = 0;
   out_8640737457769697043[47] = 0;
   out_8640737457769697043[48] = 0;
   out_8640737457769697043[49] = 0;
   out_8640737457769697043[50] = dt;
   out_8640737457769697043[51] = 0;
   out_8640737457769697043[52] = 0;
   out_8640737457769697043[53] = 0;
   out_8640737457769697043[54] = 0;
   out_8640737457769697043[55] = 0;
   out_8640737457769697043[56] = 0;
   out_8640737457769697043[57] = 0;
   out_8640737457769697043[58] = 0;
   out_8640737457769697043[59] = 0;
   out_8640737457769697043[60] = 0;
   out_8640737457769697043[61] = 0;
   out_8640737457769697043[62] = 0;
   out_8640737457769697043[63] = 0;
   out_8640737457769697043[64] = 0;
   out_8640737457769697043[65] = 0;
   out_8640737457769697043[66] = 1;
   out_8640737457769697043[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8640737457769697043[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8640737457769697043[69] = 0;
   out_8640737457769697043[70] = 0;
   out_8640737457769697043[71] = 0;
   out_8640737457769697043[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8640737457769697043[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8640737457769697043[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8640737457769697043[75] = 0;
   out_8640737457769697043[76] = 0;
   out_8640737457769697043[77] = 0;
   out_8640737457769697043[78] = 0;
   out_8640737457769697043[79] = 0;
   out_8640737457769697043[80] = 0;
   out_8640737457769697043[81] = 0;
   out_8640737457769697043[82] = 0;
   out_8640737457769697043[83] = 0;
   out_8640737457769697043[84] = 0;
   out_8640737457769697043[85] = 0;
   out_8640737457769697043[86] = 0;
   out_8640737457769697043[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8640737457769697043[88] = 1;
   out_8640737457769697043[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8640737457769697043[90] = 0;
   out_8640737457769697043[91] = 0;
   out_8640737457769697043[92] = 0;
   out_8640737457769697043[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8640737457769697043[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8640737457769697043[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8640737457769697043[96] = 0;
   out_8640737457769697043[97] = 0;
   out_8640737457769697043[98] = 0;
   out_8640737457769697043[99] = 0;
   out_8640737457769697043[100] = 0;
   out_8640737457769697043[101] = 0;
   out_8640737457769697043[102] = 0;
   out_8640737457769697043[103] = 0;
   out_8640737457769697043[104] = 0;
   out_8640737457769697043[105] = 0;
   out_8640737457769697043[106] = 0;
   out_8640737457769697043[107] = 0;
   out_8640737457769697043[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8640737457769697043[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8640737457769697043[110] = 1;
   out_8640737457769697043[111] = 0;
   out_8640737457769697043[112] = 0;
   out_8640737457769697043[113] = 0;
   out_8640737457769697043[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8640737457769697043[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8640737457769697043[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8640737457769697043[117] = 0;
   out_8640737457769697043[118] = 0;
   out_8640737457769697043[119] = 0;
   out_8640737457769697043[120] = 0;
   out_8640737457769697043[121] = 0;
   out_8640737457769697043[122] = 0;
   out_8640737457769697043[123] = 0;
   out_8640737457769697043[124] = 0;
   out_8640737457769697043[125] = 0;
   out_8640737457769697043[126] = 0;
   out_8640737457769697043[127] = 0;
   out_8640737457769697043[128] = 0;
   out_8640737457769697043[129] = 0;
   out_8640737457769697043[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8640737457769697043[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8640737457769697043[132] = 1;
   out_8640737457769697043[133] = 0;
   out_8640737457769697043[134] = 0;
   out_8640737457769697043[135] = 0;
   out_8640737457769697043[136] = 0;
   out_8640737457769697043[137] = 0;
   out_8640737457769697043[138] = 0;
   out_8640737457769697043[139] = 0;
   out_8640737457769697043[140] = 0;
   out_8640737457769697043[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8640737457769697043[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8640737457769697043[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8640737457769697043[144] = 0;
   out_8640737457769697043[145] = 0;
   out_8640737457769697043[146] = 0;
   out_8640737457769697043[147] = 0;
   out_8640737457769697043[148] = 0;
   out_8640737457769697043[149] = 0;
   out_8640737457769697043[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8640737457769697043[151] = 0;
   out_8640737457769697043[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8640737457769697043[153] = 0;
   out_8640737457769697043[154] = 1;
   out_8640737457769697043[155] = 0;
   out_8640737457769697043[156] = 0;
   out_8640737457769697043[157] = 0;
   out_8640737457769697043[158] = 0;
   out_8640737457769697043[159] = 0;
   out_8640737457769697043[160] = 0;
   out_8640737457769697043[161] = 0;
   out_8640737457769697043[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8640737457769697043[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8640737457769697043[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8640737457769697043[165] = 0;
   out_8640737457769697043[166] = 0;
   out_8640737457769697043[167] = 0;
   out_8640737457769697043[168] = 0;
   out_8640737457769697043[169] = 0;
   out_8640737457769697043[170] = 0;
   out_8640737457769697043[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8640737457769697043[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8640737457769697043[173] = 0;
   out_8640737457769697043[174] = 0;
   out_8640737457769697043[175] = 0;
   out_8640737457769697043[176] = 1;
   out_8640737457769697043[177] = 0;
   out_8640737457769697043[178] = 0;
   out_8640737457769697043[179] = 0;
   out_8640737457769697043[180] = 0;
   out_8640737457769697043[181] = 0;
   out_8640737457769697043[182] = 0;
   out_8640737457769697043[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8640737457769697043[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8640737457769697043[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8640737457769697043[186] = 0;
   out_8640737457769697043[187] = 0;
   out_8640737457769697043[188] = 0;
   out_8640737457769697043[189] = 0;
   out_8640737457769697043[190] = 0;
   out_8640737457769697043[191] = 0;
   out_8640737457769697043[192] = 0;
   out_8640737457769697043[193] = 0;
   out_8640737457769697043[194] = 0;
   out_8640737457769697043[195] = 0;
   out_8640737457769697043[196] = 0;
   out_8640737457769697043[197] = 0;
   out_8640737457769697043[198] = 1;
   out_8640737457769697043[199] = 0;
   out_8640737457769697043[200] = 0;
   out_8640737457769697043[201] = 0;
   out_8640737457769697043[202] = 0;
   out_8640737457769697043[203] = 0;
   out_8640737457769697043[204] = 0;
   out_8640737457769697043[205] = 0;
   out_8640737457769697043[206] = 0;
   out_8640737457769697043[207] = 0;
   out_8640737457769697043[208] = 0;
   out_8640737457769697043[209] = 0;
   out_8640737457769697043[210] = 0;
   out_8640737457769697043[211] = 0;
   out_8640737457769697043[212] = 0;
   out_8640737457769697043[213] = 0;
   out_8640737457769697043[214] = 0;
   out_8640737457769697043[215] = 0;
   out_8640737457769697043[216] = 0;
   out_8640737457769697043[217] = 0;
   out_8640737457769697043[218] = 0;
   out_8640737457769697043[219] = 0;
   out_8640737457769697043[220] = 1;
   out_8640737457769697043[221] = 0;
   out_8640737457769697043[222] = 0;
   out_8640737457769697043[223] = 0;
   out_8640737457769697043[224] = 0;
   out_8640737457769697043[225] = 0;
   out_8640737457769697043[226] = 0;
   out_8640737457769697043[227] = 0;
   out_8640737457769697043[228] = 0;
   out_8640737457769697043[229] = 0;
   out_8640737457769697043[230] = 0;
   out_8640737457769697043[231] = 0;
   out_8640737457769697043[232] = 0;
   out_8640737457769697043[233] = 0;
   out_8640737457769697043[234] = 0;
   out_8640737457769697043[235] = 0;
   out_8640737457769697043[236] = 0;
   out_8640737457769697043[237] = 0;
   out_8640737457769697043[238] = 0;
   out_8640737457769697043[239] = 0;
   out_8640737457769697043[240] = 0;
   out_8640737457769697043[241] = 0;
   out_8640737457769697043[242] = 1;
   out_8640737457769697043[243] = 0;
   out_8640737457769697043[244] = 0;
   out_8640737457769697043[245] = 0;
   out_8640737457769697043[246] = 0;
   out_8640737457769697043[247] = 0;
   out_8640737457769697043[248] = 0;
   out_8640737457769697043[249] = 0;
   out_8640737457769697043[250] = 0;
   out_8640737457769697043[251] = 0;
   out_8640737457769697043[252] = 0;
   out_8640737457769697043[253] = 0;
   out_8640737457769697043[254] = 0;
   out_8640737457769697043[255] = 0;
   out_8640737457769697043[256] = 0;
   out_8640737457769697043[257] = 0;
   out_8640737457769697043[258] = 0;
   out_8640737457769697043[259] = 0;
   out_8640737457769697043[260] = 0;
   out_8640737457769697043[261] = 0;
   out_8640737457769697043[262] = 0;
   out_8640737457769697043[263] = 0;
   out_8640737457769697043[264] = 1;
   out_8640737457769697043[265] = 0;
   out_8640737457769697043[266] = 0;
   out_8640737457769697043[267] = 0;
   out_8640737457769697043[268] = 0;
   out_8640737457769697043[269] = 0;
   out_8640737457769697043[270] = 0;
   out_8640737457769697043[271] = 0;
   out_8640737457769697043[272] = 0;
   out_8640737457769697043[273] = 0;
   out_8640737457769697043[274] = 0;
   out_8640737457769697043[275] = 0;
   out_8640737457769697043[276] = 0;
   out_8640737457769697043[277] = 0;
   out_8640737457769697043[278] = 0;
   out_8640737457769697043[279] = 0;
   out_8640737457769697043[280] = 0;
   out_8640737457769697043[281] = 0;
   out_8640737457769697043[282] = 0;
   out_8640737457769697043[283] = 0;
   out_8640737457769697043[284] = 0;
   out_8640737457769697043[285] = 0;
   out_8640737457769697043[286] = 1;
   out_8640737457769697043[287] = 0;
   out_8640737457769697043[288] = 0;
   out_8640737457769697043[289] = 0;
   out_8640737457769697043[290] = 0;
   out_8640737457769697043[291] = 0;
   out_8640737457769697043[292] = 0;
   out_8640737457769697043[293] = 0;
   out_8640737457769697043[294] = 0;
   out_8640737457769697043[295] = 0;
   out_8640737457769697043[296] = 0;
   out_8640737457769697043[297] = 0;
   out_8640737457769697043[298] = 0;
   out_8640737457769697043[299] = 0;
   out_8640737457769697043[300] = 0;
   out_8640737457769697043[301] = 0;
   out_8640737457769697043[302] = 0;
   out_8640737457769697043[303] = 0;
   out_8640737457769697043[304] = 0;
   out_8640737457769697043[305] = 0;
   out_8640737457769697043[306] = 0;
   out_8640737457769697043[307] = 0;
   out_8640737457769697043[308] = 1;
   out_8640737457769697043[309] = 0;
   out_8640737457769697043[310] = 0;
   out_8640737457769697043[311] = 0;
   out_8640737457769697043[312] = 0;
   out_8640737457769697043[313] = 0;
   out_8640737457769697043[314] = 0;
   out_8640737457769697043[315] = 0;
   out_8640737457769697043[316] = 0;
   out_8640737457769697043[317] = 0;
   out_8640737457769697043[318] = 0;
   out_8640737457769697043[319] = 0;
   out_8640737457769697043[320] = 0;
   out_8640737457769697043[321] = 0;
   out_8640737457769697043[322] = 0;
   out_8640737457769697043[323] = 0;
   out_8640737457769697043[324] = 0;
   out_8640737457769697043[325] = 0;
   out_8640737457769697043[326] = 0;
   out_8640737457769697043[327] = 0;
   out_8640737457769697043[328] = 0;
   out_8640737457769697043[329] = 0;
   out_8640737457769697043[330] = 1;
   out_8640737457769697043[331] = 0;
   out_8640737457769697043[332] = 0;
   out_8640737457769697043[333] = 0;
   out_8640737457769697043[334] = 0;
   out_8640737457769697043[335] = 0;
   out_8640737457769697043[336] = 0;
   out_8640737457769697043[337] = 0;
   out_8640737457769697043[338] = 0;
   out_8640737457769697043[339] = 0;
   out_8640737457769697043[340] = 0;
   out_8640737457769697043[341] = 0;
   out_8640737457769697043[342] = 0;
   out_8640737457769697043[343] = 0;
   out_8640737457769697043[344] = 0;
   out_8640737457769697043[345] = 0;
   out_8640737457769697043[346] = 0;
   out_8640737457769697043[347] = 0;
   out_8640737457769697043[348] = 0;
   out_8640737457769697043[349] = 0;
   out_8640737457769697043[350] = 0;
   out_8640737457769697043[351] = 0;
   out_8640737457769697043[352] = 1;
   out_8640737457769697043[353] = 0;
   out_8640737457769697043[354] = 0;
   out_8640737457769697043[355] = 0;
   out_8640737457769697043[356] = 0;
   out_8640737457769697043[357] = 0;
   out_8640737457769697043[358] = 0;
   out_8640737457769697043[359] = 0;
   out_8640737457769697043[360] = 0;
   out_8640737457769697043[361] = 0;
   out_8640737457769697043[362] = 0;
   out_8640737457769697043[363] = 0;
   out_8640737457769697043[364] = 0;
   out_8640737457769697043[365] = 0;
   out_8640737457769697043[366] = 0;
   out_8640737457769697043[367] = 0;
   out_8640737457769697043[368] = 0;
   out_8640737457769697043[369] = 0;
   out_8640737457769697043[370] = 0;
   out_8640737457769697043[371] = 0;
   out_8640737457769697043[372] = 0;
   out_8640737457769697043[373] = 0;
   out_8640737457769697043[374] = 1;
   out_8640737457769697043[375] = 0;
   out_8640737457769697043[376] = 0;
   out_8640737457769697043[377] = 0;
   out_8640737457769697043[378] = 0;
   out_8640737457769697043[379] = 0;
   out_8640737457769697043[380] = 0;
   out_8640737457769697043[381] = 0;
   out_8640737457769697043[382] = 0;
   out_8640737457769697043[383] = 0;
   out_8640737457769697043[384] = 0;
   out_8640737457769697043[385] = 0;
   out_8640737457769697043[386] = 0;
   out_8640737457769697043[387] = 0;
   out_8640737457769697043[388] = 0;
   out_8640737457769697043[389] = 0;
   out_8640737457769697043[390] = 0;
   out_8640737457769697043[391] = 0;
   out_8640737457769697043[392] = 0;
   out_8640737457769697043[393] = 0;
   out_8640737457769697043[394] = 0;
   out_8640737457769697043[395] = 0;
   out_8640737457769697043[396] = 1;
   out_8640737457769697043[397] = 0;
   out_8640737457769697043[398] = 0;
   out_8640737457769697043[399] = 0;
   out_8640737457769697043[400] = 0;
   out_8640737457769697043[401] = 0;
   out_8640737457769697043[402] = 0;
   out_8640737457769697043[403] = 0;
   out_8640737457769697043[404] = 0;
   out_8640737457769697043[405] = 0;
   out_8640737457769697043[406] = 0;
   out_8640737457769697043[407] = 0;
   out_8640737457769697043[408] = 0;
   out_8640737457769697043[409] = 0;
   out_8640737457769697043[410] = 0;
   out_8640737457769697043[411] = 0;
   out_8640737457769697043[412] = 0;
   out_8640737457769697043[413] = 0;
   out_8640737457769697043[414] = 0;
   out_8640737457769697043[415] = 0;
   out_8640737457769697043[416] = 0;
   out_8640737457769697043[417] = 0;
   out_8640737457769697043[418] = 1;
   out_8640737457769697043[419] = 0;
   out_8640737457769697043[420] = 0;
   out_8640737457769697043[421] = 0;
   out_8640737457769697043[422] = 0;
   out_8640737457769697043[423] = 0;
   out_8640737457769697043[424] = 0;
   out_8640737457769697043[425] = 0;
   out_8640737457769697043[426] = 0;
   out_8640737457769697043[427] = 0;
   out_8640737457769697043[428] = 0;
   out_8640737457769697043[429] = 0;
   out_8640737457769697043[430] = 0;
   out_8640737457769697043[431] = 0;
   out_8640737457769697043[432] = 0;
   out_8640737457769697043[433] = 0;
   out_8640737457769697043[434] = 0;
   out_8640737457769697043[435] = 0;
   out_8640737457769697043[436] = 0;
   out_8640737457769697043[437] = 0;
   out_8640737457769697043[438] = 0;
   out_8640737457769697043[439] = 0;
   out_8640737457769697043[440] = 1;
}
void h_4(double *state, double *unused, double *out_1029957331960551422) {
   out_1029957331960551422[0] = state[10] + state[13];
   out_1029957331960551422[1] = state[11] + state[14];
   out_1029957331960551422[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7668422609226997312) {
   out_7668422609226997312[0] = 0;
   out_7668422609226997312[1] = 0;
   out_7668422609226997312[2] = 0;
   out_7668422609226997312[3] = 0;
   out_7668422609226997312[4] = 0;
   out_7668422609226997312[5] = 0;
   out_7668422609226997312[6] = 0;
   out_7668422609226997312[7] = 0;
   out_7668422609226997312[8] = 0;
   out_7668422609226997312[9] = 0;
   out_7668422609226997312[10] = 1;
   out_7668422609226997312[11] = 0;
   out_7668422609226997312[12] = 0;
   out_7668422609226997312[13] = 1;
   out_7668422609226997312[14] = 0;
   out_7668422609226997312[15] = 0;
   out_7668422609226997312[16] = 0;
   out_7668422609226997312[17] = 0;
   out_7668422609226997312[18] = 0;
   out_7668422609226997312[19] = 0;
   out_7668422609226997312[20] = 0;
   out_7668422609226997312[21] = 0;
   out_7668422609226997312[22] = 0;
   out_7668422609226997312[23] = 0;
   out_7668422609226997312[24] = 0;
   out_7668422609226997312[25] = 0;
   out_7668422609226997312[26] = 0;
   out_7668422609226997312[27] = 0;
   out_7668422609226997312[28] = 0;
   out_7668422609226997312[29] = 0;
   out_7668422609226997312[30] = 0;
   out_7668422609226997312[31] = 0;
   out_7668422609226997312[32] = 0;
   out_7668422609226997312[33] = 1;
   out_7668422609226997312[34] = 0;
   out_7668422609226997312[35] = 0;
   out_7668422609226997312[36] = 1;
   out_7668422609226997312[37] = 0;
   out_7668422609226997312[38] = 0;
   out_7668422609226997312[39] = 0;
   out_7668422609226997312[40] = 0;
   out_7668422609226997312[41] = 0;
   out_7668422609226997312[42] = 0;
   out_7668422609226997312[43] = 0;
   out_7668422609226997312[44] = 0;
   out_7668422609226997312[45] = 0;
   out_7668422609226997312[46] = 0;
   out_7668422609226997312[47] = 0;
   out_7668422609226997312[48] = 0;
   out_7668422609226997312[49] = 0;
   out_7668422609226997312[50] = 0;
   out_7668422609226997312[51] = 0;
   out_7668422609226997312[52] = 0;
   out_7668422609226997312[53] = 0;
   out_7668422609226997312[54] = 0;
   out_7668422609226997312[55] = 0;
   out_7668422609226997312[56] = 1;
   out_7668422609226997312[57] = 0;
   out_7668422609226997312[58] = 0;
   out_7668422609226997312[59] = 1;
   out_7668422609226997312[60] = 0;
   out_7668422609226997312[61] = 0;
   out_7668422609226997312[62] = 0;
   out_7668422609226997312[63] = 0;
   out_7668422609226997312[64] = 0;
   out_7668422609226997312[65] = 0;
}
void h_9(double *state, double *unused, double *out_8439246969304359371) {
   out_8439246969304359371[0] = state[10];
   out_8439246969304359371[1] = state[11];
   out_8439246969304359371[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7889459912202474962) {
   out_7889459912202474962[0] = 0;
   out_7889459912202474962[1] = 0;
   out_7889459912202474962[2] = 0;
   out_7889459912202474962[3] = 0;
   out_7889459912202474962[4] = 0;
   out_7889459912202474962[5] = 0;
   out_7889459912202474962[6] = 0;
   out_7889459912202474962[7] = 0;
   out_7889459912202474962[8] = 0;
   out_7889459912202474962[9] = 0;
   out_7889459912202474962[10] = 1;
   out_7889459912202474962[11] = 0;
   out_7889459912202474962[12] = 0;
   out_7889459912202474962[13] = 0;
   out_7889459912202474962[14] = 0;
   out_7889459912202474962[15] = 0;
   out_7889459912202474962[16] = 0;
   out_7889459912202474962[17] = 0;
   out_7889459912202474962[18] = 0;
   out_7889459912202474962[19] = 0;
   out_7889459912202474962[20] = 0;
   out_7889459912202474962[21] = 0;
   out_7889459912202474962[22] = 0;
   out_7889459912202474962[23] = 0;
   out_7889459912202474962[24] = 0;
   out_7889459912202474962[25] = 0;
   out_7889459912202474962[26] = 0;
   out_7889459912202474962[27] = 0;
   out_7889459912202474962[28] = 0;
   out_7889459912202474962[29] = 0;
   out_7889459912202474962[30] = 0;
   out_7889459912202474962[31] = 0;
   out_7889459912202474962[32] = 0;
   out_7889459912202474962[33] = 1;
   out_7889459912202474962[34] = 0;
   out_7889459912202474962[35] = 0;
   out_7889459912202474962[36] = 0;
   out_7889459912202474962[37] = 0;
   out_7889459912202474962[38] = 0;
   out_7889459912202474962[39] = 0;
   out_7889459912202474962[40] = 0;
   out_7889459912202474962[41] = 0;
   out_7889459912202474962[42] = 0;
   out_7889459912202474962[43] = 0;
   out_7889459912202474962[44] = 0;
   out_7889459912202474962[45] = 0;
   out_7889459912202474962[46] = 0;
   out_7889459912202474962[47] = 0;
   out_7889459912202474962[48] = 0;
   out_7889459912202474962[49] = 0;
   out_7889459912202474962[50] = 0;
   out_7889459912202474962[51] = 0;
   out_7889459912202474962[52] = 0;
   out_7889459912202474962[53] = 0;
   out_7889459912202474962[54] = 0;
   out_7889459912202474962[55] = 0;
   out_7889459912202474962[56] = 1;
   out_7889459912202474962[57] = 0;
   out_7889459912202474962[58] = 0;
   out_7889459912202474962[59] = 0;
   out_7889459912202474962[60] = 0;
   out_7889459912202474962[61] = 0;
   out_7889459912202474962[62] = 0;
   out_7889459912202474962[63] = 0;
   out_7889459912202474962[64] = 0;
   out_7889459912202474962[65] = 0;
}
void h_10(double *state, double *unused, double *out_9153137073887306784) {
   out_9153137073887306784[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9153137073887306784[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9153137073887306784[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7164784566698278522) {
   out_7164784566698278522[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7164784566698278522[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7164784566698278522[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7164784566698278522[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7164784566698278522[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7164784566698278522[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7164784566698278522[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7164784566698278522[7] = 0;
   out_7164784566698278522[8] = 0;
   out_7164784566698278522[9] = 0;
   out_7164784566698278522[10] = 0;
   out_7164784566698278522[11] = 0;
   out_7164784566698278522[12] = 0;
   out_7164784566698278522[13] = 0;
   out_7164784566698278522[14] = 0;
   out_7164784566698278522[15] = 0;
   out_7164784566698278522[16] = 1;
   out_7164784566698278522[17] = 0;
   out_7164784566698278522[18] = 0;
   out_7164784566698278522[19] = 1;
   out_7164784566698278522[20] = 0;
   out_7164784566698278522[21] = 0;
   out_7164784566698278522[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7164784566698278522[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7164784566698278522[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7164784566698278522[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7164784566698278522[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7164784566698278522[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7164784566698278522[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7164784566698278522[29] = 0;
   out_7164784566698278522[30] = 0;
   out_7164784566698278522[31] = 0;
   out_7164784566698278522[32] = 0;
   out_7164784566698278522[33] = 0;
   out_7164784566698278522[34] = 0;
   out_7164784566698278522[35] = 0;
   out_7164784566698278522[36] = 0;
   out_7164784566698278522[37] = 0;
   out_7164784566698278522[38] = 0;
   out_7164784566698278522[39] = 1;
   out_7164784566698278522[40] = 0;
   out_7164784566698278522[41] = 0;
   out_7164784566698278522[42] = 1;
   out_7164784566698278522[43] = 0;
   out_7164784566698278522[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7164784566698278522[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7164784566698278522[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7164784566698278522[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7164784566698278522[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7164784566698278522[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7164784566698278522[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7164784566698278522[51] = 0;
   out_7164784566698278522[52] = 0;
   out_7164784566698278522[53] = 0;
   out_7164784566698278522[54] = 0;
   out_7164784566698278522[55] = 0;
   out_7164784566698278522[56] = 0;
   out_7164784566698278522[57] = 0;
   out_7164784566698278522[58] = 0;
   out_7164784566698278522[59] = 0;
   out_7164784566698278522[60] = 0;
   out_7164784566698278522[61] = 0;
   out_7164784566698278522[62] = 1;
   out_7164784566698278522[63] = 0;
   out_7164784566698278522[64] = 0;
   out_7164784566698278522[65] = 1;
}
void h_12(double *state, double *unused, double *out_4151712998878462505) {
   out_4151712998878462505[0] = state[0];
   out_4151712998878462505[1] = state[1];
   out_4151712998878462505[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8289521634274590979) {
   out_8289521634274590979[0] = 1;
   out_8289521634274590979[1] = 0;
   out_8289521634274590979[2] = 0;
   out_8289521634274590979[3] = 0;
   out_8289521634274590979[4] = 0;
   out_8289521634274590979[5] = 0;
   out_8289521634274590979[6] = 0;
   out_8289521634274590979[7] = 0;
   out_8289521634274590979[8] = 0;
   out_8289521634274590979[9] = 0;
   out_8289521634274590979[10] = 0;
   out_8289521634274590979[11] = 0;
   out_8289521634274590979[12] = 0;
   out_8289521634274590979[13] = 0;
   out_8289521634274590979[14] = 0;
   out_8289521634274590979[15] = 0;
   out_8289521634274590979[16] = 0;
   out_8289521634274590979[17] = 0;
   out_8289521634274590979[18] = 0;
   out_8289521634274590979[19] = 0;
   out_8289521634274590979[20] = 0;
   out_8289521634274590979[21] = 0;
   out_8289521634274590979[22] = 0;
   out_8289521634274590979[23] = 1;
   out_8289521634274590979[24] = 0;
   out_8289521634274590979[25] = 0;
   out_8289521634274590979[26] = 0;
   out_8289521634274590979[27] = 0;
   out_8289521634274590979[28] = 0;
   out_8289521634274590979[29] = 0;
   out_8289521634274590979[30] = 0;
   out_8289521634274590979[31] = 0;
   out_8289521634274590979[32] = 0;
   out_8289521634274590979[33] = 0;
   out_8289521634274590979[34] = 0;
   out_8289521634274590979[35] = 0;
   out_8289521634274590979[36] = 0;
   out_8289521634274590979[37] = 0;
   out_8289521634274590979[38] = 0;
   out_8289521634274590979[39] = 0;
   out_8289521634274590979[40] = 0;
   out_8289521634274590979[41] = 0;
   out_8289521634274590979[42] = 0;
   out_8289521634274590979[43] = 0;
   out_8289521634274590979[44] = 0;
   out_8289521634274590979[45] = 0;
   out_8289521634274590979[46] = 1;
   out_8289521634274590979[47] = 0;
   out_8289521634274590979[48] = 0;
   out_8289521634274590979[49] = 0;
   out_8289521634274590979[50] = 0;
   out_8289521634274590979[51] = 0;
   out_8289521634274590979[52] = 0;
   out_8289521634274590979[53] = 0;
   out_8289521634274590979[54] = 0;
   out_8289521634274590979[55] = 0;
   out_8289521634274590979[56] = 0;
   out_8289521634274590979[57] = 0;
   out_8289521634274590979[58] = 0;
   out_8289521634274590979[59] = 0;
   out_8289521634274590979[60] = 0;
   out_8289521634274590979[61] = 0;
   out_8289521634274590979[62] = 0;
   out_8289521634274590979[63] = 0;
   out_8289521634274590979[64] = 0;
   out_8289521634274590979[65] = 0;
}
void h_31(double *state, double *unused, double *out_2182452030772518184) {
   out_2182452030772518184[0] = state[7];
   out_2182452030772518184[1] = state[8];
   out_2182452030772518184[2] = state[9];
}
void H_31(double *state, double *unused, double *out_7411659407109946928) {
   out_7411659407109946928[0] = 0;
   out_7411659407109946928[1] = 0;
   out_7411659407109946928[2] = 0;
   out_7411659407109946928[3] = 0;
   out_7411659407109946928[4] = 0;
   out_7411659407109946928[5] = 0;
   out_7411659407109946928[6] = 0;
   out_7411659407109946928[7] = 1;
   out_7411659407109946928[8] = 0;
   out_7411659407109946928[9] = 0;
   out_7411659407109946928[10] = 0;
   out_7411659407109946928[11] = 0;
   out_7411659407109946928[12] = 0;
   out_7411659407109946928[13] = 0;
   out_7411659407109946928[14] = 0;
   out_7411659407109946928[15] = 0;
   out_7411659407109946928[16] = 0;
   out_7411659407109946928[17] = 0;
   out_7411659407109946928[18] = 0;
   out_7411659407109946928[19] = 0;
   out_7411659407109946928[20] = 0;
   out_7411659407109946928[21] = 0;
   out_7411659407109946928[22] = 0;
   out_7411659407109946928[23] = 0;
   out_7411659407109946928[24] = 0;
   out_7411659407109946928[25] = 0;
   out_7411659407109946928[26] = 0;
   out_7411659407109946928[27] = 0;
   out_7411659407109946928[28] = 0;
   out_7411659407109946928[29] = 0;
   out_7411659407109946928[30] = 1;
   out_7411659407109946928[31] = 0;
   out_7411659407109946928[32] = 0;
   out_7411659407109946928[33] = 0;
   out_7411659407109946928[34] = 0;
   out_7411659407109946928[35] = 0;
   out_7411659407109946928[36] = 0;
   out_7411659407109946928[37] = 0;
   out_7411659407109946928[38] = 0;
   out_7411659407109946928[39] = 0;
   out_7411659407109946928[40] = 0;
   out_7411659407109946928[41] = 0;
   out_7411659407109946928[42] = 0;
   out_7411659407109946928[43] = 0;
   out_7411659407109946928[44] = 0;
   out_7411659407109946928[45] = 0;
   out_7411659407109946928[46] = 0;
   out_7411659407109946928[47] = 0;
   out_7411659407109946928[48] = 0;
   out_7411659407109946928[49] = 0;
   out_7411659407109946928[50] = 0;
   out_7411659407109946928[51] = 0;
   out_7411659407109946928[52] = 0;
   out_7411659407109946928[53] = 1;
   out_7411659407109946928[54] = 0;
   out_7411659407109946928[55] = 0;
   out_7411659407109946928[56] = 0;
   out_7411659407109946928[57] = 0;
   out_7411659407109946928[58] = 0;
   out_7411659407109946928[59] = 0;
   out_7411659407109946928[60] = 0;
   out_7411659407109946928[61] = 0;
   out_7411659407109946928[62] = 0;
   out_7411659407109946928[63] = 0;
   out_7411659407109946928[64] = 0;
   out_7411659407109946928[65] = 0;
}
void h_32(double *state, double *unused, double *out_4005491774866910250) {
   out_4005491774866910250[0] = state[3];
   out_4005491774866910250[1] = state[4];
   out_4005491774866910250[2] = state[5];
   out_4005491774866910250[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8148603243751150192) {
   out_8148603243751150192[0] = 0;
   out_8148603243751150192[1] = 0;
   out_8148603243751150192[2] = 0;
   out_8148603243751150192[3] = 1;
   out_8148603243751150192[4] = 0;
   out_8148603243751150192[5] = 0;
   out_8148603243751150192[6] = 0;
   out_8148603243751150192[7] = 0;
   out_8148603243751150192[8] = 0;
   out_8148603243751150192[9] = 0;
   out_8148603243751150192[10] = 0;
   out_8148603243751150192[11] = 0;
   out_8148603243751150192[12] = 0;
   out_8148603243751150192[13] = 0;
   out_8148603243751150192[14] = 0;
   out_8148603243751150192[15] = 0;
   out_8148603243751150192[16] = 0;
   out_8148603243751150192[17] = 0;
   out_8148603243751150192[18] = 0;
   out_8148603243751150192[19] = 0;
   out_8148603243751150192[20] = 0;
   out_8148603243751150192[21] = 0;
   out_8148603243751150192[22] = 0;
   out_8148603243751150192[23] = 0;
   out_8148603243751150192[24] = 0;
   out_8148603243751150192[25] = 0;
   out_8148603243751150192[26] = 1;
   out_8148603243751150192[27] = 0;
   out_8148603243751150192[28] = 0;
   out_8148603243751150192[29] = 0;
   out_8148603243751150192[30] = 0;
   out_8148603243751150192[31] = 0;
   out_8148603243751150192[32] = 0;
   out_8148603243751150192[33] = 0;
   out_8148603243751150192[34] = 0;
   out_8148603243751150192[35] = 0;
   out_8148603243751150192[36] = 0;
   out_8148603243751150192[37] = 0;
   out_8148603243751150192[38] = 0;
   out_8148603243751150192[39] = 0;
   out_8148603243751150192[40] = 0;
   out_8148603243751150192[41] = 0;
   out_8148603243751150192[42] = 0;
   out_8148603243751150192[43] = 0;
   out_8148603243751150192[44] = 0;
   out_8148603243751150192[45] = 0;
   out_8148603243751150192[46] = 0;
   out_8148603243751150192[47] = 0;
   out_8148603243751150192[48] = 0;
   out_8148603243751150192[49] = 1;
   out_8148603243751150192[50] = 0;
   out_8148603243751150192[51] = 0;
   out_8148603243751150192[52] = 0;
   out_8148603243751150192[53] = 0;
   out_8148603243751150192[54] = 0;
   out_8148603243751150192[55] = 0;
   out_8148603243751150192[56] = 0;
   out_8148603243751150192[57] = 0;
   out_8148603243751150192[58] = 0;
   out_8148603243751150192[59] = 0;
   out_8148603243751150192[60] = 0;
   out_8148603243751150192[61] = 0;
   out_8148603243751150192[62] = 0;
   out_8148603243751150192[63] = 0;
   out_8148603243751150192[64] = 0;
   out_8148603243751150192[65] = 0;
   out_8148603243751150192[66] = 0;
   out_8148603243751150192[67] = 0;
   out_8148603243751150192[68] = 0;
   out_8148603243751150192[69] = 0;
   out_8148603243751150192[70] = 0;
   out_8148603243751150192[71] = 0;
   out_8148603243751150192[72] = 1;
   out_8148603243751150192[73] = 0;
   out_8148603243751150192[74] = 0;
   out_8148603243751150192[75] = 0;
   out_8148603243751150192[76] = 0;
   out_8148603243751150192[77] = 0;
   out_8148603243751150192[78] = 0;
   out_8148603243751150192[79] = 0;
   out_8148603243751150192[80] = 0;
   out_8148603243751150192[81] = 0;
   out_8148603243751150192[82] = 0;
   out_8148603243751150192[83] = 0;
   out_8148603243751150192[84] = 0;
   out_8148603243751150192[85] = 0;
   out_8148603243751150192[86] = 0;
   out_8148603243751150192[87] = 0;
}
void h_13(double *state, double *unused, double *out_504688405213454300) {
   out_504688405213454300[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_504688405213454300[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_504688405213454300[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_758218849203997542) {
   out_758218849203997542[0] = 0;
   out_758218849203997542[1] = 0;
   out_758218849203997542[2] = 0;
   out_758218849203997542[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_758218849203997542[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_758218849203997542[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_758218849203997542[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_758218849203997542[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_758218849203997542[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_758218849203997542[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_758218849203997542[10] = 0;
   out_758218849203997542[11] = 0;
   out_758218849203997542[12] = 0;
   out_758218849203997542[13] = 0;
   out_758218849203997542[14] = 0;
   out_758218849203997542[15] = 0;
   out_758218849203997542[16] = 0;
   out_758218849203997542[17] = 0;
   out_758218849203997542[18] = 0;
   out_758218849203997542[19] = 0;
   out_758218849203997542[20] = 0;
   out_758218849203997542[21] = 0;
   out_758218849203997542[22] = 0;
   out_758218849203997542[23] = 0;
   out_758218849203997542[24] = 0;
   out_758218849203997542[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_758218849203997542[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_758218849203997542[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_758218849203997542[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_758218849203997542[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_758218849203997542[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_758218849203997542[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_758218849203997542[32] = 0;
   out_758218849203997542[33] = 0;
   out_758218849203997542[34] = 0;
   out_758218849203997542[35] = 0;
   out_758218849203997542[36] = 0;
   out_758218849203997542[37] = 0;
   out_758218849203997542[38] = 0;
   out_758218849203997542[39] = 0;
   out_758218849203997542[40] = 0;
   out_758218849203997542[41] = 0;
   out_758218849203997542[42] = 0;
   out_758218849203997542[43] = 0;
   out_758218849203997542[44] = 0;
   out_758218849203997542[45] = 0;
   out_758218849203997542[46] = 0;
   out_758218849203997542[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_758218849203997542[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_758218849203997542[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_758218849203997542[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_758218849203997542[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_758218849203997542[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_758218849203997542[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_758218849203997542[54] = 0;
   out_758218849203997542[55] = 0;
   out_758218849203997542[56] = 0;
   out_758218849203997542[57] = 0;
   out_758218849203997542[58] = 0;
   out_758218849203997542[59] = 0;
   out_758218849203997542[60] = 0;
   out_758218849203997542[61] = 0;
   out_758218849203997542[62] = 0;
   out_758218849203997542[63] = 0;
   out_758218849203997542[64] = 0;
   out_758218849203997542[65] = 0;
}
void h_14(double *state, double *unused, double *out_8439246969304359371) {
   out_8439246969304359371[0] = state[10];
   out_8439246969304359371[1] = state[11];
   out_8439246969304359371[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7889459912202474962) {
   out_7889459912202474962[0] = 0;
   out_7889459912202474962[1] = 0;
   out_7889459912202474962[2] = 0;
   out_7889459912202474962[3] = 0;
   out_7889459912202474962[4] = 0;
   out_7889459912202474962[5] = 0;
   out_7889459912202474962[6] = 0;
   out_7889459912202474962[7] = 0;
   out_7889459912202474962[8] = 0;
   out_7889459912202474962[9] = 0;
   out_7889459912202474962[10] = 1;
   out_7889459912202474962[11] = 0;
   out_7889459912202474962[12] = 0;
   out_7889459912202474962[13] = 0;
   out_7889459912202474962[14] = 0;
   out_7889459912202474962[15] = 0;
   out_7889459912202474962[16] = 0;
   out_7889459912202474962[17] = 0;
   out_7889459912202474962[18] = 0;
   out_7889459912202474962[19] = 0;
   out_7889459912202474962[20] = 0;
   out_7889459912202474962[21] = 0;
   out_7889459912202474962[22] = 0;
   out_7889459912202474962[23] = 0;
   out_7889459912202474962[24] = 0;
   out_7889459912202474962[25] = 0;
   out_7889459912202474962[26] = 0;
   out_7889459912202474962[27] = 0;
   out_7889459912202474962[28] = 0;
   out_7889459912202474962[29] = 0;
   out_7889459912202474962[30] = 0;
   out_7889459912202474962[31] = 0;
   out_7889459912202474962[32] = 0;
   out_7889459912202474962[33] = 1;
   out_7889459912202474962[34] = 0;
   out_7889459912202474962[35] = 0;
   out_7889459912202474962[36] = 0;
   out_7889459912202474962[37] = 0;
   out_7889459912202474962[38] = 0;
   out_7889459912202474962[39] = 0;
   out_7889459912202474962[40] = 0;
   out_7889459912202474962[41] = 0;
   out_7889459912202474962[42] = 0;
   out_7889459912202474962[43] = 0;
   out_7889459912202474962[44] = 0;
   out_7889459912202474962[45] = 0;
   out_7889459912202474962[46] = 0;
   out_7889459912202474962[47] = 0;
   out_7889459912202474962[48] = 0;
   out_7889459912202474962[49] = 0;
   out_7889459912202474962[50] = 0;
   out_7889459912202474962[51] = 0;
   out_7889459912202474962[52] = 0;
   out_7889459912202474962[53] = 0;
   out_7889459912202474962[54] = 0;
   out_7889459912202474962[55] = 0;
   out_7889459912202474962[56] = 1;
   out_7889459912202474962[57] = 0;
   out_7889459912202474962[58] = 0;
   out_7889459912202474962[59] = 0;
   out_7889459912202474962[60] = 0;
   out_7889459912202474962[61] = 0;
   out_7889459912202474962[62] = 0;
   out_7889459912202474962[63] = 0;
   out_7889459912202474962[64] = 0;
   out_7889459912202474962[65] = 0;
}
void h_33(double *state, double *unused, double *out_5584032496057928490) {
   out_5584032496057928490[0] = state[16];
   out_5584032496057928490[1] = state[17];
   out_5584032496057928490[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4261102402471089324) {
   out_4261102402471089324[0] = 0;
   out_4261102402471089324[1] = 0;
   out_4261102402471089324[2] = 0;
   out_4261102402471089324[3] = 0;
   out_4261102402471089324[4] = 0;
   out_4261102402471089324[5] = 0;
   out_4261102402471089324[6] = 0;
   out_4261102402471089324[7] = 0;
   out_4261102402471089324[8] = 0;
   out_4261102402471089324[9] = 0;
   out_4261102402471089324[10] = 0;
   out_4261102402471089324[11] = 0;
   out_4261102402471089324[12] = 0;
   out_4261102402471089324[13] = 0;
   out_4261102402471089324[14] = 0;
   out_4261102402471089324[15] = 0;
   out_4261102402471089324[16] = 1;
   out_4261102402471089324[17] = 0;
   out_4261102402471089324[18] = 0;
   out_4261102402471089324[19] = 0;
   out_4261102402471089324[20] = 0;
   out_4261102402471089324[21] = 0;
   out_4261102402471089324[22] = 0;
   out_4261102402471089324[23] = 0;
   out_4261102402471089324[24] = 0;
   out_4261102402471089324[25] = 0;
   out_4261102402471089324[26] = 0;
   out_4261102402471089324[27] = 0;
   out_4261102402471089324[28] = 0;
   out_4261102402471089324[29] = 0;
   out_4261102402471089324[30] = 0;
   out_4261102402471089324[31] = 0;
   out_4261102402471089324[32] = 0;
   out_4261102402471089324[33] = 0;
   out_4261102402471089324[34] = 0;
   out_4261102402471089324[35] = 0;
   out_4261102402471089324[36] = 0;
   out_4261102402471089324[37] = 0;
   out_4261102402471089324[38] = 0;
   out_4261102402471089324[39] = 1;
   out_4261102402471089324[40] = 0;
   out_4261102402471089324[41] = 0;
   out_4261102402471089324[42] = 0;
   out_4261102402471089324[43] = 0;
   out_4261102402471089324[44] = 0;
   out_4261102402471089324[45] = 0;
   out_4261102402471089324[46] = 0;
   out_4261102402471089324[47] = 0;
   out_4261102402471089324[48] = 0;
   out_4261102402471089324[49] = 0;
   out_4261102402471089324[50] = 0;
   out_4261102402471089324[51] = 0;
   out_4261102402471089324[52] = 0;
   out_4261102402471089324[53] = 0;
   out_4261102402471089324[54] = 0;
   out_4261102402471089324[55] = 0;
   out_4261102402471089324[56] = 0;
   out_4261102402471089324[57] = 0;
   out_4261102402471089324[58] = 0;
   out_4261102402471089324[59] = 0;
   out_4261102402471089324[60] = 0;
   out_4261102402471089324[61] = 0;
   out_4261102402471089324[62] = 1;
   out_4261102402471089324[63] = 0;
   out_4261102402471089324[64] = 0;
   out_4261102402471089324[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_69284044656233370) {
  H(in_vec, out_69284044656233370);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4029443404658213361) {
  err_fun(nom_x, delta_x, out_4029443404658213361);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3045923156268303314) {
  inv_err_fun(nom_x, true_x, out_3045923156268303314);
}
void live_H_mod_fun(double *state, double *out_3408748072006619981) {
  H_mod_fun(state, out_3408748072006619981);
}
void live_f_fun(double *state, double dt, double *out_3128910193456553890) {
  f_fun(state,  dt, out_3128910193456553890);
}
void live_F_fun(double *state, double dt, double *out_8640737457769697043) {
  F_fun(state,  dt, out_8640737457769697043);
}
void live_h_4(double *state, double *unused, double *out_1029957331960551422) {
  h_4(state, unused, out_1029957331960551422);
}
void live_H_4(double *state, double *unused, double *out_7668422609226997312) {
  H_4(state, unused, out_7668422609226997312);
}
void live_h_9(double *state, double *unused, double *out_8439246969304359371) {
  h_9(state, unused, out_8439246969304359371);
}
void live_H_9(double *state, double *unused, double *out_7889459912202474962) {
  H_9(state, unused, out_7889459912202474962);
}
void live_h_10(double *state, double *unused, double *out_9153137073887306784) {
  h_10(state, unused, out_9153137073887306784);
}
void live_H_10(double *state, double *unused, double *out_7164784566698278522) {
  H_10(state, unused, out_7164784566698278522);
}
void live_h_12(double *state, double *unused, double *out_4151712998878462505) {
  h_12(state, unused, out_4151712998878462505);
}
void live_H_12(double *state, double *unused, double *out_8289521634274590979) {
  H_12(state, unused, out_8289521634274590979);
}
void live_h_31(double *state, double *unused, double *out_2182452030772518184) {
  h_31(state, unused, out_2182452030772518184);
}
void live_H_31(double *state, double *unused, double *out_7411659407109946928) {
  H_31(state, unused, out_7411659407109946928);
}
void live_h_32(double *state, double *unused, double *out_4005491774866910250) {
  h_32(state, unused, out_4005491774866910250);
}
void live_H_32(double *state, double *unused, double *out_8148603243751150192) {
  H_32(state, unused, out_8148603243751150192);
}
void live_h_13(double *state, double *unused, double *out_504688405213454300) {
  h_13(state, unused, out_504688405213454300);
}
void live_H_13(double *state, double *unused, double *out_758218849203997542) {
  H_13(state, unused, out_758218849203997542);
}
void live_h_14(double *state, double *unused, double *out_8439246969304359371) {
  h_14(state, unused, out_8439246969304359371);
}
void live_H_14(double *state, double *unused, double *out_7889459912202474962) {
  H_14(state, unused, out_7889459912202474962);
}
void live_h_33(double *state, double *unused, double *out_5584032496057928490) {
  h_33(state, unused, out_5584032496057928490);
}
void live_H_33(double *state, double *unused, double *out_4261102402471089324) {
  H_33(state, unused, out_4261102402471089324);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
